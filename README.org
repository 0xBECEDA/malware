#+STARTUP: showall indent hidestars

* Интро

Этот проект представляет собой небольшой учебный вирус, написанный под
Linux Ubuntu 16.04. Это свободный проект, вы можете его как угодно
модифицировать и арспространять согласно лицензии GNU General Public
License v.2.

Проект предназначен для ознакомления с работой бинарных файлов,
процессов загрузки и линковки. Работа вируса считается успешной, если
ему удалось заразить любой ELF-файл, расположенный в одной с ним
директории.
Проект не предназначен для обхода антивирусов или любой
противозаконной деятельности.

Для создания мишеней для заражения проект использует утилиты ELFkickers,
чей код был скачан отсюда
http://www.muppetlabs.com/~breadbox/software/elfkickers.html и
может распространяться и модифицироваться согласно GNU General Public
License v.2.

Чтоб запустить проект выполните следующее:
- установите редактор кода ~emacs~, если у вас его еще нет
- откройте в нем файл article4.org
- выпоните тангл - сборку - проекта С-c C-v t
  После тангла у вас появится файл virus_code.s, который включает в
  себя весь код вируса
- выполните make
- запустите вирус

Makefile состит из целей:
-~all~ - выполняет все ниже указанные цели кроме clean
-~virus~ - компилирует файл вируса, если он есть
-~sstrip~ - компилирует утилиты ELFkickers
-~victims~ - компилирует все тестовые мешени по два раза, чтоб дубликат
каждой мишени можно было стрипнуть
- ~stripped_victims~ удаляет заголвоки секций из каждого дубликата
  мишени. Таким образом есть два набора мишеней: с заголовками секций и
  без них
- ~clean~ - удаляет все бинарные файлы

Проект состоит из:
- папки с утилитами ELFkickers, которая содержит утилиту sstrip - она
  позволяет обрезать таблицу заголвоков секций у исполняемых файлов
- файлов тестовых мишеней
- файла article4.org, который представляет собой полное описание
  реализации проекта и объеянение всего его кода
- мэйкфайла, который компилирует вирус, мишени для него и утилиты ELFkickers

* Как убедиться, что вирус работает

Выберете любой бинарник мишени. Вам нужно убедиться, что заражение
действительно состоялось. Если это так - у файла изменится адрес точки
входа.
Так выглядит точка входа мишени ~hello~ до заражения файла:

#+BEGIN_SRC sh
  $ readelf -h hello | grep Адрес

  Адрес точки входа:               0x400550
#+END_SRC

Запустите мишень, убедитесь, что она работает:

#+BEGIN_SRC sh
  $ ./hello

  Hello world!
  Current local time and date: Tue Mar  2 02:35:00 2021
#+END_SRC

Запустите вирус, вы увидите лог заражения - какие файлы вирус поптылася
заразить - и какой файл в итоге заразил:

#+BEGIN_SRC sh
  $ ./virus

  asm file: infection try
  hello file: infection try
  hello is successfully infected
#+END_SRC

Так выглядит точка входа мишени ~hello~ после заражения:

#+BEGIN_SRC sh
  $ readelf -h hello | grep Адрес

  Адрес точки входа:               0x802b28
#+END_SRC

Запустите зараженный файл, чтоб убедиться, что он не сломан:

#+BEGIN_SRC sh
  $ ./hello

  asm file: infection try
  hello file: infection try
  .#ex2.txt file: infection try
  final_version.org file: infection try
  hello_stripped file: infection try
  hello_stripped is successfully infected
  Hello world!
  Current local time and date: Tue Mar  2 02:30:18 2021
#+END_SRC

Вы видите лог заражения, какой файл в итоге был заражен, и вывод ~prinf~
из самой жертвы.

Заражение прошло успешно.

Учтите, что вирус заражает ближайший незараженный файл. Поэтому если
выбранная вами мишень не заразилась сразу же, просто продолжайте
запускать вирус, пока он не дойдет до вашей мишени.
