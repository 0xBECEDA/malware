	.file	"example.s"
	.text
	.globl	_start
	.type	_start, @function

num:
    .long ~0x3FF

configure_stack:

    mov $num, %rax    # получили число-кальку
    mov (%rax), %rdi

    call _start2

_start:
    call configure_stack

_start2:

    pop %rax        # взяли адрес _start и coхранили его
    mov %rax, %rdx

    and %rdi, %rax  # выровняли его
    mov %rax, %rcx  # сохранили выровненный адрес

    call stack_end

_count_memory:

    pop %rsi        # взяли адрес stack_end
    mov %rsi, %r8   # сохранили его

    sub %rcx, %rsi  # посчитали размер памяти (от выровненного адреса до конца программы)

    mov %rcx, %rdi
    mov $7, %rdx
    mov $10, %rax

    syscall

    mov $5, %rax
    sub %rax, %r8
    mov %r8, %rsp
    push %rsp
    call test

    mov $60, %rax
    mov $0, %rdi
    syscall

test:

    mov $3, %rax
    mov $4, %rcx
    add %rcx, %rax
    ret

stack_begin:
    .space 1000, 0
stack_end:
    call _count_memory
