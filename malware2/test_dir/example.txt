
example:     формат файла elf64-x86-64


Дизассемблирование раздела .interp:

0000000000400270 <.interp>:
  400270:	2f                   	(bad)  
  400271:	6c                   	insb   (%dx),%es:(%rdi)
  400272:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400279:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40027e:	78 2d                	js     4002ad <_init-0x153>
  400280:	78 38                	js     4002ba <_init-0x146>
  400282:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400288:	6f                   	outsl  %ds:(%rsi),(%dx)
  400289:	2e 32 00             	xor    %cs:(%rax),%al

Дизассемблирование раздела .note.ABI-tag:

000000000040028c <.note.ABI-tag>:
  40028c:	04 00                	add    $0x0,%al
  40028e:	00 00                	add    %al,(%rax)
  400290:	10 00                	adc    %al,(%rax)
  400292:	00 00                	add    %al,(%rax)
  400294:	01 00                	add    %eax,(%rax)
  400296:	00 00                	add    %al,(%rax)
  400298:	47                   	rex.RXB
  400299:	4e 55                	rex.WRX push %rbp
  40029b:	00 00                	add    %al,(%rax)
  40029d:	00 00                	add    %al,(%rax)
  40029f:	00 02                	add    %al,(%rdx)
  4002a1:	00 00                	add    %al,(%rax)
  4002a3:	00 06                	add    %al,(%rsi)
  4002a5:	00 00                	add    %al,(%rax)
  4002a7:	00 20                	add    %ah,(%rax)
  4002a9:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .note.gnu.build-id:

00000000004002ac <.note.gnu.build-id>:
  4002ac:	04 00                	add    $0x0,%al
  4002ae:	00 00                	add    %al,(%rax)
  4002b0:	14 00                	adc    $0x0,%al
  4002b2:	00 00                	add    %al,(%rax)
  4002b4:	03 00                	add    (%rax),%eax
  4002b6:	00 00                	add    %al,(%rax)
  4002b8:	47                   	rex.RXB
  4002b9:	4e 55                	rex.WRX push %rbp
  4002bb:	00 bf b1 7a af ed    	add    %bh,-0x1250854f(%rdi)
  4002c1:	7a 8a                	jp     40024d <_init-0x1b3>
  4002c3:	3f                   	(bad)  
  4002c4:	1a 09                	sbb    (%rcx),%cl
  4002c6:	bb ca 6b e2 aa       	mov    $0xaae26bca,%ebx
  4002cb:	ab                   	stos   %eax,%es:(%rdi)
  4002cc:	d9                   	.byte 0xd9
  4002cd:	b0 b3                	mov    $0xb3,%al
  4002cf:	04                   	.byte 0x4

Дизассемблирование раздела .gnu.hash:

00000000004002d0 <.gnu.hash>:
  4002d0:	01 00                	add    %eax,(%rax)
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	01 00                	add    %eax,(%rax)
  4002d6:	00 00                	add    %al,(%rax)
  4002d8:	01 00                	add    %eax,(%rax)
	...

Дизассемблирование раздела .dynsym:

00000000004002f0 <.dynsym>:
	...
  400308:	0b 00                	or     (%rax),%eax
  40030a:	00 00                	add    %al,(%rax)
  40030c:	12 00                	adc    (%rax),%al
	...
  40031e:	00 00                	add    %al,(%rax)
  400320:	12 00                	adc    (%rax),%al
  400322:	00 00                	add    %al,(%rax)
  400324:	12 00                	adc    (%rax),%al
	...
  400336:	00 00                	add    %al,(%rax)
  400338:	24 00                	and    $0x0,%al
  40033a:	00 00                	add    %al,(%rax)
  40033c:	20 00                	and    %al,(%rax)
	...

Дизассемблирование раздела .dynstr:

0000000000400350 <.dynstr>:
  400350:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400354:	63 2e                	movslq (%rsi),%ebp
  400356:	73 6f                	jae    4003c7 <_init-0x39>
  400358:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  40035d:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  400364:	6c                   	insb   (%dx),%es:(%rdi)
  400365:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40036c:	72 74                	jb     4003e2 <_init-0x1e>
  40036e:	5f                   	pop    %rdi
  40036f:	6d                   	insl   (%dx),%es:(%rdi)
  400370:	61                   	(bad)  
  400371:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400378:	6f                   	outsl  %ds:(%rsi),(%dx)
  400379:	6e                   	outsb  %ds:(%rsi),(%dx)
  40037a:	5f                   	pop    %rdi
  40037b:	73 74                	jae    4003f1 <_init-0xf>
  40037d:	61                   	(bad)  
  40037e:	72 74                	jb     4003f4 <_init-0xc>
  400380:	5f                   	pop    %rdi
  400381:	5f                   	pop    %rdi
  400382:	00 47 4c             	add    %al,0x4c(%rdi)
  400385:	49                   	rex.WB
  400386:	42                   	rex.X
  400387:	43 5f                	rex.XB pop %r15
  400389:	32 2e                	xor    (%rsi),%ch
  40038b:	32 2e                	xor    (%rsi),%ch
  40038d:	35                   	.byte 0x35
	...

Дизассемблирование раздела .gnu.version:

0000000000400390 <.gnu.version>:
  400390:	00 00                	add    %al,(%rax)
  400392:	02 00                	add    (%rax),%al
  400394:	02 00                	add    (%rax),%al
	...

Дизассемблирование раздела .gnu.version_r:

0000000000400398 <.gnu.version_r>:
  400398:	01 00                	add    %eax,(%rax)
  40039a:	01 00                	add    %eax,(%rax)
  40039c:	01 00                	add    %eax,(%rax)
  40039e:	00 00                	add    %al,(%rax)
  4003a0:	10 00                	adc    %al,(%rax)
  4003a2:	00 00                	add    %al,(%rax)
  4003a4:	00 00                	add    %al,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	75 1a                	jne    4003c4 <_init-0x3c>
  4003aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003b0:	33 00                	xor    (%rax),%eax
  4003b2:	00 00                	add    %al,(%rax)
  4003b4:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .rela.dyn:

00000000004003b8 <.rela.dyn>:
  4003b8:	40 10 60 00          	adc    %spl,0x0(%rax)
  4003bc:	00 00                	add    %al,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	06                   	(bad)  
  4003c1:	00 00                	add    %al,(%rax)
  4003c3:	00 03                	add    %al,(%rbx)
	...

Дизассемблирование раздела .rela.plt:

00000000004003d0 <.rela.plt>:
  4003d0:	60                   	(bad)  
  4003d1:	10 60 00             	adc    %ah,0x0(%rax)
  4003d4:	00 00                	add    %al,(%rax)
  4003d6:	00 00                	add    %al,(%rax)
  4003d8:	07                   	(bad)  
  4003d9:	00 00                	add    %al,(%rax)
  4003db:	00 01                	add    %al,(%rcx)
	...
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 68 10             	add    %ch,0x10(%rax)
  4003ea:	60                   	(bad)  
  4003eb:	00 00                	add    %al,(%rax)
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 07                	add    %al,(%rdi)
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 02                	add    %al,(%rdx)
	...

Дизассемблирование раздела .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 601030 <_DYNAMIC+0x1d0>
  40040b:	48 85 c0             	test   %rax,%rax
  40040e:	74 05                	je     400415 <_init+0x15>
  400410:	e8 43 00 00 00       	callq  400458 <__libc_start_main@plt+0x10>
  400415:	48 83 c4 08          	add    $0x8,%rsp
  400419:	c3                   	retq   

Дизассемблирование раздела .plt:

0000000000400428 <printf@plt-0x10>:
  400428:	ff 35 12 0c 20 00    	pushq  0x200c12(%rip)        # 601040 <_DYNAMIC+0x1e0>
  40042e:	ff 25 14 0c 20 00    	jmpq   *0x200c14(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_>
  400434:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400438 <printf@plt>:
  400438:	ff 25 12 0c 20 00    	jmpq   *0x200c12(%rip)        # 601050 <_GLOBAL_OFFSET_TABLE_+0x8>
  40043e:	68 00 00 00 00       	pushq  $0x0
  400443:	e9 e0 ff ff ff       	jmpq   400428 <_init+0x28>

0000000000400448 <__libc_start_main@plt>:
  400448:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 601058 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044e:	68 01 00 00 00       	pushq  $0x1
  400453:	e9 d0 ff ff ff       	jmpq   400428 <_init+0x28>

Дизассемблирование раздела .plt.got:

0000000000400458 <.plt.got>:
  400458:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601030 <_DYNAMIC+0x1d0>
  40045e:	66 90                	xchg   %ax,%ax

Дизассемблирование раздела .text:

0000000000400468 <_start>:
  400468:	31 ed                	xor    %ebp,%ebp
  40046a:	49 89 d1             	mov    %rdx,%r9
  40046d:	5e                   	pop    %rsi
  40046e:	48 89 e2             	mov    %rsp,%rdx
  400471:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400475:	50                   	push   %rax
  400476:	54                   	push   %rsp
  400477:	49 c7 c0 e0 05 40 00 	mov    $0x4005e0,%r8
  40047e:	48 c7 c1 70 05 40 00 	mov    $0x400570,%rcx
  400485:	48 c7 c7 26 05 40 00 	mov    $0x400526,%rdi
  40048c:	e8 b7 ff ff ff       	callq  400448 <__libc_start_main@plt>
  400491:	f4                   	hlt    
  400492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400498 <deregister_tm_clones>:
  400498:	b8 3f 10 60 00       	mov    $0x60103f,%eax
  40049d:	55                   	push   %rbp
  40049e:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  4004a4:	48 83 f8 0e          	cmp    $0xe,%rax
  4004a8:	48 89 e5             	mov    %rsp,%rbp
  4004ab:	76 1b                	jbe    4004c8 <deregister_tm_clones+0x30>
  4004ad:	b8 00 00 00 00       	mov    $0x0,%eax
  4004b2:	48 85 c0             	test   %rax,%rax
  4004b5:	74 11                	je     4004c8 <deregister_tm_clones+0x30>
  4004b7:	5d                   	pop    %rbp
  4004b8:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004bd:	ff e0                	jmpq   *%rax
  4004bf:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004c6:	00 00 
  4004c8:	5d                   	pop    %rbp
  4004c9:	c3                   	retq   
  4004ca:	0f 1f 40 00          	nopl   0x0(%rax)
  4004ce:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004d5:	00 00 00 

00000000004004d8 <register_tm_clones>:
  4004d8:	be 38 10 60 00       	mov    $0x601038,%esi
  4004dd:	55                   	push   %rbp
  4004de:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  4004e5:	48 c1 fe 03          	sar    $0x3,%rsi
  4004e9:	48 89 e5             	mov    %rsp,%rbp
  4004ec:	48 89 f0             	mov    %rsi,%rax
  4004ef:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004f3:	48 01 c6             	add    %rax,%rsi
  4004f6:	48 d1 fe             	sar    %rsi
  4004f9:	74 15                	je     400510 <register_tm_clones+0x38>
  4004fb:	b8 00 00 00 00       	mov    $0x0,%eax
  400500:	48 85 c0             	test   %rax,%rax
  400503:	74 0b                	je     400510 <register_tm_clones+0x38>
  400505:	5d                   	pop    %rbp
  400506:	bf 38 10 60 00       	mov    $0x601038,%edi
  40050b:	ff e0                	jmpq   *%rax
  40050d:	0f 1f 00             	nopl   (%rax)
  400510:	5d                   	pop    %rbp
  400511:	c3                   	retq   
  400512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400518 <__do_global_dtors_aux>:
  400518:	80 3d 51 0b 20 00 00 	cmpb   $0x0,0x200b51(%rip)        # 601070 <__data_start>
  40051f:	75 11                	jne    400532 <__do_global_dtors_aux+0x1a>
  400521:	55                   	push   %rbp
  400522:	48 89 e5             	mov    %rsp,%rbp
  400525:	e8 6e ff ff ff       	callq  400498 <deregister_tm_clones>
  40052a:	5d                   	pop    %rbp
  40052b:	c6 05 3e 0b 20 00 01 	movb   $0x1,0x200b3e(%rip)        # 601070 <__data_start>
  400532:	f3 c3                	repz retq 
  400534:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400538 <frame_dummy>:
  400538:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40053d:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400541:	75 05                	jne    400548 <frame_dummy+0x10>
  400543:	eb 93                	jmp    4004d8 <register_tm_clones>
  400545:	0f 1f 00             	nopl   (%rax)
  400548:	b8 00 00 00 00       	mov    $0x0,%eax
  40054d:	48 85 c0             	test   %rax,%rax
  400550:	74 f1                	je     400543 <frame_dummy+0xb>
  400552:	55                   	push   %rbp
  400553:	48 89 e5             	mov    %rsp,%rbp
  400556:	ff d0                	callq  *%rax
  400558:	5d                   	pop    %rbp
  400559:	e9 7a ff ff ff       	jmpq   4004d8 <register_tm_clones>

000000000040055e <main>:
  40055e:	55                   	push   %rbp
  40055f:	48 89 e5             	mov    %rsp,%rbp
  400562:	48 83 ec 10          	sub    $0x10,%rsp
  400566:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
  40056d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400570:	89 c6                	mov    %eax,%esi
  400572:	bf f4 05 40 00       	mov    $0x4005f4,%edi
  400577:	b8 00 00 00 00       	mov    $0x0,%eax
  40057c:	e8 b7 fe ff ff       	callq  400438 <printf@plt>
  400581:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400584:	89 c6                	mov    %eax,%esi
  400586:	bf f4 05 40 00       	mov    $0x4005f4,%edi
  40058b:	b8 00 00 00 00       	mov    $0x0,%eax
  400590:	e8 a3 fe ff ff       	callq  400438 <printf@plt>
  400595:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400598:	c9                   	leaveq 
  400599:	c3                   	retq   
  40059a:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005a1:	00 00 00 
  4005a4:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005a8 <__libc_csu_init>:
  4005a8:	41 57                	push   %r15
  4005aa:	41 56                	push   %r14
  4005ac:	41 89 ff             	mov    %edi,%r15d
  4005af:	41 55                	push   %r13
  4005b1:	41 54                	push   %r12
  4005b3:	4c 8d 25 8e 08 20 00 	lea    0x20088e(%rip),%r12        # 600e48 <__frame_dummy_init_array_entry>
  4005ba:	55                   	push   %rbp
  4005bb:	48 8d 2d 8e 08 20 00 	lea    0x20088e(%rip),%rbp        # 600e50 <__init_array_end>
  4005c2:	53                   	push   %rbx
  4005c3:	49 89 f6             	mov    %rsi,%r14
  4005c6:	49 89 d5             	mov    %rdx,%r13
  4005c9:	4c 29 e5             	sub    %r12,%rbp
  4005cc:	48 83 ec 08          	sub    $0x8,%rsp
  4005d0:	48 c1 fd 03          	sar    $0x3,%rbp
  4005d4:	e8 27 fe ff ff       	callq  400400 <_init>
  4005d9:	48 85 ed             	test   %rbp,%rbp
  4005dc:	74 20                	je     4005fe <__libc_csu_init+0x56>
  4005de:	31 db                	xor    %ebx,%ebx
  4005e0:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005e7:	00 
  4005e8:	4c 89 ea             	mov    %r13,%rdx
  4005eb:	4c 89 f6             	mov    %r14,%rsi
  4005ee:	44 89 ff             	mov    %r15d,%edi
  4005f1:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005f5:	48 83 c3 01          	add    $0x1,%rbx
  4005f9:	48 39 eb             	cmp    %rbp,%rbx
  4005fc:	75 ea                	jne    4005e8 <__libc_csu_init+0x40>
  4005fe:	48 83 c4 08          	add    $0x8,%rsp
  400602:	5b                   	pop    %rbx
  400603:	5d                   	pop    %rbp
  400604:	41 5c                	pop    %r12
  400606:	41 5d                	pop    %r13
  400608:	41 5e                	pop    %r14
  40060a:	41 5f                	pop    %r15
  40060c:	c3                   	retq   
  40060d:	90                   	nop
  40060e:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400615:	00 00 00 

0000000000400618 <__libc_csu_fini>:
  400618:	f3 c3                	repz retq 

Дизассемблирование раздела .fini:

000000000040061c <_fini>:
  40061c:	48 83 ec 08          	sub    $0x8,%rsp
  400620:	48 83 c4 08          	add    $0x8,%rsp
  400624:	c3                   	retq   

Дизассемблирование раздела .rodata:

0000000000400628 <_IO_stdin_used>:
  400628:	01 00                	add    %eax,(%rax)
  40062a:	02 00                	add    (%rax),%al
  40062c:	48                   	rex.W
  40062d:	65 6c                	gs insb (%dx),%es:(%rdi)
  40062f:	6c                   	insb   (%dx),%es:(%rdi)
  400630:	6f                   	outsl  %ds:(%rsi),(%dx)
  400631:	20 25 64 20 74 69    	and    %ah,0x69742064(%rip)        # 69b4269b <_end+0x69541613>
  400637:	6d                   	insl   (%dx),%es:(%rdi)
  400638:	65 73 0a             	gs jae 400645 <__GNU_EH_FRAME_HDR+0x9>
	...

Дизассемблирование раздела .eh_frame_hdr:

000000000040063c <__GNU_EH_FRAME_HDR>:
  40063c:	01 1b                	add    %ebx,(%rbx)
  40063e:	03 3b                	add    (%rbx),%edi
  400640:	30 00                	xor    %al,(%rax)
  400642:	00 00                	add    %al,(%rax)
  400644:	05 00 00 00 ec       	add    $0xec000000,%eax
  400649:	fd                   	std    
  40064a:	ff                   	(bad)  
  40064b:	ff                   	(bad)  
  40064c:	7c 00                	jl     40064e <__GNU_EH_FRAME_HDR+0x12>
  40064e:	00 00                	add    %al,(%rax)
  400650:	2c fe                	sub    $0xfe,%al
  400652:	ff                   	(bad)  
  400653:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
  400657:	00 22                	add    %ah,(%rdx)
  400659:	ff                   	(bad)  
  40065a:	ff                   	(bad)  
  40065b:	ff a4 00 00 00 6c ff 	jmpq   *-0x940000(%rax,%rax,1)
  400662:	ff                   	(bad)  
  400663:	ff c4                	inc    %esp
  400665:	00 00                	add    %al,(%rax)
  400667:	00 dc                	add    %bl,%ah
  400669:	ff                   	(bad)  
  40066a:	ff                   	(bad)  
  40066b:	ff 0c 01             	decl   (%rcx,%rax,1)
	...

Дизассемблирование раздела .eh_frame:

0000000000400670 <__FRAME_END__-0xf0>:
  400670:	14 00                	adc    $0x0,%al
  400672:	00 00                	add    %al,(%rax)
  400674:	00 00                	add    %al,(%rax)
  400676:	00 00                	add    %al,(%rax)
  400678:	01 7a 52             	add    %edi,0x52(%rdx)
  40067b:	00 01                	add    %al,(%rcx)
  40067d:	78 10                	js     40068f <__GNU_EH_FRAME_HDR+0x53>
  40067f:	01 1b                	add    %ebx,(%rbx)
  400681:	0c 07                	or     $0x7,%al
  400683:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400689:	00 00                	add    %al,(%rax)
  40068b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40068e:	00 00                	add    %al,(%rax)
  400690:	d8 fd                	fdivr  %st(5),%st
  400692:	ff                   	(bad)  
  400693:	ff 2a                	ljmp   *(%rdx)
	...
  40069d:	00 00                	add    %al,(%rax)
  40069f:	00 14 00             	add    %dl,(%rax,%rax,1)
  4006a2:	00 00                	add    %al,(%rax)
  4006a4:	00 00                	add    %al,(%rax)
  4006a6:	00 00                	add    %al,(%rax)
  4006a8:	01 7a 52             	add    %edi,0x52(%rdx)
  4006ab:	00 01                	add    %al,(%rcx)
  4006ad:	78 10                	js     4006bf <__GNU_EH_FRAME_HDR+0x83>
  4006af:	01 1b                	add    %ebx,(%rbx)
  4006b1:	0c 07                	or     $0x7,%al
  4006b3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4006b9:	00 00                	add    %al,(%rax)
  4006bb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4006be:	00 00                	add    %al,(%rax)
  4006c0:	68 fd ff ff 30       	pushq  $0x30fffffd
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 00                	add    %al,(%rax)
  4006c9:	0e                   	(bad)  
  4006ca:	10 46 0e             	adc    %al,0xe(%rsi)
  4006cd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4006d0:	0b 77 08             	or     0x8(%rdi),%esi
  4006d3:	80 00 3f             	addb   $0x3f,(%rax)
  4006d6:	1a 3b                	sbb    (%rbx),%bh
  4006d8:	2a 33                	sub    (%rbx),%dh
  4006da:	24 22                	and    $0x22,%al
  4006dc:	00 00                	add    %al,(%rax)
  4006de:	00 00                	add    %al,(%rax)
  4006e0:	1c 00                	sbb    $0x0,%al
  4006e2:	00 00                	add    %al,(%rax)
  4006e4:	44 00 00             	add    %r8b,(%rax)
  4006e7:	00 76 fe             	add    %dh,-0x2(%rsi)
  4006ea:	ff                   	(bad)  
  4006eb:	ff                   	(bad)  
  4006ec:	3c 00                	cmp    $0x0,%al
  4006ee:	00 00                	add    %al,(%rax)
  4006f0:	00 41 0e             	add    %al,0xe(%rcx)
  4006f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006f9:	77 0c                	ja     400707 <__GNU_EH_FRAME_HDR+0xcb>
  4006fb:	07                   	(bad)  
  4006fc:	08 00                	or     %al,(%rax)
  4006fe:	00 00                	add    %al,(%rax)
  400700:	44 00 00             	add    %r8b,(%rax)
  400703:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  400707:	00 a0 fe ff ff 65    	add    %ah,0x65fffffe(%rax)
  40070d:	00 00                	add    %al,(%rax)
  40070f:	00 00                	add    %al,(%rax)
  400711:	42 0e                	rex.X (bad) 
  400713:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400719:	8e 03                	mov    (%rbx),%es
  40071b:	45 0e                	rex.RB (bad) 
  40071d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400723:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701571 <_end+0xffffffff861004e9>
  400729:	06                   	(bad)  
  40072a:	48 0e                	rex.W (bad) 
  40072c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400732:	72 0e                	jb     400742 <__GNU_EH_FRAME_HDR+0x106>
  400734:	38 41 0e             	cmp    %al,0xe(%rcx)
  400737:	30 41 0e             	xor    %al,0xe(%rcx)
  40073a:	28 42 0e             	sub    %al,0xe(%rdx)
  40073d:	20 42 0e             	and    %al,0xe(%rdx)
  400740:	18 42 0e             	sbb    %al,0xe(%rdx)
  400743:	10 42 0e             	adc    %al,0xe(%rdx)
  400746:	08 00                	or     %al,(%rax)
  400748:	14 00                	adc    $0x0,%al
  40074a:	00 00                	add    %al,(%rax)
  40074c:	ac                   	lods   %ds:(%rsi),%al
  40074d:	00 00                	add    %al,(%rax)
  40074f:	00 c8                	add    %cl,%al
  400751:	fe                   	(bad)  
  400752:	ff                   	(bad)  
  400753:	ff 02                	incl   (%rdx)
	...

0000000000400760 <__FRAME_END__>:
  400760:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .init_array:

0000000000600e48 <__frame_dummy_init_array_entry>:
  600e48:	00 05 40 00 00 00    	add    %al,0x40(%rip)        # 600e8e <_DYNAMIC+0x2e>
	...

Дизассемблирование раздела .fini_array:

0000000000600e50 <__do_global_dtors_aux_fini_array_entry>:
  600e50:	e0 04                	loopne 600e56 <__do_global_dtors_aux_fini_array_entry+0x6>
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .jcr:

0000000000600e58 <__JCR_END__>:
	...

Дизассемблирование раздела .dynamic:

0000000000600e60 <_DYNAMIC>:
  600e60:	01 00                	add    %eax,(%rax)
  600e62:	00 00                	add    %al,(%rax)
  600e64:	00 00                	add    %al,(%rax)
  600e66:	00 00                	add    %al,(%rax)
  600e68:	01 00                	add    %eax,(%rax)
  600e6a:	00 00                	add    %al,(%rax)
  600e6c:	00 00                	add    %al,(%rax)
  600e6e:	00 00                	add    %al,(%rax)
  600e70:	0c 00                	or     $0x0,%al
  600e72:	00 00                	add    %al,(%rax)
  600e74:	00 00                	add    %al,(%rax)
  600e76:	00 00                	add    %al,(%rax)
  600e78:	00 04 40             	add    %al,(%rax,%rax,2)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e85 <_DYNAMIC+0x25>
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 06             	add    %bl,(%rsi,%rax,1)
  600e8a:	40 00 00             	add    %al,(%rax)
  600e8d:	00 00                	add    %al,(%rax)
  600e8f:	00 19                	add    %bl,(%rcx)
  600e91:	00 00                	add    %al,(%rax)
  600e93:	00 00                	add    %al,(%rax)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 48 0e             	add    %cl,0xe(%rax)
  600e9a:	60                   	(bad)  
  600e9b:	00 00                	add    %al,(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 1b                	add    %bl,(%rbx)
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 08                	add    %cl,(%rax)
  600ea9:	00 00                	add    %al,(%rax)
  600eab:	00 00                	add    %al,(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 1a                	add    %bl,(%rdx)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 50 0e             	add    %dl,0xe(%rax)
  600eba:	60                   	(bad)  
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600ec2:	00 00                	add    %al,(%rax)
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	08 00                	or     %al,(%rax)
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	f5                   	cmc    
  600ed1:	fe                   	(bad)  
  600ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 d0                	add    %dl,%al
  600ed9:	02 40 00             	add    0x0(%rax),%al
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	05 00 00 00 00       	add    $0x0,%eax
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 50 03             	add    %dl,0x3(%rax)
  600eea:	40 00 00             	add    %al,(%rax)
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 06                	add    %al,(%rsi)
  600ef1:	00 00                	add    %al,(%rax)
  600ef3:	00 00                	add    %al,(%rax)
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 f0                	add    %dh,%al
  600ef9:	02 40 00             	add    0x0(%rax),%al
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	0a 00                	or     (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	3f                   	(bad)  
  600f09:	00 00                	add    %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 0b                	add    %cl,(%rbx)
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 18                	add    %bl,(%rax)
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600f25 <_DYNAMIC+0xc5>
	...
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 03                	add    %al,(%rbx)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 48 10             	add    %cl,0x10(%rax)
  600f3a:	60                   	(bad)  
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 02                	add    %al,(%rdx)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f52:	00 00                	add    %al,(%rax)
  600f54:	00 00                	add    %al,(%rax)
  600f56:	00 00                	add    %al,(%rax)
  600f58:	07                   	(bad)  
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 17                	add    %dl,(%rdi)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 d0                	add    %dl,%al
  600f69:	03 40 00             	add    0x0(%rax),%eax
  600f6c:	00 00                	add    %al,(%rax)
  600f6e:	00 00                	add    %al,(%rax)
  600f70:	07                   	(bad)  
  600f71:	00 00                	add    %al,(%rax)
  600f73:	00 00                	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 b8 03 40 00 00    	add    %bh,0x4003(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 08                	add    %cl,(%rax)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 18                	add    %bl,(%rax)
  600f89:	00 00                	add    %al,(%rax)
  600f8b:	00 00                	add    %al,(%rax)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 09                	add    %cl,(%rcx)
  600f91:	00 00                	add    %al,(%rax)
  600f93:	00 00                	add    %al,(%rax)
  600f95:	00 00                	add    %al,(%rax)
  600f97:	00 18                	add    %bl,(%rax)
  600f99:	00 00                	add    %al,(%rax)
  600f9b:	00 00                	add    %al,(%rax)
  600f9d:	00 00                	add    %al,(%rax)
  600f9f:	00 fe                	add    %bh,%dh
  600fa1:	ff                   	(bad)  
  600fa2:	ff 6f 00             	ljmp   *0x0(%rdi)
  600fa5:	00 00                	add    %al,(%rax)
  600fa7:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600fad:	00 00                	add    %al,(%rax)
  600faf:	00 ff                	add    %bh,%bh
  600fb1:	ff                   	(bad)  
  600fb2:	ff 6f 00             	ljmp   *0x0(%rdi)
  600fb5:	00 00                	add    %al,(%rax)
  600fb7:	00 01                	add    %al,(%rcx)
  600fb9:	00 00                	add    %al,(%rax)
  600fbb:	00 00                	add    %al,(%rax)
  600fbd:	00 00                	add    %al,(%rax)
  600fbf:	00 f0                	add    %dh,%al
  600fc1:	ff                   	(bad)  
  600fc2:	ff 6f 00             	ljmp   *0x0(%rdi)
  600fc5:	00 00                	add    %al,(%rax)
  600fc7:	00 90 03 40 00 00    	add    %dl,0x4003(%rax)
  600fcd:	00 00                	add    %al,(%rax)
  600fcf:	00 18                	add    %bl,(%rax)
	...

Дизассемблирование раздела .got:

0000000000601040 <.got>:
	...

Дизассемблирование раздела .got.plt:

0000000000601048 <_GLOBAL_OFFSET_TABLE_>:
  601048:	28 0e                	sub    %cl,(%rsi)
  60104a:	60                   	(bad)  
	...
  60105f:	00 3e                	add    %bh,(%rsi)
  601061:	04 40                	add    $0x40,%al
  601063:	00 00                	add    %al,(%rax)
  601065:	00 00                	add    %al,(%rax)
  601067:	00 4e 04             	add    %cl,0x4(%rsi)
  60106a:	40 00 00             	add    %al,(%rax)
  60106d:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .data:

0000000000601070 <__data_start>:
	...

0000000000601078 <__dso_handle>:
	...

Дизассемблирование раздела .bss:

0000000000601080 <__bss_start>:
	...

Дизассемблирование раздела .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400388>
   a:	74 75                	je     81 <_init-0x40037f>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce23b8>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400371>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	31 32                	xor    %esi,(%rdx)
  24:	29 20                	sub    %esp,(%rax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%rdx)
  2d:	30 31                	xor    %dh,(%rcx)
  2f:	36 30 36             	xor    %dh,%ss:(%rsi)
  32:	30 39                	xor    %bh,(%rcx)
	...

Дизассемблирование раздела .text:

0000000000801a28 <.text>:
  801a28:	e9 3f 39 00 00       	jmpq   80536c <_end+0x2042e4>
  801a2d:	48 8d 35 1c 00 00 00 	lea    0x1c(%rip),%rsi        # 801a50 <_end+0x2009c8>
  801a34:	48 c7 c2 13 00 00 00 	mov    $0x13,%rdx
  801a3b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  801a42:	48 89 c7             	mov    %rax,%rdi
  801a45:	0f 05                	syscall 
  801a47:	48 8d 35 43 53 00 00 	lea    0x5343(%rip),%rsi        # 806d91 <_end+0x205d09>
  801a4e:	ff e6                	jmpq   *%rsi
  801a50:	48                   	rex.W
  801a51:	65 6c                	gs insb (%dx),%es:(%rdi)
  801a53:	6c                   	insb   (%dx),%es:(%rdi)
  801a54:	6f                   	outsl  %ds:(%rsi),(%dx)
  801a55:	2c 20                	sub    $0x20,%al
  801a57:	49 20 61 6d          	rex.WB and %spl,0x6d(%r9)
  801a5b:	20 76 69             	and    %dh,0x69(%rsi)
  801a5e:	63 74 69 6d          	movslq 0x6d(%rcx,%rbp,2),%esi
  801a62:	0a 20                	or     (%rax),%ah
  801a64:	69 73 20 73 75 63 63 	imul   $0x63637573,0x20(%rbx),%esi
  801a6b:	65 73 73             	gs jae 801ae1 <_end+0x200a59>
  801a6e:	66 75 6c             	data16 jne 801add <_end+0x200a55>
  801a71:	6c                   	insb   (%dx),%es:(%rdi)
  801a72:	79 20                	jns    801a94 <_end+0x200a0c>
  801a74:	69 6e 66 65 63 74 65 	imul   $0x65746365,0x66(%rsi),%ebp
  801a7b:	64 20 0a             	and    %cl,%fs:(%rdx)
  801a7e:	20 66 69             	and    %ah,0x69(%rsi)
  801a81:	6c                   	insb   (%dx),%es:(%rdi)
  801a82:	65 3a 20             	cmp    %gs:(%rax),%ah
  801a85:	69 6e 66 65 63 74 69 	imul   $0x69746365,0x66(%rsi),%ebp
  801a8c:	6f                   	outsl  %ds:(%rsi),(%dx)
  801a8d:	6e                   	outsb  %ds:(%rsi),(%dx)
  801a8e:	20 74 72 79          	and    %dh,0x79(%rdx,%rsi,2)
  801a92:	20 0a                	and    %cl,(%rdx)
  801a94:	08 00                	or     %al,(%rax)
  801a96:	00 00                	add    %al,(%rax)
  801a98:	00 00                	add    %al,(%rax)
  801a9a:	00 00                	add    %al,(%rax)
  801a9c:	2e 2f                	cs (bad) 
  801a9e:	00 06                	add    %al,(%rsi)
  801aa0:	41 0a 00             	or     (%r8),%al
  801aa3:	00 00                	add    %al,(%rax)
  801aa5:	00 00                	add    %al,(%rax)
  801aa7:	b6 da                	mov    $0xda,%dh
  801aa9:	e5 b0                	in     $0xb0,%eax
  801aab:	ea                   	(bad)  
  801aac:	e4 13                	in     $0x13,%al
  801aae:	0e                   	(bad)  
  801aaf:	18 00                	sbb    %al,(%rax)
  801ab1:	61                   	(bad)  
  801ab2:	73 6d                	jae    801b21 <_end+0x200a99>
  801ab4:	00 00                	add    %al,(%rax)
  801ab6:	08 22                	or     %ah,(%rdx)
  801ab8:	f4                   	hlt    
  801ab9:	0a 00                	or     (%rax),%al
  801abb:	00 00                	add    %al,(%rax)
  801abd:	00 00                	add    %al,(%rax)
  801abf:	64 33 d1             	fs xor %ecx,%edx
  801ac2:	93                   	xchg   %eax,%ebx
  801ac3:	59                   	pop    %rcx
  801ac4:	40 2b 17             	rex sub (%rdi),%edx
  801ac7:	20 00                	and    %al,(%rax)
  801ac9:	74 65                	je     801b30 <_end+0x200aa8>
  801acb:	73 74                	jae    801b41 <_end+0x200ab9>
  801acd:	2e 74 78             	je,pn  801b48 <_end+0x200ac0>
  801ad0:	74 00                	je     801ad2 <_end+0x200a4a>
  801ad2:	00 00                	add    %al,(%rax)
  801ad4:	00 00                	add    %al,(%rax)
  801ad6:	08 77 ed             	or     %dh,-0x13(%rdi)
  801ad9:	0a 00                	or     (%rax),%al
  801adb:	00 00                	add    %al,(%rax)
  801add:	00 00                	add    %al,(%rax)
  801adf:	42 e6 55             	rex.X out %al,$0x55
  801ae2:	e6 52                	out    %al,$0x52
  801ae4:	f2 5b                	repnz pop %rbx
  801ae6:	23 20                	and    (%rax),%esp
  801ae8:	00 65 78             	add    %ah,0x78(%rbp)
  801aeb:	61                   	(bad)  
  801aec:	6d                   	insl   (%dx),%es:(%rdi)
  801aed:	70 6c                	jo     801b5b <_end+0x200ad3>
  801aef:	65 2e 74 78          	gs je,pn 801b6b <_end+0x200ae3>
  801af3:	74 00                	je     801af5 <_end+0x200a6d>
  801af5:	00 08                	add    %cl,(%rax)
  801af7:	cf                   	iret   
  801af8:	40 0b 00             	rex or (%rax),%eax
  801afb:	00 00                	add    %al,(%rax)
  801afd:	00 00                	add    %al,(%rax)
  801aff:	68 bb 99 24 3f       	pushq  $0x3f2499bb
  801b04:	7e d7                	jle    801add <_end+0x200a55>
  801b06:	26 18 00             	sbb    %al,%es:(%rax)
  801b09:	2e 00 00             	add    %al,%cs:(%rax)
  801b0c:	00 00                	add    %al,(%rax)
  801b0e:	04 1c                	add    $0x1c,%al
  801b10:	f4                   	hlt    
  801b11:	0a 00                	or     (%rax),%al
  801b13:	00 00                	add    %al,(%rax)
  801b15:	00 00                	add    %al,(%rax)
  801b17:	da 85 45 cf 04 48    	fiaddl 0x4804cf45(%rbp)
  801b1d:	1c 29                	sbb    $0x29,%al
  801b1f:	20 00                	and    %al,(%rax)
  801b21:	76 69                	jbe    801b8c <_end+0x200b04>
  801b23:	72 75                	jb     801b9a <_end+0x200b12>
  801b25:	73 2e                	jae    801b55 <_end+0x200acd>
  801b27:	53                   	push   %rbx
  801b28:	00 00                	add    %al,(%rax)
  801b2a:	00 00                	add    %al,(%rax)
  801b2c:	00 00                	add    %al,(%rax)
  801b2e:	08 e2                	or     %ah,%dl
  801b30:	f2 0a 00             	repnz or (%rax),%al
  801b33:	00 00                	add    %al,(%rax)
  801b35:	00 00                	add    %al,(%rax)
  801b37:	c1 5e 16 01          	rcrl   $0x1,0x16(%rsi)
  801b3b:	77 74                	ja     801bb1 <_end+0x200b29>
  801b3d:	8b 2a                	mov    (%rdx),%ebp
  801b3f:	20 00                	and    %al,(%rax)
  801b41:	65 78 61             	gs js  801ba5 <_end+0x200b1d>
  801b44:	6d                   	insl   (%dx),%es:(%rdi)
  801b45:	70 6c                	jo     801bb3 <_end+0x200b2b>
  801b47:	65 00 00             	add    %al,%gs:(%rax)
  801b4a:	00 00                	add    %al,(%rax)
  801b4c:	00 00                	add    %al,(%rax)
  801b4e:	08 72 ed             	or     %dh,-0x13(%rdx)
  801b51:	0a 00                	or     (%rax),%al
  801b53:	00 00                	add    %al,(%rax)
  801b55:	00 00                	add    %al,(%rax)
  801b57:	bf cc 7c 09 76       	mov    $0x76097ccc,%edi
  801b5c:	fb                   	sti    
  801b5d:	70 2c                	jo     801b8b <_end+0x200b03>
  801b5f:	20 00                	and    %al,(%rax)
  801b61:	6d                   	insl   (%dx),%es:(%rdi)
  801b62:	61                   	(bad)  
  801b63:	6c                   	insb   (%dx),%es:(%rdi)
  801b64:	77 61                	ja     801bc7 <_end+0x200b3f>
  801b66:	72 65                	jb     801bcd <_end+0x200b45>
  801b68:	2e 6f                	outsl  %cs:(%rsi),(%dx)
  801b6a:	72 67                	jb     801bd3 <_end+0x200b4b>
  801b6c:	00 00                	add    %al,(%rax)
  801b6e:	08 1e                	or     %bl,(%rsi)
  801b70:	f4                   	hlt    
  801b71:	0a 00                	or     (%rax),%al
  801b73:	00 00                	add    %al,(%rax)
  801b75:	00 00                	add    %al,(%rax)
  801b77:	15 0e 7c 6c 15       	adc    $0x156c7c0e,%eax
  801b7c:	b0 76                	mov    $0x76,%al
  801b7e:	3f                   	(bad)  
  801b7f:	20 00                	and    %al,(%rax)
  801b81:	76 69                	jbe    801bec <_end+0x200b64>
  801b83:	63 74 69 6d          	movslq 0x6d(%rcx,%rbp,2),%esi
  801b87:	2e 53                	cs push %rbx
  801b89:	00 00                	add    %al,(%rax)
  801b8b:	00 00                	add    %al,(%rax)
  801b8d:	00 08                	add    %cl,(%rax)
  801b8f:	6d                   	insl   (%dx),%es:(%rdi)
  801b90:	ed                   	in     (%dx),%eax
  801b91:	0a 00                	or     (%rax),%al
  801b93:	00 00                	add    %al,(%rax)
  801b95:	00 00                	add    %al,(%rax)
  801b97:	a8 74                	test   $0x74,%al
  801b99:	88 78 92             	mov    %bh,-0x6e(%rax)
  801b9c:	9a                   	(bad)  
  801b9d:	ed                   	in     (%dx),%eax
  801b9e:	41 20 00             	and    %al,(%r8)
  801ba1:	65 78 61             	gs js  801c05 <_end+0x200b7d>
  801ba4:	6d                   	insl   (%dx),%es:(%rdi)
  801ba5:	70 6c                	jo     801c13 <_end+0x200b8b>
  801ba7:	65 2e 63 00          	gs movslq %cs:(%rax),%eax
  801bab:	00 00                	add    %al,(%rax)
  801bad:	00 08                	add    %cl,(%rax)
  801baf:	c2 53 0a             	retq   $0xa53
  801bb2:	00 00                	add    %al,(%rax)
  801bb4:	00 00                	add    %al,(%rax)
  801bb6:	00 3c cf             	add    %bh,(%rdi,%rcx,8)
  801bb9:	8b 02                	mov    (%rdx),%eax
  801bbb:	2d 76 6f 4a 20       	sub    $0x204a6f76,%eax
  801bc0:	00 76 69             	add    %dh,0x69(%rsi)
  801bc3:	63 74 69 6d          	movslq 0x6d(%rcx,%rbp,2),%esi
  801bc7:	00 00                	add    %al,(%rax)
  801bc9:	00 00                	add    %al,(%rax)
  801bcb:	00 00                	add    %al,(%rax)
  801bcd:	00 08                	add    %cl,(%rax)
  801bcf:	d5                   	(bad)  
  801bd0:	2e 0a 00             	or     %cs:(%rax),%al
  801bd3:	00 00                	add    %al,(%rax)
  801bd5:	00 00                	add    %al,(%rax)
  801bd7:	89 71 97             	mov    %esi,-0x69(%rcx)
  801bda:	e0 02                	loopne 801bde <_end+0x200b56>
  801bdc:	e3 31                	jrcxz  801c0f <_end+0x200b87>
  801bde:	4d 20 00             	rex.WRB and %r8b,(%r8)
  801be1:	7a 5f                	jp     801c42 <_end+0x200bba>
  801be3:	61                   	(bad)  
  801be4:	73 6d                	jae    801c53 <_end+0x200bcb>
	...
  801bee:	08 15 80 0a 00 00    	or     %dl,0xa80(%rip)        # 802674 <_end+0x2015ec>
  801bf4:	00 00                	add    %al,(%rax)
  801bf6:	00 3b                	add    %bh,(%rbx)
  801bf8:	d2 c1                	rol    %cl,%cl
  801bfa:	d4                   	(bad)  
  801bfb:	5b                   	pop    %rbx
  801bfc:	f6 2d 53 18 00 2e    	imulb  0x2e001853(%rip)        # 2e803455 <_end+0x2e2023cd>
  801c02:	2e 00 00             	add    %al,%cs:(%rax)
  801c05:	00 04 3b             	add    %al,(%rbx,%rdi,1)
  801c08:	4d 0a 00             	rex.WRB or (%r8),%r8b
  801c0b:	00 00                	add    %al,(%rax)
  801c0d:	00 00                	add    %al,(%rax)
  801c0f:	9e                   	sahf   
  801c10:	0f 50                	(bad)  
  801c12:	16                   	(bad)  
  801c13:	95                   	xchg   %eax,%ebp
  801c14:	3e 18 64 20 00       	sbb    %ah,%ds:0x0(%rax,%riz,1)
  801c19:	76 69                	jbe    801c84 <_end+0x200bfc>
  801c1b:	72 75                	jb     801c92 <_end+0x200c0a>
  801c1d:	73 00                	jae    801c1f <_end+0x200b97>
  801c1f:	00 00                	add    %al,(%rax)
  801c21:	00 00                	add    %al,(%rax)
  801c23:	00 00                	add    %al,(%rax)
  801c25:	00 08                	add    %cl,(%rax)
  801c27:	19 f4                	sbb    %esi,%esp
  801c29:	0a 00                	or     (%rax),%al
  801c2b:	00 00                	add    %al,(%rax)
  801c2d:	00 00                	add    %al,(%rax)
  801c2f:	9c                   	pushfq 
  801c30:	e4 95                	in     $0x95,%al
  801c32:	f2 d1 e7             	repnz shl %edi
  801c35:	f6 66 20             	mulb   0x20(%rsi)
  801c38:	00 4d 61             	add    %cl,0x61(%rbp)
  801c3b:	6b 65 66 69          	imul   $0x69,0x66(%rbp),%esp
  801c3f:	6c                   	insb   (%dx),%es:(%rdi)
  801c40:	65 00 00             	add    %al,%gs:(%rax)
  801c43:	00 00                	add    %al,(%rax)
  801c45:	00 08                	add    %cl,(%rax)
  801c47:	6c                   	insb   (%dx),%es:(%rdi)
  801c48:	ed                   	in     (%dx),%eax
  801c49:	0a 00                	or     (%rax),%al
  801c4b:	00 00                	add    %al,(%rax)
  801c4d:	00 00                	add    %al,(%rax)
  801c4f:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  801c50:	47 80 17 e0          	rex.RXB adcb $0xe0,(%r15)
  801c54:	70 ec                	jo     801c42 <_end+0x200bba>
  801c56:	77 20                	ja     801c78 <_end+0x200bf0>
  801c58:	00 6d 61             	add    %ch,0x61(%rbp)
  801c5b:	6c                   	insb   (%dx),%es:(%rdi)
  801c5c:	77 61                	ja     801cbf <_end+0x200c37>
  801c5e:	72 65                	jb     801cc5 <_end+0x200c3d>
  801c60:	32 2e                	xor    (%rsi),%ch
  801c62:	53                   	push   %rbx
  801c63:	00 00                	add    %al,(%rax)
  801c65:	00 08                	add    %cl,(%rax)
  801c67:	70 ed                	jo     801c56 <_end+0x200bce>
  801c69:	0a 00                	or     (%rax),%al
  801c6b:	00 00                	add    %al,(%rax)
  801c6d:	00 00                	add    %al,(%rax)
  801c6f:	40 b3 0c             	mov    $0xc,%bl
  801c72:	47 e0 33             	rex.RXB loopne 801ca8 <_end+0x200c20>
  801c75:	75 78                	jne    801cef <_end+0x200c67>
  801c77:	28 00                	sub    %al,(%rax)
  801c79:	65 78 61             	gs js  801cdd <_end+0x200c55>
  801c7c:	6d                   	insl   (%dx),%es:(%rdi)
  801c7d:	70 6c                	jo     801ceb <_end+0x200c63>
  801c7f:	65 5f                	gs pop %rdi
  801c81:	62                   	(bad)  
  801c82:	69 6e 64 5f 6e 6f 77 	imul   $0x776f6e5f,0x64(%rsi),%ebp
  801c89:	00 00                	add    %al,(%rax)
  801c8b:	00 00                	add    %al,(%rax)
  801c8d:	00 08                	add    %cl,(%rax)
  801c8f:	6f                   	outsl  %ds:(%rsi),(%dx)
  801c90:	ed                   	in     (%dx),%eax
  801c91:	0a 00                	or     (%rax),%al
  801c93:	00 00                	add    %al,(%rax)
  801c95:	00 00                	add    %al,(%rax)
  801c97:	ff                   	(bad)  
  801c98:	ff                   	(bad)  
  801c99:	ff                   	(bad)  
  801c9a:	ff                   	(bad)  
  801c9b:	ff                   	(bad)  
  801c9c:	ff                   	(bad)  
  801c9d:	ff                   	(bad)  
  801c9e:	7f 28                	jg     801cc8 <_end+0x200c40>
  801ca0:	00 6d 69             	add    %ch,0x69(%rbp)
  801ca3:	73 68                	jae    801d0d <_end+0x200c85>
  801ca5:	61                   	(bad)  
  801ca6:	5f                   	pop    %rdi
  801ca7:	65 78 61             	gs js  801d0b <_end+0x200c83>
  801caa:	6d                   	insl   (%dx),%es:(%rdi)
  801cab:	70 6c                	jo     801d19 <_end+0x200c91>
  801cad:	65 00 00             	add    %al,%gs:(%rax)
  801cb0:	00 00                	add    %al,(%rax)
  801cb2:	00 00                	add    %al,(%rax)
  801cb4:	00 00                	add    %al,(%rax)
  801cb6:	08 00                	or     %al,(%rax)
	...
  8039dc:	00 00                	add    %al,(%rax)
  8039de:	00 03                	add    %al,(%rbx)
	...
  8039e8:	80 00 00             	addb   $0x0,(%rax)
	...
  8039fb:	00 00                	add    %al,(%rax)
  8039fd:	fb                   	sti    
  8039fe:	01 40 00             	add    %eax,0x0(%rax)
  803a01:	00 00                	add    %al,(%rax)
  803a03:	00 00                	add    %al,(%rax)
  803a05:	ed                   	in     (%dx),%eax
  803a06:	01 40 00             	add    %eax,0x0(%rax)
  803a09:	00 00                	add    %al,(%rax)
  803a0b:	00 00                	add    %al,(%rax)
  803a0d:	07                   	(bad)  
	...
  803a16:	f0 54                	lock push %rsp
  803a18:	7d c9                	jge    8039e3 <_end+0x20295b>
  803a1a:	7f 00                	jg     803a1c <_end+0x202994>
  803a1c:	00 40 f0             	add    %al,-0x10(%rax)
  803a1f:	54                   	push   %rsp
  803a20:	7d c9                	jge    8039eb <_end+0x202963>
  803a22:	7f 00                	jg     803a24 <_end+0x20299c>
  803a24:	00 f8                	add    %bh,%al
  803a26:	01 00                	add    %eax,(%rax)
  803a28:	00 00                	add    %al,(%rax)
  803a2a:	00 00                	add    %al,(%rax)
  803a2c:	00 09                	add    %cl,(%rcx)
  803a2e:	00 00                	add    %al,(%rax)
  803a30:	00 00                	add    %al,(%rax)
  803a32:	00 00                	add    %al,(%rax)
  803a34:	00 e0                	add    %ah,%al
  803a36:	09 55 7d             	or     %edx,0x7d(%rbp)
  803a39:	c9                   	leaveq 
  803a3a:	7f 00                	jg     803a3c <_end+0x2029b4>
  803a3c:	00 c0                	add    %al,%al
  803a3e:	07                   	(bad)  
  803a3f:	00 00                	add    %al,(%rax)
  803a41:	00 00                	add    %al,(%rax)
  803a43:	00 00                	add    %al,(%rax)
  803a45:	1f                   	(bad)  
  803a46:	00 00                	add    %al,(%rax)
  803a48:	00 00                	add    %al,(%rax)
  803a4a:	00 00                	add    %al,(%rax)
  803a4c:	00 28                	add    %ch,(%rax)
  803a4e:	1a 80 00 00 00 00    	sbb    0x0(%rax),%al
  803a54:	00 01                	add    %al,(%rcx)
  803a56:	00 00                	add    %al,(%rax)
  803a58:	00 05 00 00 00 28    	add    %al,0x28000000(%rip)        # 28803a5e <_end+0x282029d6>
  803a5e:	1a 00                	sbb    (%rax),%al
  803a60:	00 00                	add    %al,(%rax)
  803a62:	00 00                	add    %al,(%rax)
  803a64:	00 28                	add    %ch,(%rax)
  803a66:	1a 80 00 00 00 00    	sbb    0x0(%rax),%al
  803a6c:	00 28                	add    %ch,(%rax)
  803a6e:	1a 80 00 00 00 00    	sbb    0x0(%rax),%al
  803a74:	00 c4                	add    %al,%ah
  803a76:	53                   	push   %rbx
  803a77:	00 00                	add    %al,(%rax)
  803a79:	00 00                	add    %al,(%rax)
  803a7b:	00 00                	add    %al,(%rax)
  803a7d:	c4                   	(bad)  
  803a7e:	53                   	push   %rbx
	...
  803a8b:	00 00                	add    %al,(%rax)
  803a8d:	9d                   	popfq  
  803a8e:	00 00                	add    %al,(%rax)
  803a90:	00 01                	add    %al,(%rcx)
  803a92:	00 00                	add    %al,(%rax)
  803a94:	00 06                	add    %al,(%rsi)
  803a96:	00 00                	add    %al,(%rax)
  803a98:	00 00                	add    %al,(%rax)
  803a9a:	00 00                	add    %al,(%rax)
  803a9c:	00 28                	add    %ch,(%rax)
  803a9e:	1a 80 00 00 00 00    	sbb    0x0(%rax),%al
  803aa4:	00 28                	add    %ch,(%rax)
  803aa6:	1a 00                	sbb    (%rax),%al
  803aa8:	00 00                	add    %al,(%rax)
  803aaa:	00 00                	add    %al,(%rax)
  803aac:	00 c4                	add    %al,%ah
  803aae:	53                   	push   %rbx
	...
  803acb:	00 00                	add    %al,(%rax)
  803acd:	10 0e                	adc    %cl,(%rsi)
  803acf:	60                   	(bad)  
  803ad0:	00 00                	add    %al,(%rax)
  803ad2:	00 00                	add    %al,(%rax)
  803ad4:	00 00                	add    %al,(%rax)
  803ad6:	00 20                	add    %ah,(%rax)
	...
  803ae4:	00 38                	add    %bh,(%rax)
  803ae6:	f2 54                	repnz push %rsp
  803ae8:	7d c9                	jge    803ab3 <_end+0x202a2b>
  803aea:	7f 00                	jg     803aec <_end+0x202a64>
  803aec:	00 38                	add    %bh,(%rax)
  803aee:	02 40 00             	add    0x0(%rax),%al
  803af1:	00 00                	add    %al,(%rax)
  803af3:	00 00                	add    %al,(%rax)
  803af5:	38 02                	cmp    %al,(%rdx)
  803af7:	00 00                	add    %al,(%rax)
  803af9:	00 00                	add    %al,(%rax)
  803afb:	00 00                	add    %al,(%rax)
  803afd:	60                   	(bad)  
  803afe:	0d 00 00 00 00       	or     $0x0,%eax
  803b03:	00 00                	add    %al,(%rax)
  803b05:	48 0a 00             	rex.W or (%rax),%al
  803b08:	00 00                	add    %al,(%rax)
  803b0a:	00 00                	add    %al,(%rax)
  803b0c:	00 38                	add    %bh,(%rax)
  803b0e:	f2 54                	repnz push %rsp
  803b10:	7d c9                	jge    803adb <_end+0x202a53>
  803b12:	7f 00                	jg     803b14 <_end+0x202a8c>
  803b14:	00 98 ff 54 7d c9    	add    %bl,-0x3682ab01(%rax)
  803b1a:	7f 00                	jg     803b1c <_end+0x202a94>
  803b1c:	00 d4                	add    %dl,%ah
  803b1e:	00 40 00             	add    %al,0x0(%rax)
  803b21:	00 00                	add    %al,(%rax)
  803b23:	00 00                	add    %al,(%rax)
  803b25:	74 53                	je     803b7a <_end+0x202af2>
  803b27:	00 00                	add    %al,(%rax)
  803b29:	00 00                	add    %al,(%rax)
  803b2b:	00 00                	add    %al,(%rax)
  803b2d:	20 11                	and    %dl,(%rcx)
  803b2f:	55                   	push   %rbp
  803b30:	7d c9                	jge    803afb <_end+0x202a73>
  803b32:	7f 00                	jg     803b34 <_end+0x202aac>
  803b34:	00 43 00             	add    %al,0x0(%rbx)
  803b37:	00 00                	add    %al,(%rax)
  803b39:	00 00                	add    %al,(%rax)
  803b3b:	00 00                	add    %al,(%rax)
  803b3d:	28 0e                	sub    %cl,(%rsi)
  803b3f:	00 00                	add    %al,(%rax)
  803b41:	00 00                	add    %al,(%rax)
  803b43:	00 00                	add    %al,(%rax)
  803b45:	d0 01                	rolb   (%rcx)
  803b47:	00 00                	add    %al,(%rax)
  803b49:	00 00                	add    %al,(%rax)
  803b4b:	00 00                	add    %al,(%rax)
  803b4d:	28 0e                	sub    %cl,(%rsi)
  803b4f:	60                   	(bad)  
	...
  803b64:	00 01                	add    %al,(%rcx)
  803b66:	00 00                	add    %al,(%rax)
  803b68:	00 00                	add    %al,(%rax)
  803b6a:	00 00                	add    %al,(%rax)
  803b6c:	00 70 01             	add    %dh,0x1(%rax)
  803b6f:	00 00                	add    %al,(%rax)
  803b71:	00 00                	add    %al,(%rax)
  803b73:	00 00                	add    %al,(%rax)
  803b75:	30 04 40             	xor    %al,(%rax,%rax,2)
  803b78:	00 00                	add    %al,(%rax)
  803b7a:	00 00                	add    %al,(%rax)
  803b7c:	00 95 96 bf ff 00    	add    %dl,0xffbf96(%rbp)
  803b82:	00 00                	add    %al,(%rax)
  803b84:	00 54 fe ff          	add    %dl,-0x1(%rsi,%rdi,8)
  803b88:	ff 00                	incl   (%rax)
  803b8a:	00 00                	add    %al,(%rax)
  803b8c:	00 30                	add    %dh,(%rax)
  803b8e:	04 00                	add    $0x0,%al
  803b90:	00 00                	add    %al,(%rax)
  803b92:	00 00                	add    %al,(%rax)
  803b94:	00 f8                	add    %bh,%al
  803b96:	15 40 00 00 00       	adc    $0x40,%eax
  803b9b:	00 00                	add    %al,(%rax)
  803b9d:	38 02                	cmp    %al,(%rdx)
  803b9f:	00 00                	add    %al,(%rax)
  803ba1:	00 00                	add    %al,(%rax)
  803ba3:	00 00                	add    %al,(%rax)
  803ba5:	9d                   	popfq  
  803ba6:	00 00                	add    %al,(%rax)
  803ba8:	00 00                	add    %al,(%rax)
  803baa:	00 40 00             	add    %al,0x0(%rax)
  803bad:	00 00                	add    %al,(%rax)
  803baf:	00 00                	add    %al,(%rax)
  803bb1:	b0 f0                	mov    $0xf0,%al
  803bb3:	54                   	push   %rsp
  803bb4:	7d c9                	jge    803b7f <_end+0x202af7>
  803bb6:	7f 00                	jg     803bb8 <_end+0x202b30>
  803bb8:	00 48 10             	add    %cl,0x10(%rax)
  803bbb:	60                   	(bad)  
  803bbc:	00 00                	add    %al,(%rax)
  803bbe:	00 00                	add    %al,(%rax)
  803bc0:	00 0d f0 ad ba ef    	add    %cl,-0x10455210(%rip)        # fffffffff03ae9b6 <_end+0xffffffffefdad92e>
  803bc6:	be ad de 00 00       	mov    $0xdead,%esi
	...
  8051f7:	00 00                	add    %al,(%rax)
  8051f9:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  8051fa:	7d 16                	jge    805212 <_end+0x20418a>
  8051fc:	33 00                	xor    (%rax),%eax
  8051fe:	00 00                	add    %al,(%rax)
  805200:	00 a5 39 40 00 00    	add    %ah,0x4039(%rbp)
  805206:	00 00                	add    %al,(%rax)
  805208:	00 03                	add    %al,(%rbx)
  80520a:	00 00                	add    %al,(%rax)
  80520c:	00 00                	add    %al,(%rax)
  80520e:	00 00                	add    %al,(%rax)
  805210:	00 02                	add    %al,(%rdx)
  805212:	00 00                	add    %al,(%rax)
  805214:	00 00                	add    %al,(%rax)
  805216:	00 00                	add    %al,(%rax)
  805218:	00 02                	add    %al,(%rdx)
  80521a:	00 00                	add    %al,(%rax)
  80521c:	00 00                	add    %al,(%rax)
  80521e:	00 00                	add    %al,(%rax)
  805220:	00 4a 50             	add    %cl,0x50(%rdx)
  805223:	40 00 00             	add    %al,(%rax)
	...
  805256:	00 00                	add    %al,(%rax)
  805258:	00 01                	add    %al,(%rcx)
  80525a:	08 00                	or     %al,(%rax)
  80525c:	00 00                	add    %al,(%rax)
  80525e:	00 00                	add    %al,(%rax)
  805260:	00 e2                	add    %ah,%dl
  805262:	f2 0a 00             	repnz or (%rax),%al
  805265:	00 00                	add    %al,(%rax)
  805267:	00 00                	add    %al,(%rax)
  805269:	01 00                	add    %eax,(%rax)
  80526b:	00 00                	add    %al,(%rax)
  80526d:	00 00                	add    %al,(%rax)
  80526f:	00 00                	add    %al,(%rax)
  805271:	fd                   	std    
  805272:	81 00 00 e8 03 00    	addl   $0x3e800,(%rax)
  805278:	00 e8                	add    %ch,%al
  80527a:	03 00                	add    (%rax),%eax
	...
  805290:	00 98 03 00 00 00    	add    %bl,0x3(%rax)
  805296:	00 00                	add    %al,(%rax)
  805298:	00 10                	add    %dl,(%rax)
  80529a:	00 00                	add    %al,(%rax)
  80529c:	00 00                	add    %al,(%rax)
  80529e:	00 00                	add    %al,(%rax)
  8052a0:	00 28                	add    %ch,(%rax)
  8052a2:	0e                   	(bad)  
  8052a3:	60                   	(bad)  
  8052a4:	00 00                	add    %al,(%rax)
  8052a6:	00 00                	add    %al,(%rax)
  8052a8:	00 96 4c 40 00 00    	add    %dl,0x404c(%rsi)
  8052ae:	00 00                	add    %al,(%rax)
  8052b0:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 8052b6 <_end+0x20422e>
  8052b6:	00 00                	add    %al,(%rax)
  8052b8:	00 38                	add    %bh,(%rax)
  8052ba:	00 00                	add    %al,(%rax)
  8052bc:	00 00                	add    %al,(%rax)
  8052be:	00 00                	add    %al,(%rax)
  8052c0:	00 1f                	add    %bl,(%rdi)
  8052c2:	00 00                	add    %al,(%rax)
  8052c4:	00 00                	add    %al,(%rax)
  8052c6:	00 00                	add    %al,(%rax)
  8052c8:	00 64 0c 55          	add    %ah,0x55(%rsp,%rcx,1)
  8052cc:	7d c9                	jge    805297 <_end+0x20420f>
  8052ce:	7f 00                	jg     8052d0 <_end+0x204248>
  8052d0:	00 00                	add    %al,(%rax)
  8052d2:	ff 54 7d c9          	callq  *-0x37(%rbp,%rdi,2)
  8052d6:	7f 00                	jg     8052d8 <_end+0x204250>
  8052d8:	00 10                	add    %dl,(%rax)
  8052da:	10 00                	adc    %al,(%rax)
  8052dc:	00 00                	add    %al,(%rax)
  8052de:	00 00                	add    %al,(%rax)
  8052e0:	00 00                	add    %al,(%rax)
  8052e2:	f0 54                	lock push %rsp
  8052e4:	7d c9                	jge    8052af <_end+0x204227>
  8052e6:	7f 00                	jg     8052e8 <_end+0x204260>
  8052e8:	00 9b 6d 80 00 00    	add    %bl,0x806d(%rbx)
  8052ee:	00 00                	add    %al,(%rax)
  8052f0:	00 28                	add    %ch,(%rax)
  8052f2:	1a 80 00 00 00 00    	sbb    0x0(%rax),%al
  8052f8:	00 be 48 40 00 00    	add    %bh,0x4048(%rsi)
  8052fe:	00 00                	add    %al,(%rax)
  805300:	00 74 53 00          	add    %dh,0x0(%rbx,%rdx,2)
  805304:	00 00                	add    %al,(%rax)
  805306:	00 00                	add    %al,(%rax)
  805308:	00 d1                	add    %dl,%cl
  80530a:	21 40 00             	and    %eax,0x0(%rax)
  80530d:	00 00                	add    %al,(%rax)
  80530f:	00 00                	add    %al,(%rax)
  805311:	1a 3c 40             	sbb    (%rax,%rax,2),%bh
  805314:	00 00                	add    %al,(%rax)
  805316:	00 00                	add    %al,(%rax)
  805318:	00 00                	add    %al,(%rax)
  80531a:	80 00 00             	addb   $0x0,(%rax)
	...
  805329:	0b 00                	or     (%rax),%eax
  80532b:	00 00                	add    %al,(%rax)
  80532d:	00 00                	add    %al,(%rax)
  80532f:	00 00                	add    %al,(%rax)
  805331:	95                   	xchg   %eax,%ebp
  805332:	3b 40 00             	cmp    0x0(%rax),%eax
	...
  805341:	76 69                	jbe    8053ac <_end+0x204324>
  805343:	63 74 69 6d          	movslq 0x6d(%rcx,%rbp,2),%esi
  805347:	00 61 73             	add    %ah,0x73(%rcx)
  80534a:	6d                   	insl   (%dx),%es:(%rdi)
  80534b:	00 76 69             	add    %dh,0x69(%rsi)
  80534e:	72 75                	jb     8053c5 <_end+0x20433d>
  805350:	73 00                	jae    805352 <_end+0x2042ca>
  805352:	74 65                	je     8053b9 <_end+0x204331>
  805354:	73 74                	jae    8053ca <_end+0x204342>
  805356:	5f                   	pop    %rdi
  805357:	69 6e 66 00 0a 00 00 	imul   $0xa00,0x66(%rsi),%ebp
	...
  80536a:	00 00                	add    %al,(%rax)
  80536c:	49 89 d1             	mov    %rdx,%r9
  80536f:	49 89 ce             	mov    %rcx,%r14
  805372:	49 89 ff             	mov    %rdi,%r15
  805375:	48 8d 3d ac c6 ff ff 	lea    -0x3954(%rip),%rdi        # 801a28 <_end+0x2009a0>
  80537c:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
  805383:	48 8d 35 17 1a 00 00 	lea    0x1a17(%rip),%rsi        # 806da1 <_end+0x205d19>
  80538a:	48 29 fe             	sub    %rdi,%rsi
  80538d:	48 c7 c2 07 00 00 00 	mov    $0x7,%rdx
  805394:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax
  80539b:	0f 05                	syscall 
  80539d:	4c 89 ca             	mov    %r9,%rdx
  8053a0:	4c 89 f1             	mov    %r14,%rcx
  8053a3:	4c 89 ff             	mov    %r15,%rdi
  8053a6:	4d 31 c9             	xor    %r9,%r9
  8053a9:	4d 31 f6             	xor    %r14,%r14
  8053ac:	4d 31 ff             	xor    %r15,%r15
  8053af:	48 85 c0             	test   %rax,%rax
  8053b2:	0f 84 a3 00 00 00    	je     80545b <_end+0x2043d3>
  8053b8:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 8053cb <_end+0x204343>
  8053bf:	48 c7 c2 18 00 00 00 	mov    $0x18,%rdx
  8053c6:	e9 56 19 00 00       	jmpq   806d21 <_end+0x205c99>
  8053cb:	45 52                	rex.RB push %r10
  8053cd:	52                   	push   %rdx
  8053ce:	3a 20                	cmp    (%rax),%ah
  8053d0:	6d                   	insl   (%dx),%es:(%rdi)
  8053d1:	70 72                	jo     805445 <_end+0x2043bd>
  8053d3:	6f                   	outsl  %ds:(%rsi),(%dx)
  8053d4:	74 65                	je     80543b <_end+0x2043b3>
  8053d6:	63 74 20 69          	movslq 0x69(%rax,%riz,1),%esi
  8053da:	6e                   	outsb  %ds:(%rsi),(%dx)
  8053db:	20 5f 73             	and    %bl,0x73(%rdi)
  8053de:	74 61                	je     805441 <_end+0x2043b9>
  8053e0:	72 74                	jb     805456 <_end+0x2043ce>
  8053e2:	0a f0                	or     %al,%dh
  8053e4:	1c e2                	sbb    $0xe2,%al
  8053e6:	3a fc                	cmp    %ah,%bh
  8053e8:	7f 00                	jg     8053ea <_end+0x204362>
	...
  805432:	00 06                	add    %al,(%rsi)
  805434:	02 00                	add    (%rax),%al
	...
  80545a:	00 48 89             	add    %cl,-0x77(%rax)
  80545d:	25 81 ff ff ff       	and    $0xffffff81,%eax
  805462:	48 8d 25 d0 fe ff ff 	lea    -0x130(%rip),%rsp        # 805339 <_end+0x2042b1>
  805469:	48 89 05 7b ff ff ff 	mov    %rax,-0x85(%rip)        # 8053eb <_end+0x204363>
  805470:	48 89 1d 7c ff ff ff 	mov    %rbx,-0x84(%rip)        # 8053f3 <_end+0x20436b>
  805477:	48 89 15 7d ff ff ff 	mov    %rdx,-0x83(%rip)        # 8053fb <_end+0x204373>
  80547e:	48 89 0d 7e ff ff ff 	mov    %rcx,-0x82(%rip)        # 805403 <_end+0x20437b>
  805485:	48 89 3d 7f ff ff ff 	mov    %rdi,-0x81(%rip)        # 80540b <_end+0x204383>
  80548c:	4c 89 05 88 ff ff ff 	mov    %r8,-0x78(%rip)        # 80541b <_end+0x204393>
  805493:	4c 89 0d 89 ff ff ff 	mov    %r9,-0x77(%rip)        # 805423 <_end+0x20439b>
  80549a:	4c 89 15 8a ff ff ff 	mov    %r10,-0x76(%rip)        # 80542b <_end+0x2043a3>
  8054a1:	4c 89 1d 8b ff ff ff 	mov    %r11,-0x75(%rip)        # 805433 <_end+0x2043ab>
  8054a8:	4c 89 25 8c ff ff ff 	mov    %r12,-0x74(%rip)        # 80543b <_end+0x2043b3>
  8054af:	4c 89 2d 8d ff ff ff 	mov    %r13,-0x73(%rip)        # 805443 <_end+0x2043bb>
  8054b6:	4c 89 35 8e ff ff ff 	mov    %r14,-0x72(%rip)        # 80544b <_end+0x2043c3>
  8054bd:	4c 89 3d 8f ff ff ff 	mov    %r15,-0x71(%rip)        # 805453 <_end+0x2043cb>
  8054c4:	e8 5d 00 00 00       	callq  805526 <_end+0x20449e>
  8054c9:	e8 6e 06 00 00       	callq  805b3c <_end+0x204ab4>
  8054ce:	e8 d9 05 00 00       	callq  805aac <_end+0x204a24>
  8054d3:	e8 42 0b 00 00       	callq  80601a <_end+0x204f92>
  8054d8:	e8 75 0b 00 00       	callq  806052 <_end+0x204fca>
  8054dd:	48 8d 3d 6e fe ff ff 	lea    -0x192(%rip),%rdi        # 805352 <_end+0x2042ca>
  8054e4:	e8 ee 0e 00 00       	callq  8063d7 <_end+0x20534f>
  8054e9:	48 8b 05 d1 e6 ff ff 	mov    -0x192f(%rip),%rax        # 803bc1 <_end+0x202b39>
  8054f0:	48 bb 0d f0 ad ba ef 	movabs $0xdeadbeefbaadf00d,%rbx
  8054f7:	be ad de 
  8054fa:	48 39 c3             	cmp    %rax,%rbx
  8054fd:	74 22                	je     805521 <_end+0x204499>
  8054ff:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 805512 <_end+0x20448a>
  805506:	48 c7 c2 0f 00 00 00 	mov    $0xf,%rdx
  80550d:	e9 0f 18 00 00       	jmpq   806d21 <_end+0x205c99>
  805512:	45 52                	rex.RB push %r10
  805514:	52                   	push   %rdx
  805515:	3a 20                	cmp    (%rax),%ah
  805517:	63 61 6e             	movslq 0x6e(%rcx),%esp
  80551a:	61                   	(bad)  
  80551b:	72 79                	jb     805596 <_end+0x20450e>
  80551d:	20 31                	and    %dh,(%rcx)
  80551f:	0a 00                	or     (%rax),%al
  805521:	e9 02 18 00 00       	jmpq   806d28 <_end+0x205ca0>
  805526:	57                   	push   %rdi
  805527:	56                   	push   %rsi
  805528:	50                   	push   %rax
  805529:	53                   	push   %rbx
  80552a:	48 8d 3d 6b c5 ff ff 	lea    -0x3a95(%rip),%rdi        # 801a9c <_end+0x200a14>
  805531:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
  805538:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  80553f:	0f 05                	syscall 
  805541:	48 85 c0             	test   %rax,%rax
  805544:	7c 3d                	jl     805583 <_end+0x2044fb>
  805546:	48 8d 1d 92 e4 ff ff 	lea    -0x1b6e(%rip),%rbx        # 8039df <_end+0x202957>
  80554d:	89 03                	mov    %eax,(%rbx)
  80554f:	48 c7 43 08 00 80 00 	movq   $0x8000,0x8(%rbx)
  805556:	00 
  805557:	48 8b 3b             	mov    (%rbx),%rdi
  80555a:	48 8d 35 3e c5 ff ff 	lea    -0x3ac2(%rip),%rsi        # 801a9f <_end+0x200a17>
  805561:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  805565:	48 c7 c0 4e 00 00 00 	mov    $0x4e,%rax
  80556c:	0f 05                	syscall 
  80556e:	48 83 f8 00          	cmp    $0x0,%rax
  805572:	7e 49                	jle    8055bd <_end+0x204535>
  805574:	48 8d 1d 82 e4 ff ff 	lea    -0x1b7e(%rip),%rbx        # 8039fd <_end+0x202975>
  80557b:	48 89 33             	mov    %rsi,(%rbx)
  80557e:	5b                   	pop    %rbx
  80557f:	58                   	pop    %rax
  805580:	5e                   	pop    %rsi
  805581:	5f                   	pop    %rdi
  805582:	c3                   	retq   
  805583:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 805596 <_end+0x20450e>
  80558a:	48 c7 c2 27 00 00 00 	mov    $0x27,%rdx
  805591:	e9 8b 17 00 00       	jmpq   806d21 <_end+0x205c99>
  805596:	45 52                	rex.RB push %r10
  805598:	52                   	push   %rdx
  805599:	3a 20                	cmp    (%rax),%ah
  80559b:	5f                   	pop    %rdi
  80559c:	6d                   	insl   (%dx),%es:(%rdi)
  80559d:	79 5f                	jns    8055fe <_end+0x204576>
  80559f:	72 65                	jb     805606 <_end+0x20457e>
  8055a1:	61                   	(bad)  
  8055a2:	64 64 69 72 3a 20 43 	fs imul $0x6e614320,%fs:0x3a(%rdx),%esi
  8055a9:	61 6e 
  8055ab:	27                   	(bad)  
  8055ac:	74 20                	je     8055ce <_end+0x204546>
  8055ae:	6f                   	outsl  %ds:(%rsi),(%dx)
  8055af:	70 65                	jo     805616 <_end+0x20458e>
  8055b1:	6e                   	outsb  %ds:(%rsi),(%dx)
  8055b2:	20 64 69 72          	and    %ah,0x72(%rcx,%rbp,2)
  8055b6:	65 63 74 6f 72       	movslq %gs:0x72(%rdi,%rbp,2),%esi
  8055bb:	79 0a                	jns    8055c7 <_end+0x20453f>
  8055bd:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 8055d0 <_end+0x204548>
  8055c4:	48 c7 c2 27 00 00 00 	mov    $0x27,%rdx
  8055cb:	e9 51 17 00 00       	jmpq   806d21 <_end+0x205c99>
  8055d0:	45 52                	rex.RB push %r10
  8055d2:	52                   	push   %rdx
  8055d3:	3a 20                	cmp    (%rax),%ah
  8055d5:	5f                   	pop    %rdi
  8055d6:	6d                   	insl   (%dx),%es:(%rdi)
  8055d7:	79 5f                	jns    805638 <_end+0x2045b0>
  8055d9:	72 65                	jb     805640 <_end+0x2045b8>
  8055db:	61                   	(bad)  
  8055dc:	64 64 69 72 3a 20 43 	fs imul $0x6e614320,%fs:0x3a(%rdx),%esi
  8055e3:	61 6e 
  8055e5:	27                   	(bad)  
  8055e6:	74 20                	je     805608 <_end+0x204580>
  8055e8:	72 65                	jb     80564f <_end+0x2045c7>
  8055ea:	61                   	(bad)  
  8055eb:	64 20 64 69 72       	and    %ah,%fs:0x72(%rcx,%rbp,2)
  8055f0:	65 63 74 6f 72       	movslq %gs:0x72(%rdi,%rbp,2),%esi
  8055f5:	79 0a                	jns    805601 <_end+0x204579>
  8055f7:	53                   	push   %rbx
  8055f8:	51                   	push   %rcx
  8055f9:	48 8b 1d fd e3 ff ff 	mov    -0x1c03(%rip),%rbx        # 8039fd <_end+0x202975>
  805600:	48 8d 43 12          	lea    0x12(%rbx),%rax
  805604:	48 31 c9             	xor    %rcx,%rcx
  805607:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
  80560b:	48 01 cb             	add    %rcx,%rbx
  80560e:	48 8d 0d e8 e3 ff ff 	lea    -0x1c18(%rip),%rcx        # 8039fd <_end+0x202975>
  805615:	48 89 19             	mov    %rbx,(%rcx)
  805618:	59                   	pop    %rcx
  805619:	5b                   	pop    %rbx
  80561a:	c3                   	retq   
  80561b:	53                   	push   %rbx
  80561c:	51                   	push   %rcx
  80561d:	50                   	push   %rax
  80561e:	48 89 f1             	mov    %rsi,%rcx
  805621:	48 89 f8             	mov    %rdi,%rax
  805624:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
  805628:	48 39 d3             	cmp    %rdx,%rbx
  80562b:	7f 11                	jg     80563e <_end+0x2045b6>
  80562d:	48 89 c7             	mov    %rax,%rdi
  805630:	48 8b 77 20          	mov    0x20(%rdi),%rsi
  805634:	48 01 f3             	add    %rsi,%rbx
  805637:	48 39 d3             	cmp    %rdx,%rbx
  80563a:	7c 02                	jl     80563e <_end+0x2045b6>
  80563c:	eb 0b                	jmp    805649 <_end+0x2045c1>
  80563e:	48 83 c0 40          	add    $0x40,%rax
  805642:	48 89 c7             	mov    %rax,%rdi
  805645:	e2 da                	loop   805621 <_end+0x204599>
  805647:	eb 0f                	jmp    805658 <_end+0x2045d0>
  805649:	48 8d 0d 55 e5 ff ff 	lea    -0x1aab(%rip),%rcx        # 803ba5 <_end+0x202b1d>
  805650:	8b 10                	mov    (%rax),%edx
  805652:	89 11                	mov    %edx,(%rcx)
  805654:	58                   	pop    %rax
  805655:	59                   	pop    %rcx
  805656:	5b                   	pop    %rbx
  805657:	c3                   	retq   
  805658:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 80566b <_end+0x2045e3>
  80565f:	48 c7 c2 2d 00 00 00 	mov    $0x2d,%rdx
  805666:	e9 b6 16 00 00       	jmpq   806d21 <_end+0x205c99>
  80566b:	45 52                	rex.RB push %r10
  80566d:	52                   	push   %rdx
  80566e:	3a 20                	cmp    (%rax),%ah
  805670:	5f                   	pop    %rdi
  805671:	66 69 6e 64 5f 74    	imul   $0x745f,0x64(%rsi),%bp
  805677:	65 78 74             	gs js  8056ee <_end+0x204666>
  80567a:	5f                   	pop    %rdi
  80567b:	73 65                	jae    8056e2 <_end+0x20465a>
  80567d:	63 74 2e 3a          	movslq 0x3a(%rsi,%rbp,1),%esi
  805681:	20 4e 6f             	and    %cl,0x6f(%rsi)
  805684:	20 74 65 78          	and    %dh,0x78(%rbp,%riz,2)
  805688:	74 20                	je     8056aa <_end+0x204622>
  80568a:	73 65                	jae    8056f1 <_end+0x204669>
  80568c:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
  805690:	6e                   	outsb  %ds:(%rsi),(%dx)
  805691:	20 66 6f             	and    %ah,0x6f(%rsi)
  805694:	75 6e                	jne    805704 <_end+0x20467c>
  805696:	64 0a 51 41          	or     %fs:0x41(%rcx),%dl
  80569a:	50                   	push   %rax
  80569b:	50                   	push   %rax
  80569c:	49 89 f8             	mov    %rdi,%r8
  80569f:	48 89 f1             	mov    %rsi,%rcx
  8056a2:	83 3f 01             	cmpl   $0x1,(%rdi)
  8056a5:	75 1c                	jne    8056c3 <_end+0x20463b>
  8056a7:	41 83 38 01          	cmpl   $0x1,(%r8)
  8056ab:	75 13                	jne    8056c0 <_end+0x204638>
  8056ad:	48 8b 77 10          	mov    0x10(%rdi),%rsi
  8056b1:	49 8b 40 10          	mov    0x10(%r8),%rax
  8056b5:	48 39 c6             	cmp    %rax,%rsi
  8056b8:	0f 8c 86 00 00 00    	jl     805744 <_end+0x2046bc>
  8056be:	eb 03                	jmp    8056c3 <_end+0x20463b>
  8056c0:	49 89 f8             	mov    %rdi,%r8
  8056c3:	48 83 c7 38          	add    $0x38,%rdi
  8056c7:	e2 d9                	loop   8056a2 <_end+0x20461a>
  8056c9:	48 8d 35 d9 e4 ff ff 	lea    -0x1b27(%rip),%rsi        # 803ba9 <_end+0x202b21>
  8056d0:	49 8b 78 10          	mov    0x10(%r8),%rdi
  8056d4:	48 89 3e             	mov    %rdi,(%rsi)
  8056d7:	48 8d 35 d3 e4 ff ff 	lea    -0x1b2d(%rip),%rsi        # 803bb1 <_end+0x202b29>
  8056de:	4c 89 06             	mov    %r8,(%rsi)
  8056e1:	58                   	pop    %rax
  8056e2:	41 58                	pop    %r8
  8056e4:	59                   	pop    %rcx
  8056e5:	c3                   	retq   
  8056e6:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 8056f9 <_end+0x204671>
  8056ed:	48 c7 c2 2d 00 00 00 	mov    $0x2d,%rdx
  8056f4:	e9 28 16 00 00       	jmpq   806d21 <_end+0x205c99>
  8056f9:	45 52                	rex.RB push %r10
  8056fb:	52                   	push   %rdx
  8056fc:	3a 20                	cmp    (%rax),%ah
  8056fe:	5f                   	pop    %rdi
  8056ff:	66 69 6e 64 5f 66    	imul   $0x665f,0x64(%rsi),%bp
  805705:	69 72 73 74 5f 73 65 	imul   $0x65735f74,0x73(%rdx),%esi
  80570c:	67 5f                	addr32 pop %rdi
  80570e:	76 61                	jbe    805771 <_end+0x2046e9>
  805710:	64 64 72 3a          	fs fs jb 80574e <_end+0x2046c6>
  805714:	20 4e 6f             	and    %cl,0x6f(%rsi)
  805717:	20 73 65             	and    %dh,0x65(%rbx)
  80571a:	67 6d                	insl   (%dx),%es:(%edi)
  80571c:	65 6e                	outsb  %gs:(%rsi),(%dx)
  80571e:	74 20                	je     805740 <_end+0x2046b8>
  805720:	66 6f                	outsw  %ds:(%rsi),(%dx)
  805722:	75 6e                	jne    805792 <_end+0x20470a>
  805724:	64 0a 51 41          	or     %fs:0x41(%rcx),%dl
  805728:	50                   	push   %rax
  805729:	50                   	push   %rax
  80572a:	49 89 f8             	mov    %rdi,%r8
  80572d:	48 89 f1             	mov    %rsi,%rcx
  805730:	83 3f 01             	cmpl   $0x1,(%rdi)
  805733:	75 12                	jne    805747 <_end+0x2046bf>
  805735:	48 8b 77 10          	mov    0x10(%rdi),%rsi
  805739:	49 8b 40 10          	mov    0x10(%r8),%rax
  80573d:	48 39 c6             	cmp    %rax,%rsi
  805740:	7f 02                	jg     805744 <_end+0x2046bc>
  805742:	eb 03                	jmp    805747 <_end+0x2046bf>
  805744:	49 89 f8             	mov    %rdi,%r8
  805747:	48 83 c7 38          	add    $0x38,%rdi
  80574b:	e2 e3                	loop   805730 <_end+0x2046a8>
  80574d:	48 8d 35 79 e3 ff ff 	lea    -0x1c87(%rip),%rsi        # 803acd <_end+0x202a45>
  805754:	49 8b 40 10          	mov    0x10(%r8),%rax
  805758:	49 8b 48 30          	mov    0x30(%r8),%rcx
  80575c:	48 89 06             	mov    %rax,(%rsi)
  80575f:	48 8d 35 6f e3 ff ff 	lea    -0x1c91(%rip),%rsi        # 803ad5 <_end+0x202a4d>
  805766:	48 89 0e             	mov    %rcx,(%rsi)
  805769:	58                   	pop    %rax
  80576a:	41 58                	pop    %r8
  80576c:	59                   	pop    %rcx
  80576d:	c3                   	retq   
  80576e:	50                   	push   %rax
  80576f:	53                   	push   %rbx
  805770:	48 8b 05 56 e3 ff ff 	mov    -0x1caa(%rip),%rax        # 803acd <_end+0x202a45>
  805777:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
  80577d:	48 8b 1d 51 e3 ff ff 	mov    -0x1caf(%rip),%rbx        # 803ad5 <_end+0x202a4d>
  805784:	48 01 d8             	add    %rbx,%rax
  805787:	48 8b 1d 87 e2 ff ff 	mov    -0x1d79(%rip),%rbx        # 803a15 <_end+0x20298d>
  80578e:	48 8b 5b 28          	mov    0x28(%rbx),%rbx
  805792:	48 83 c3 38          	add    $0x38,%rbx
  805796:	48 8b 0d 33 00 00 00 	mov    0x33(%rip),%rcx        # 8057d0 <_end+0x204748>
  80579d:	48 01 cb             	add    %rcx,%rbx
  8057a0:	48 01 d8             	add    %rbx,%rax
  8057a3:	48 8d 1d a3 e2 ff ff 	lea    -0x1d5d(%rip),%rbx        # 803a4d <_end+0x2029c5>
  8057aa:	48 89 03             	mov    %rax,(%rbx)
  8057ad:	5b                   	pop    %rbx
  8057ae:	58                   	pop    %rax
  8057af:	c3                   	retq   
  8057b0:	18 00                	sbb    %al,(%rax)
	...
  8057ce:	00 00                	add    %al,(%rax)
  8057d0:	10 00                	adc    %al,(%rax)
  8057d2:	00 00                	add    %al,(%rax)
  8057d4:	00 00                	add    %al,(%rax)
  8057d6:	00 00                	add    %al,(%rax)
  8057d8:	50                   	push   %rax
  8057d9:	48 8d 05 d0 ff ff ff 	lea    -0x30(%rip),%rax        # 8057b0 <_end+0x204728>
  8057e0:	c6 00 18             	movb   $0x18,(%rax)
  8057e3:	58                   	pop    %rax
  8057e4:	c3                   	retq   
  8057e5:	50                   	push   %rax
  8057e6:	48 8d 05 c3 ff ff ff 	lea    -0x3d(%rip),%rax        # 8057b0 <_end+0x204728>
  8057ed:	48 c7 00 fb ff ff 06 	movq   $0x6fffffb,(%rax)
  8057f4:	48 83 c0 08          	add    $0x8,%rax
  8057f8:	c6 00 01             	movb   $0x1,(%rax)
  8057fb:	58                   	pop    %rax
  8057fc:	c3                   	retq   
  8057fd:	53                   	push   %rbx
  8057fe:	50                   	push   %rax
  8057ff:	51                   	push   %rcx
  805800:	48 8d 05 4e e2 ff ff 	lea    -0x1db2(%rip),%rax        # 803a55 <_end+0x2029cd>
  805807:	c6 00 01             	movb   $0x1,(%rax)
  80580a:	48 83 c0 04          	add    $0x4,%rax
  80580e:	c6 00 05             	movb   $0x5,(%rax)
  805811:	48 83 c0 04          	add    $0x4,%rax
  805815:	48 8b 1d f9 e1 ff ff 	mov    -0x1e07(%rip),%rbx        # 803a15 <_end+0x20298d>
  80581c:	48 8b 5b 28          	mov    0x28(%rbx),%rbx
  805820:	48 83 c3 38          	add    $0x38,%rbx
  805824:	48 8b 0d a5 ff ff ff 	mov    -0x5b(%rip),%rcx        # 8057d0 <_end+0x204748>
  80582b:	48 01 cb             	add    %rcx,%rbx
  80582e:	48 89 18             	mov    %rbx,(%rax)
  805831:	48 83 c0 08          	add    $0x8,%rax
  805835:	48 8b 1d 11 e2 ff ff 	mov    -0x1def(%rip),%rbx        # 803a4d <_end+0x2029c5>
  80583c:	48 89 18             	mov    %rbx,(%rax)
  80583f:	48 83 c0 08          	add    $0x8,%rax
  805843:	48 89 18             	mov    %rbx,(%rax)
  805846:	48 83 c0 08          	add    $0x8,%rax
  80584a:	48 8b 1d d4 e2 ff ff 	mov    -0x1d2c(%rip),%rbx        # 803b25 <_end+0x202a9d>
  805851:	48 89 18             	mov    %rbx,(%rax)
  805854:	48 8b 0d 08 0a 00 00 	mov    0xa08(%rip),%rcx        # 806263 <_end+0x2051db>
  80585b:	48 01 08             	add    %rcx,(%rax)
  80585e:	48 83 c0 08          	add    $0x8,%rax
  805862:	48 89 18             	mov    %rbx,(%rax)
  805865:	48 01 08             	add    %rcx,(%rax)
  805868:	48 83 c0 08          	add    $0x8,%rax
  80586c:	59                   	pop    %rcx
  80586d:	58                   	pop    %rax
  80586e:	5b                   	pop    %rbx
  80586f:	c3                   	retq   
  805870:	53                   	push   %rbx
  805871:	50                   	push   %rax
  805872:	48 8d 05 14 e2 ff ff 	lea    -0x1dec(%rip),%rax        # 803a8d <_end+0x202a05>
  805879:	48 8d 1d 25 e3 ff ff 	lea    -0x1cdb(%rip),%rbx        # 803ba5 <_end+0x202b1d>
  805880:	8b 1b                	mov    (%rbx),%ebx
  805882:	89 18                	mov    %ebx,(%rax)
  805884:	48 83 c0 04          	add    $0x4,%rax
  805888:	c6 00 01             	movb   $0x1,(%rax)
  80588b:	48 83 c0 04          	add    $0x4,%rax
  80588f:	c6 00 06             	movb   $0x6,(%rax)
  805892:	48 83 c0 08          	add    $0x8,%rax
  805896:	48 8b 1d b0 e1 ff ff 	mov    -0x1e50(%rip),%rbx        # 803a4d <_end+0x2029c5>
  80589d:	48 89 18             	mov    %rbx,(%rax)
  8058a0:	48 83 c0 08          	add    $0x8,%rax
  8058a4:	48 8b 1d 6a e1 ff ff 	mov    -0x1e96(%rip),%rbx        # 803a15 <_end+0x20298d>
  8058ab:	48 8b 5b 28          	mov    0x28(%rbx),%rbx
  8058af:	48 83 c3 38          	add    $0x38,%rbx
  8058b3:	48 8b 0d 16 ff ff ff 	mov    -0xea(%rip),%rcx        # 8057d0 <_end+0x204748>
  8058ba:	48 01 cb             	add    %rcx,%rbx
  8058bd:	48 89 18             	mov    %rbx,(%rax)
  8058c0:	48 83 c0 08          	add    $0x8,%rax
  8058c4:	48 8b 1d 5a e2 ff ff 	mov    -0x1da6(%rip),%rbx        # 803b25 <_end+0x202a9d>
  8058cb:	48 8b 0d 91 09 00 00 	mov    0x991(%rip),%rcx        # 806263 <_end+0x2051db>
  8058d2:	48 89 18             	mov    %rbx,(%rax)
  8058d5:	48 01 08             	add    %rcx,(%rax)
  8058d8:	48 83 c0 08          	add    $0x8,%rax
  8058dc:	58                   	pop    %rax
  8058dd:	5b                   	pop    %rbx
  8058de:	c3                   	retq   
  8058df:	51                   	push   %rcx
  8058e0:	52                   	push   %rdx
  8058e1:	48 89 f1             	mov    %rsi,%rcx
  8058e4:	48 89 fe             	mov    %rdi,%rsi
  8058e7:	48 8b 57 04          	mov    0x4(%rdi),%rdx
  8058eb:	48 83 fa 02          	cmp    $0x2,%rdx
  8058ef:	74 09                	je     8058fa <_end+0x204872>
  8058f1:	48 83 c6 40          	add    $0x40,%rsi
  8058f5:	48 89 f7             	mov    %rsi,%rdi
  8058f8:	e2 ea                	loop   8058e4 <_end+0x20485c>
  8058fa:	48 8d 3d 2c e2 ff ff 	lea    -0x1dd4(%rip),%rdi        # 803b2d <_end+0x202aa5>
  805901:	48 89 37             	mov    %rsi,(%rdi)
  805904:	48 8b 56 20          	mov    0x20(%rsi),%rdx
  805908:	b9 18 00 00 00       	mov    $0x18,%ecx
  80590d:	89 d0                	mov    %edx,%eax
  80590f:	48 31 d2             	xor    %rdx,%rdx
  805912:	f7 f9                	idiv   %ecx
  805914:	48 8d 3d 1a e2 ff ff 	lea    -0x1de6(%rip),%rdi        # 803b35 <_end+0x202aad>
  80591b:	48 89 07             	mov    %rax,(%rdi)
  80591e:	5a                   	pop    %rdx
  80591f:	59                   	pop    %rcx
  805920:	c3                   	retq   
  805921:	51                   	push   %rcx
  805922:	50                   	push   %rax
  805923:	53                   	push   %rbx
  805924:	41 50                	push   %r8
  805926:	48 85 ff             	test   %rdi,%rdi
  805929:	74 3c                	je     805967 <_end+0x2048df>
  80592b:	48 89 f1             	mov    %rsi,%rcx
  80592e:	4c 8b 05 18 e2 ff ff 	mov    -0x1de8(%rip),%r8        # 803b4d <_end+0x202ac5>
  805935:	48 8b 1d 94 fe ff ff 	mov    -0x16c(%rip),%rbx        # 8057d0 <_end+0x204748>
  80593c:	48 8b 35 d2 e0 ff ff 	mov    -0x1f2e(%rip),%rsi        # 803a15 <_end+0x20298d>
  805943:	48 83 c7 18          	add    $0x18,%rdi
  805947:	48 03 37             	add    (%rdi),%rsi
  80594a:	48 89 f7             	mov    %rsi,%rdi
  80594d:	48 83 c7 08          	add    $0x8,%rdi
  805951:	83 3f 00             	cmpl   $0x0,(%rdi)
  805954:	74 0b                	je     805961 <_end+0x2048d9>
  805956:	4c 39 07             	cmp    %r8,(%rdi)
  805959:	7e 03                	jle    80595e <_end+0x2048d6>
  80595b:	48 01 1f             	add    %rbx,(%rdi)
  80595e:	48 01 17             	add    %rdx,(%rdi)
  805961:	48 83 c7 10          	add    $0x10,%rdi
  805965:	e2 e6                	loop   80594d <_end+0x2048c5>
  805967:	41 58                	pop    %r8
  805969:	5b                   	pop    %rbx
  80596a:	58                   	pop    %rax
  80596b:	59                   	pop    %rcx
  80596c:	c3                   	retq   
  80596d:	50                   	push   %rax
  80596e:	53                   	push   %rbx
  80596f:	51                   	push   %rcx
  805970:	41 50                	push   %r8
  805972:	89 d0                	mov    %edx,%eax
  805974:	48 31 d2             	xor    %rdx,%rdx
  805977:	b9 18 00 00 00       	mov    $0x18,%ecx
  80597c:	f7 f9                	idiv   %ecx
  80597e:	89 c1                	mov    %eax,%ecx
  805980:	48 8b 05 8e e0 ff ff 	mov    -0x1f72(%rip),%rax        # 803a15 <_end+0x20298d>
  805987:	48 01 f8             	add    %rdi,%rax
  80598a:	48 8b 1d 3f fe ff ff 	mov    -0x1c1(%rip),%rbx        # 8057d0 <_end+0x204748>
  805991:	4c 8b 05 b5 e1 ff ff 	mov    -0x1e4b(%rip),%r8        # 803b4d <_end+0x202ac5>
  805998:	83 38 00             	cmpl   $0x0,(%rax)
  80599b:	74 0b                	je     8059a8 <_end+0x204920>
  80599d:	4c 39 00             	cmp    %r8,(%rax)
  8059a0:	7e 03                	jle    8059a5 <_end+0x20491d>
  8059a2:	48 01 18             	add    %rbx,(%rax)
  8059a5:	48 01 30             	add    %rsi,(%rax)
  8059a8:	48 83 c0 18          	add    $0x18,%rax
  8059ac:	e2 ea                	loop   805998 <_end+0x204910>
  8059ae:	41 58                	pop    %r8
  8059b0:	59                   	pop    %rcx
  8059b1:	5b                   	pop    %rbx
  8059b2:	58                   	pop    %rax
  8059b3:	c3                   	retq   
  8059b4:	50                   	push   %rax
  8059b5:	53                   	push   %rbx
  8059b6:	41 50                	push   %r8
  8059b8:	41 51                	push   %r9
  8059ba:	49 89 c8             	mov    %rcx,%r8
  8059bd:	48 8b 1d 0c fe ff ff 	mov    -0x1f4(%rip),%rbx        # 8057d0 <_end+0x204748>
  8059c4:	4c 8b 0d 82 e1 ff ff 	mov    -0x1e7e(%rip),%r9        # 803b4d <_end+0x202ac5>
  8059cb:	48 83 ff 00          	cmp    $0x0,%rdi
  8059cf:	74 5f                	je     805a30 <_end+0x2049a8>
  8059d1:	89 d0                	mov    %edx,%eax
  8059d3:	48 31 d2             	xor    %rdx,%rdx
  8059d6:	b9 10 00 00 00       	mov    $0x10,%ecx
  8059db:	f7 f9                	idiv   %ecx
  8059dd:	89 c1                	mov    %eax,%ecx
  8059df:	4c 89 c2             	mov    %r8,%rdx
  8059e2:	48 89 f8             	mov    %rdi,%rax
  8059e5:	83 38 03             	cmpl   $0x3,(%rax)
  8059e8:	74 11                	je     8059fb <_end+0x204973>
  8059ea:	48 81 38 fb ff ff 6f 	cmpq   $0x6ffffffb,(%rax)
  8059f1:	75 23                	jne    805a16 <_end+0x20498e>
  8059f3:	eb 00                	jmp    8059f5 <_end+0x20496d>
  8059f5:	48 83 c0 08          	add    $0x8,%rax
  8059f9:	eb 2f                	jmp    805a2a <_end+0x2049a2>
  8059fb:	48 83 c0 08          	add    $0x8,%rax
  8059ff:	48 8d 3d b3 e1 ff ff 	lea    -0x1e4d(%rip),%rdi        # 803bb9 <_end+0x202b31>
  805a06:	48 01 30             	add    %rsi,(%rax)
  805a09:	48 01 18             	add    %rbx,(%rax)
  805a0c:	50                   	push   %rax
  805a0d:	48 8b 00             	mov    (%rax),%rax
  805a10:	48 89 07             	mov    %rax,(%rdi)
  805a13:	58                   	pop    %rax
  805a14:	eb 14                	jmp    805a2a <_end+0x2049a2>
  805a16:	48 83 c0 08          	add    $0x8,%rax
  805a1a:	48 39 10             	cmp    %rdx,(%rax)
  805a1d:	7e 0b                	jle    805a2a <_end+0x2049a2>
  805a1f:	4c 39 08             	cmp    %r9,(%rax)
  805a22:	7e 03                	jle    805a27 <_end+0x20499f>
  805a24:	48 01 18             	add    %rbx,(%rax)
  805a27:	48 01 30             	add    %rsi,(%rax)
  805a2a:	48 83 c0 08          	add    $0x8,%rax
  805a2e:	e2 b5                	loop   8059e5 <_end+0x20495d>
  805a30:	41 59                	pop    %r9
  805a32:	59                   	pop    %rcx
  805a33:	5b                   	pop    %rbx
  805a34:	58                   	pop    %rax
  805a35:	c3                   	retq   
  805a36:	51                   	push   %rcx
  805a37:	48 89 f1             	mov    %rsi,%rcx
  805a3a:	48 83 c7 10          	add    $0x10,%rdi
  805a3e:	48 39 17             	cmp    %rdx,(%rdi)
  805a41:	74 0a                	je     805a4d <_end+0x2049c5>
  805a43:	eb 00                	jmp    805a45 <_end+0x2049bd>
  805a45:	48 83 c7 30          	add    $0x30,%rdi
  805a49:	e2 ef                	loop   805a3a <_end+0x2049b2>
  805a4b:	eb 23                	jmp    805a70 <_end+0x2049e8>
  805a4d:	48 83 c7 08          	add    $0x8,%rdi
  805a51:	48 8b 0f             	mov    (%rdi),%rcx
  805a54:	48 83 e9 38          	sub    $0x38,%rcx
  805a58:	48 83 c7 08          	add    $0x8,%rdi
  805a5c:	48 8b 17             	mov    (%rdi),%rdx
  805a5f:	48 89 cf             	mov    %rcx,%rdi
  805a62:	48 c7 c6 38 00 00 00 	mov    $0x38,%rsi
  805a69:	e8 81 0b 00 00       	callq  8065ef <_end+0x205567>
  805a6e:	59                   	pop    %rcx
  805a6f:	c3                   	retq   
  805a70:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 805a83 <_end+0x2049fb>
  805a77:	48 c7 c2 29 00 00 00 	mov    $0x29,%rdx
  805a7e:	e9 9e 12 00 00       	jmpq   806d21 <_end+0x205c99>
  805a83:	45 52                	rex.RB push %r10
  805a85:	52                   	push   %rdx
  805a86:	3a 20                	cmp    (%rax),%ah
  805a88:	65 64 69 74 5f 67 6f 	gs imul $0x725f746f,%fs:0x67(%rdi,%rbx,2),%esi
  805a8f:	74 5f 72 
  805a92:	65 63 6f 72          	movslq %gs:0x72(%rdi),%ebp
  805a96:	64 73 3a             	fs jae 805ad3 <_end+0x204a4b>
  805a99:	20 4e 6f             	and    %cl,0x6f(%rsi)
  805a9c:	20 73 75             	and    %dh,0x75(%rbx)
  805a9f:	63 68 20             	movslq 0x20(%rax),%ebp
  805aa2:	47                   	rex.RXB
  805aa3:	4f 54                	rex.WRXB push %r12
  805aa5:	20 76 61             	and    %dh,0x61(%rsi)
  805aa8:	64 64 72 0a          	fs fs jb 805ab6 <_end+0x204a2e>
  805aac:	48 8d 3d 75 bf ff ff 	lea    -0x408b(%rip),%rdi        # 801a28 <_end+0x2009a0>
  805ab3:	48 8d 35 63 e0 ff ff 	lea    -0x1f9d(%rip),%rsi        # 803b1d <_end+0x202a95>
  805aba:	48 89 3e             	mov    %rdi,(%rsi)
  805abd:	48 8d 35 cd 12 00 00 	lea    0x12cd(%rip),%rsi        # 806d91 <_end+0x205d09>
  805ac4:	48 29 fe             	sub    %rdi,%rsi
  805ac7:	48 8b 05 a6 08 00 00 	mov    0x8a6(%rip),%rax        # 806374 <_end+0x2052ec>
  805ace:	48 01 c6             	add    %rax,%rsi
  805ad1:	48 8d 3d 4d e0 ff ff 	lea    -0x1fb3(%rip),%rdi        # 803b25 <_end+0x202a9d>
  805ad8:	48 89 37             	mov    %rsi,(%rdi)
  805adb:	c3                   	retq   
  805adc:	53                   	push   %rbx
  805add:	51                   	push   %rcx
  805ade:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  805ae5:	48 31 db             	xor    %rbx,%rbx
  805ae8:	48 8b 1e             	mov    (%rsi),%rbx
  805aeb:	48 8b 07             	mov    (%rdi),%rax
  805aee:	48 39 d8             	cmp    %rbx,%rax
  805af1:	75 13                	jne    805b06 <_end+0x204a7e>
  805af3:	48 83 c7 08          	add    $0x8,%rdi
  805af7:	48 83 c6 08          	add    $0x8,%rsi
  805afb:	e2 e8                	loop   805ae5 <_end+0x204a5d>
  805afd:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
  805b04:	eb 07                	jmp    805b0d <_end+0x204a85>
  805b06:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  805b0d:	59                   	pop    %rcx
  805b0e:	5b                   	pop    %rbx
  805b0f:	c3                   	retq   
  805b10:	7f 45                	jg     805b57 <_end+0x204acf>
  805b12:	4c                   	rex.WR
  805b13:	46 02 01             	rex.RX add (%rcx),%r8b
  805b16:	01 00                	add    %eax,(%rax)
  805b18:	52                   	push   %rdx
  805b19:	53                   	push   %rbx
  805b1a:	56                   	push   %rsi
  805b1b:	51                   	push   %rcx
  805b1c:	48 8b 17             	mov    (%rdi),%rdx
  805b1f:	48 8b 35 ea ff ff ff 	mov    -0x16(%rip),%rsi        # 805b10 <_end+0x204a88>
  805b26:	48 39 f2             	cmp    %rsi,%rdx
  805b29:	75 09                	jne    805b34 <_end+0x204aac>
  805b2b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  805b32:	eb 03                	jmp    805b37 <_end+0x204aaf>
  805b34:	48 31 c0             	xor    %rax,%rax
  805b37:	59                   	pop    %rcx
  805b38:	5e                   	pop    %rsi
  805b39:	5b                   	pop    %rbx
  805b3a:	5a                   	pop    %rdx
  805b3b:	c3                   	retq   
  805b3c:	50                   	push   %rax
  805b3d:	53                   	push   %rbx
  805b3e:	51                   	push   %rcx
  805b3f:	52                   	push   %rdx
  805b40:	56                   	push   %rsi
  805b41:	e8 b1 fa ff ff       	callq  8055f7 <_end+0x20456f>
  805b46:	48 8d 1d b8 de ff ff 	lea    -0x2148(%rip),%rbx        # 803a05 <_end+0x20297d>
  805b4d:	48 89 03             	mov    %rax,(%rbx)
  805b50:	48 89 c7             	mov    %rax,%rdi
  805b53:	e8 49 0f 00 00       	callq  806aa1 <_end+0x205a19>
  805b58:	48 8d 3d ae de ff ff 	lea    -0x2152(%rip),%rdi        # 803a0d <_end+0x202985>
  805b5f:	48 89 07             	mov    %rax,(%rdi)
  805b62:	48 8b 3d 9c de ff ff 	mov    -0x2164(%rip),%rdi        # 803a05 <_end+0x20297d>
  805b69:	48 8b 15 9d de ff ff 	mov    -0x2163(%rip),%rdx        # 803a0d <_end+0x202985>
  805b70:	48 8b 35 8e de ff ff 	mov    -0x2172(%rip),%rsi        # 803a05 <_end+0x20297d>
  805b77:	e8 c0 0e 00 00       	callq  806a3c <_end+0x2059b4>
  805b7c:	48 8d 35 fb be ff ff 	lea    -0x4105(%rip),%rsi        # 801a7e <_end+0x2009f6>
  805b83:	48 c7 c2 16 00 00 00 	mov    $0x16,%rdx
  805b8a:	e8 ad 0e 00 00       	callq  806a3c <_end+0x2059b4>
  805b8f:	48 8b 3d 6f de ff ff 	mov    -0x2191(%rip),%rdi        # 803a05 <_end+0x20297d>
  805b96:	48 c7 c6 02 00 00 00 	mov    $0x2,%rsi
  805b9d:	e8 76 0d 00 00       	callq  806918 <_end+0x205890>
  805ba2:	48 85 c0             	test   %rax,%rax
  805ba5:	7e 9a                	jle    805b41 <_end+0x204ab9>
  805ba7:	48 8d 35 67 de ff ff 	lea    -0x2199(%rip),%rsi        # 803a15 <_end+0x20298d>
  805bae:	48 89 06             	mov    %rax,(%rsi)
  805bb1:	48 89 c7             	mov    %rax,%rdi
  805bb4:	e8 5f ff ff ff       	callq  805b18 <_end+0x204a90>
  805bb9:	48 85 c0             	test   %rax,%rax
  805bbc:	74 83                	je     805b41 <_end+0x204ab9>
  805bbe:	48 8b 3d 50 de ff ff 	mov    -0x21b0(%rip),%rdi        # 803a15 <_end+0x20298d>
  805bc5:	48 89 fe             	mov    %rdi,%rsi
  805bc8:	48 89 f8             	mov    %rdi,%rax
  805bcb:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
  805bcf:	48 01 ce             	add    %rcx,%rsi
  805bd2:	48 8d 15 44 de ff ff 	lea    -0x21bc(%rip),%rdx        # 803a1d <_end+0x202995>
  805bd9:	48 89 32             	mov    %rsi,(%rdx)
  805bdc:	48 89 c7             	mov    %rax,%rdi
  805bdf:	8b 4f 38             	mov    0x38(%rdi),%ecx
  805be2:	0f b7 c9             	movzwl %cx,%ecx
  805be5:	48 8d 15 41 de ff ff 	lea    -0x21bf(%rip),%rdx        # 803a2d <_end+0x2029a5>
  805bec:	48 89 0a             	mov    %rcx,(%rdx)
  805bef:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx
  805bf6:	48 0f af d1          	imul   %rcx,%rdx
  805bfa:	48 8d 0d 24 de ff ff 	lea    -0x21dc(%rip),%rcx        # 803a25 <_end+0x20299d>
  805c01:	48 89 11             	mov    %rdx,(%rcx)
  805c04:	48 89 c7             	mov    %rax,%rdi
  805c07:	48 89 c6             	mov    %rax,%rsi
  805c0a:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
  805c0e:	48 01 ce             	add    %rcx,%rsi
  805c11:	48 8d 15 1d de ff ff 	lea    -0x21e3(%rip),%rdx        # 803a35 <_end+0x2029ad>
  805c18:	48 89 32             	mov    %rsi,(%rdx)
  805c1b:	48 89 c7             	mov    %rax,%rdi
  805c1e:	8b 4f 3c             	mov    0x3c(%rdi),%ecx
  805c21:	0f b7 c9             	movzwl %cx,%ecx
  805c24:	48 8d 15 1a de ff ff 	lea    -0x21e6(%rip),%rdx        # 803a45 <_end+0x2029bd>
  805c2b:	48 89 0a             	mov    %rcx,(%rdx)
  805c2e:	48 c7 c2 40 00 00 00 	mov    $0x40,%rdx
  805c35:	48 0f af d1          	imul   %rcx,%rdx
  805c39:	48 8d 0d fd dd ff ff 	lea    -0x2203(%rip),%rcx        # 803a3d <_end+0x2029b5>
  805c40:	48 89 11             	mov    %rdx,(%rcx)
  805c43:	48 8b 3d d3 dd ff ff 	mov    -0x222d(%rip),%rdi        # 803a1d <_end+0x202995>
  805c4a:	48 8b 35 dc dd ff ff 	mov    -0x2224(%rip),%rsi        # 803a2d <_end+0x2029a5>
  805c51:	e8 42 fa ff ff       	callq  805698 <_end+0x204610>
  805c56:	48 8b 05 b8 dd ff ff 	mov    -0x2248(%rip),%rax        # 803a15 <_end+0x20298d>
  805c5d:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
  805c61:	48 8b 15 41 df ff ff 	mov    -0x20bf(%rip),%rdx        # 803ba9 <_end+0x202b21>
  805c68:	48 29 d3             	sub    %rdx,%rbx
  805c6b:	48 01 c3             	add    %rax,%rbx
  805c6e:	48 89 de             	mov    %rbx,%rsi
  805c71:	48 8d 3d b0 bd ff ff 	lea    -0x4250(%rip),%rdi        # 801a28 <_end+0x2009a0>
  805c78:	e8 5f fe ff ff       	callq  805adc <_end+0x204a54>
  805c7d:	48 85 c0             	test   %rax,%rax
  805c80:	0f 84 bb fe ff ff    	je     805b41 <_end+0x204ab9>
  805c86:	48 8b 3d a8 dd ff ff 	mov    -0x2258(%rip),%rdi        # 803a35 <_end+0x2029ad>
  805c8d:	48 8b 35 b1 dd ff ff 	mov    -0x224f(%rip),%rsi        # 803a45 <_end+0x2029bd>
  805c94:	e8 81 09 00 00       	callq  80661a <_end+0x205592>
  805c99:	48 8b 15 9d de ff ff 	mov    -0x2163(%rip),%rdx        # 803b3d <_end+0x202ab5>
  805ca0:	48 85 d2             	test   %rdx,%rdx
  805ca3:	0f 84 a7 00 00 00    	je     805d50 <_end+0x204cc8>
  805ca9:	48 8b 3d 65 dd ff ff 	mov    -0x229b(%rip),%rdi        # 803a15 <_end+0x20298d>
  805cb0:	48 01 d7             	add    %rdx,%rdi
  805cb3:	48 8b 35 8b de ff ff 	mov    -0x2175(%rip),%rsi        # 803b45 <_end+0x202abd>
  805cba:	e8 9e 09 00 00       	callq  80665d <_end+0x2055d5>
  805cbf:	48 8b 35 97 de ff ff 	mov    -0x2169(%rip),%rsi        # 803b5d <_end+0x202ad5>
  805cc6:	48 85 f6             	test   %rsi,%rsi
  805cc9:	0f 85 81 00 00 00    	jne    805d50 <_end+0x204cc8>
  805ccf:	48 8b 0d 4f dd ff ff 	mov    -0x22b1(%rip),%rcx        # 803a25 <_end+0x20299d>
  805cd6:	48 8d 15 18 de ff ff 	lea    -0x21e8(%rip),%rdx        # 803af5 <_end+0x202a6d>
  805cdd:	48 89 0a             	mov    %rcx,(%rdx)
  805ce0:	83 02 40             	addl   $0x40,(%rdx)
  805ce3:	48 8b 15 33 dd ff ff 	mov    -0x22cd(%rip),%rdx        # 803a1d <_end+0x202995>
  805cea:	48 01 d1             	add    %rdx,%rcx
  805ced:	48 8d 15 19 de ff ff 	lea    -0x21e7(%rip),%rdx        # 803b0d <_end+0x202a85>
  805cf4:	48 89 0a             	mov    %rcx,(%rdx)
  805cf7:	48 8d 15 e7 dd ff ff 	lea    -0x2219(%rip),%rdx        # 803ae5 <_end+0x202a5d>
  805cfe:	48 89 0a             	mov    %rcx,(%rdx)
  805d01:	48 8b 3d 35 de ff ff 	mov    -0x21cb(%rip),%rdi        # 803b3d <_end+0x202ab5>
  805d08:	48 8b 35 5e de ff ff 	mov    -0x21a2(%rip),%rsi        # 803b6d <_end+0x202ae5>
  805d0f:	48 01 fe             	add    %rdi,%rsi
  805d12:	48 8b 15 fc dc ff ff 	mov    -0x2304(%rip),%rdx        # 803a15 <_end+0x20298d>
  805d19:	48 01 f2             	add    %rsi,%rdx
  805d1c:	48 8d 35 f2 dd ff ff 	lea    -0x220e(%rip),%rsi        # 803b15 <_end+0x202a8d>
  805d23:	48 89 16             	mov    %rdx,(%rsi)
  805d26:	48 29 ca             	sub    %rcx,%rdx
  805d29:	48 8d 35 cd dd ff ff 	lea    -0x2233(%rip),%rsi        # 803afd <_end+0x202a75>
  805d30:	48 89 16             	mov    %rdx,(%rsi)
  805d33:	48 8b 35 db dd ff ff 	mov    -0x2225(%rip),%rsi        # 803b15 <_end+0x202a8d>
  805d3a:	48 8b 15 f4 dc ff ff 	mov    -0x230c(%rip),%rdx        # 803a35 <_end+0x2029ad>
  805d41:	48 29 f2             	sub    %rsi,%rdx
  805d44:	48 8d 35 ba dd ff ff 	lea    -0x2246(%rip),%rsi        # 803b05 <_end+0x202a7d>
  805d4b:	48 89 16             	mov    %rdx,(%rsi)
  805d4e:	eb 3c                	jmp    805d8c <_end+0x204d04>
  805d50:	48 8b 0d ce dc ff ff 	mov    -0x2332(%rip),%rcx        # 803a25 <_end+0x20299d>
  805d57:	48 8d 15 97 dd ff ff 	lea    -0x2269(%rip),%rdx        # 803af5 <_end+0x202a6d>
  805d5e:	48 89 0a             	mov    %rcx,(%rdx)
  805d61:	83 02 40             	addl   $0x40,(%rdx)
  805d64:	48 8b 15 b2 dc ff ff 	mov    -0x234e(%rip),%rdx        # 803a1d <_end+0x202995>
  805d6b:	48 01 d1             	add    %rdx,%rcx
  805d6e:	48 8d 15 70 dd ff ff 	lea    -0x2290(%rip),%rdx        # 803ae5 <_end+0x202a5d>
  805d75:	48 89 0a             	mov    %rcx,(%rdx)
  805d78:	48 8b 15 b6 dc ff ff 	mov    -0x234a(%rip),%rdx        # 803a35 <_end+0x2029ad>
  805d7f:	48 29 ca             	sub    %rcx,%rdx
  805d82:	48 8d 0d 54 dd ff ff 	lea    -0x22ac(%rip),%rcx        # 803add <_end+0x202a55>
  805d89:	48 89 11             	mov    %rdx,(%rcx)
  805d8c:	5e                   	pop    %rsi
  805d8d:	5a                   	pop    %rdx
  805d8e:	59                   	pop    %rcx
  805d8f:	5b                   	pop    %rbx
  805d90:	58                   	pop    %rax
  805d91:	c3                   	retq   
	...
  805d9a:	50                   	push   %rax
  805d9b:	53                   	push   %rbx
  805d9c:	51                   	push   %rcx
  805d9d:	48 8d 35 0e 00 00 00 	lea    0xe(%rip),%rsi        # 805db2 <_end+0x204d2a>
  805da4:	48 c7 c2 18 00 00 00 	mov    $0x18,%rdx
  805dab:	e8 8c 0c 00 00       	callq  806a3c <_end+0x2059b4>
  805db0:	eb 18                	jmp    805dca <_end+0x204d42>
  805db2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  805db7:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  805dbc:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  805dc1:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  805dc6:	20 0a                	and    %cl,(%rdx)
  805dc8:	0a 20                	or     (%rax),%ah
  805dca:	48 8d 05 84 dc ff ff 	lea    -0x237c(%rip),%rax        # 803a55 <_end+0x2029cd>
  805dd1:	48 8d 1d ba ff ff ff 	lea    -0x46(%rip),%rbx        # 805d92 <_end+0x204d0a>
  805dd8:	8b 08                	mov    (%rax),%ecx
  805dda:	89 0b                	mov    %ecx,(%rbx)
  805ddc:	50                   	push   %rax
  805ddd:	48 8d 15 ae ff ff ff 	lea    -0x52(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805de4:	48 8b 3a             	mov    (%rdx),%rdi
  805de7:	e8 78 0a 00 00       	callq  806864 <_end+0x2057dc>
  805dec:	48 8d 35 69 f5 ff ff 	lea    -0xa97(%rip),%rsi        # 80535c <_end+0x2042d4>
  805df3:	e8 20 0a 00 00       	callq  806818 <_end+0x205790>
  805df8:	48 8d 35 08 0a 00 00 	lea    0xa08(%rip),%rsi        # 806807 <_end+0x20577f>
  805dff:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805e06:	e8 31 0c 00 00       	callq  806a3c <_end+0x2059b4>
  805e0b:	48 8d 35 49 f5 ff ff 	lea    -0xab7(%rip),%rsi        # 80535b <_end+0x2042d3>
  805e12:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805e19:	e8 1e 0c 00 00       	callq  806a3c <_end+0x2059b4>
  805e1e:	58                   	pop    %rax
  805e1f:	48 83 c0 04          	add    $0x4,%rax
  805e23:	8b 08                	mov    (%rax),%ecx
  805e25:	89 0b                	mov    %ecx,(%rbx)
  805e27:	50                   	push   %rax
  805e28:	48 8d 15 63 ff ff ff 	lea    -0x9d(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805e2f:	48 8b 3a             	mov    (%rdx),%rdi
  805e32:	e8 2d 0a 00 00       	callq  806864 <_end+0x2057dc>
  805e37:	48 8d 35 1e f5 ff ff 	lea    -0xae2(%rip),%rsi        # 80535c <_end+0x2042d4>
  805e3e:	e8 d5 09 00 00       	callq  806818 <_end+0x205790>
  805e43:	48 8d 35 bd 09 00 00 	lea    0x9bd(%rip),%rsi        # 806807 <_end+0x20577f>
  805e4a:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805e51:	e8 e6 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805e56:	48 8d 35 fe f4 ff ff 	lea    -0xb02(%rip),%rsi        # 80535b <_end+0x2042d3>
  805e5d:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805e64:	e8 d3 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805e69:	58                   	pop    %rax
  805e6a:	48 83 c0 04          	add    $0x4,%rax
  805e6e:	48 8b 08             	mov    (%rax),%rcx
  805e71:	48 89 0b             	mov    %rcx,(%rbx)
  805e74:	50                   	push   %rax
  805e75:	48 8d 15 16 ff ff ff 	lea    -0xea(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805e7c:	48 8b 3a             	mov    (%rdx),%rdi
  805e7f:	e8 e0 09 00 00       	callq  806864 <_end+0x2057dc>
  805e84:	48 8d 35 d1 f4 ff ff 	lea    -0xb2f(%rip),%rsi        # 80535c <_end+0x2042d4>
  805e8b:	e8 88 09 00 00       	callq  806818 <_end+0x205790>
  805e90:	48 8d 35 70 09 00 00 	lea    0x970(%rip),%rsi        # 806807 <_end+0x20577f>
  805e97:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805e9e:	e8 99 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805ea3:	48 8d 35 b1 f4 ff ff 	lea    -0xb4f(%rip),%rsi        # 80535b <_end+0x2042d3>
  805eaa:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805eb1:	e8 86 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805eb6:	58                   	pop    %rax
  805eb7:	48 83 c0 08          	add    $0x8,%rax
  805ebb:	48 8b 08             	mov    (%rax),%rcx
  805ebe:	48 89 0b             	mov    %rcx,(%rbx)
  805ec1:	50                   	push   %rax
  805ec2:	48 8d 15 c9 fe ff ff 	lea    -0x137(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805ec9:	48 8b 3a             	mov    (%rdx),%rdi
  805ecc:	e8 93 09 00 00       	callq  806864 <_end+0x2057dc>
  805ed1:	48 8d 35 84 f4 ff ff 	lea    -0xb7c(%rip),%rsi        # 80535c <_end+0x2042d4>
  805ed8:	e8 3b 09 00 00       	callq  806818 <_end+0x205790>
  805edd:	48 8d 35 23 09 00 00 	lea    0x923(%rip),%rsi        # 806807 <_end+0x20577f>
  805ee4:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805eeb:	e8 4c 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805ef0:	48 8d 35 64 f4 ff ff 	lea    -0xb9c(%rip),%rsi        # 80535b <_end+0x2042d3>
  805ef7:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805efe:	e8 39 0b 00 00       	callq  806a3c <_end+0x2059b4>
  805f03:	58                   	pop    %rax
  805f04:	48 83 c0 08          	add    $0x8,%rax
  805f08:	48 8b 08             	mov    (%rax),%rcx
  805f0b:	48 89 0b             	mov    %rcx,(%rbx)
  805f0e:	50                   	push   %rax
  805f0f:	48 8d 15 7c fe ff ff 	lea    -0x184(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805f16:	48 8b 3a             	mov    (%rdx),%rdi
  805f19:	e8 46 09 00 00       	callq  806864 <_end+0x2057dc>
  805f1e:	48 8d 35 37 f4 ff ff 	lea    -0xbc9(%rip),%rsi        # 80535c <_end+0x2042d4>
  805f25:	e8 ee 08 00 00       	callq  806818 <_end+0x205790>
  805f2a:	48 8d 35 d6 08 00 00 	lea    0x8d6(%rip),%rsi        # 806807 <_end+0x20577f>
  805f31:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805f38:	e8 ff 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805f3d:	48 8d 35 17 f4 ff ff 	lea    -0xbe9(%rip),%rsi        # 80535b <_end+0x2042d3>
  805f44:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805f4b:	e8 ec 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805f50:	58                   	pop    %rax
  805f51:	48 83 c0 08          	add    $0x8,%rax
  805f55:	48 8b 08             	mov    (%rax),%rcx
  805f58:	48 89 0b             	mov    %rcx,(%rbx)
  805f5b:	50                   	push   %rax
  805f5c:	48 8d 15 2f fe ff ff 	lea    -0x1d1(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805f63:	48 8b 3a             	mov    (%rdx),%rdi
  805f66:	e8 f9 08 00 00       	callq  806864 <_end+0x2057dc>
  805f6b:	48 8d 35 ea f3 ff ff 	lea    -0xc16(%rip),%rsi        # 80535c <_end+0x2042d4>
  805f72:	e8 a1 08 00 00       	callq  806818 <_end+0x205790>
  805f77:	48 8d 35 89 08 00 00 	lea    0x889(%rip),%rsi        # 806807 <_end+0x20577f>
  805f7e:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805f85:	e8 b2 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805f8a:	48 8d 35 ca f3 ff ff 	lea    -0xc36(%rip),%rsi        # 80535b <_end+0x2042d3>
  805f91:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805f98:	e8 9f 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805f9d:	58                   	pop    %rax
  805f9e:	48 83 c0 08          	add    $0x8,%rax
  805fa2:	48 8b 08             	mov    (%rax),%rcx
  805fa5:	48 89 0b             	mov    %rcx,(%rbx)
  805fa8:	48 8d 15 e3 fd ff ff 	lea    -0x21d(%rip),%rdx        # 805d92 <_end+0x204d0a>
  805faf:	48 8b 3a             	mov    (%rdx),%rdi
  805fb2:	e8 ad 08 00 00       	callq  806864 <_end+0x2057dc>
  805fb7:	48 8d 35 9e f3 ff ff 	lea    -0xc62(%rip),%rsi        # 80535c <_end+0x2042d4>
  805fbe:	e8 55 08 00 00       	callq  806818 <_end+0x205790>
  805fc3:	48 8d 35 3d 08 00 00 	lea    0x83d(%rip),%rsi        # 806807 <_end+0x20577f>
  805fca:	48 c7 c2 11 00 00 00 	mov    $0x11,%rdx
  805fd1:	e8 66 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805fd6:	48 8d 35 7e f3 ff ff 	lea    -0xc82(%rip),%rsi        # 80535b <_end+0x2042d3>
  805fdd:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  805fe4:	e8 53 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805fe9:	48 8d 35 0e 00 00 00 	lea    0xe(%rip),%rsi        # 805ffe <_end+0x204f76>
  805ff0:	48 c7 c2 18 00 00 00 	mov    $0x18,%rdx
  805ff7:	e8 40 0a 00 00       	callq  806a3c <_end+0x2059b4>
  805ffc:	eb 18                	jmp    806016 <_end+0x204f8e>
  805ffe:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  806003:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  806008:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  80600d:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  806012:	20 0a                	and    %cl,(%rdx)
  806014:	0a 20                	or     (%rax),%ah
  806016:	59                   	pop    %rcx
  806017:	5b                   	pop    %rbx
  806018:	58                   	pop    %rax
  806019:	c3                   	retq   
  80601a:	52                   	push   %rdx
  80601b:	57                   	push   %rdi
  80601c:	56                   	push   %rsi
  80601d:	48 8b 3d f1 d9 ff ff 	mov    -0x260f(%rip),%rdi        # 803a15 <_end+0x20298d>
  806024:	48 8b 57 18          	mov    0x18(%rdi),%rdx
  806028:	48 8b 3d 06 da ff ff 	mov    -0x25fa(%rip),%rdi        # 803a35 <_end+0x2029ad>
  80602f:	48 8b 35 0f da ff ff 	mov    -0x25f1(%rip),%rsi        # 803a45 <_end+0x2029bd>
  806036:	e8 e0 f5 ff ff       	callq  80561b <_end+0x204593>
  80603b:	48 8b 3d db d9 ff ff 	mov    -0x2625(%rip),%rdi        # 803a1d <_end+0x202995>
  806042:	48 8b 35 e4 d9 ff ff 	mov    -0x261c(%rip),%rsi        # 803a2d <_end+0x2029a5>
  806049:	e8 d8 f6 ff ff       	callq  805726 <_end+0x20469e>
  80604e:	5e                   	pop    %rsi
  80604f:	5f                   	pop    %rdi
  806050:	5a                   	pop    %rdx
  806051:	c3                   	retq   
  806052:	50                   	push   %rax
  806053:	53                   	push   %rbx
  806054:	52                   	push   %rdx
  806055:	51                   	push   %rcx
  806056:	57                   	push   %rdi
  806057:	56                   	push   %rsi
  806058:	48 8b 35 e6 d9 ff ff 	mov    -0x261a(%rip),%rsi        # 803a45 <_end+0x2029bd>
  80605f:	48 8b 3d cf d9 ff ff 	mov    -0x2631(%rip),%rdi        # 803a35 <_end+0x2029ad>
  806066:	e8 74 f8 ff ff       	callq  8058df <_end+0x204857>
  80606b:	48 8b 3d bb da ff ff 	mov    -0x2545(%rip),%rdi        # 803b2d <_end+0x202aa5>
  806072:	48 8b 35 bc da ff ff 	mov    -0x2544(%rip),%rsi        # 803b35 <_end+0x202aad>
  806079:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx
  806080:	e8 9c f8 ff ff       	callq  805921 <_end+0x204899>
  806085:	48 8b 15 69 da ff ff 	mov    -0x2597(%rip),%rdx        # 803af5 <_end+0x202a6d>
  80608c:	48 8b 3d 16 db ff ff 	mov    -0x24ea(%rip),%rdi        # 803ba9 <_end+0x202b21>
  806093:	48 01 d7             	add    %rdx,%rdi
  806096:	48 8d 35 50 da ff ff 	lea    -0x25b0(%rip),%rsi        # 803aed <_end+0x202a65>
  80609d:	48 89 3e             	mov    %rdi,(%rsi)
  8060a0:	48 8b 35 9e d9 ff ff 	mov    -0x2662(%rip),%rsi        # 803a45 <_end+0x2029bd>
  8060a7:	48 8b 3d 87 d9 ff ff 	mov    -0x2679(%rip),%rdi        # 803a35 <_end+0x2029ad>
  8060ae:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx
  8060b5:	e8 00 06 00 00       	callq  8066ba <_end+0x205632>
  8060ba:	48 8b 35 6c d9 ff ff 	mov    -0x2694(%rip),%rsi        # 803a2d <_end+0x2029a5>
  8060c1:	48 8b 3d 55 d9 ff ff 	mov    -0x26ab(%rip),%rdi        # 803a1d <_end+0x202995>
  8060c8:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx
  8060cf:	e8 57 06 00 00       	callq  80672b <_end+0x2056a3>
  8060d4:	48 8b 05 62 da ff ff 	mov    -0x259e(%rip),%rax        # 803b3d <_end+0x202ab5>
  8060db:	48 83 f8 00          	cmp    $0x0,%rax
  8060df:	74 3e                	je     80611f <_end+0x205097>
  8060e1:	48 8b 3d 2d d9 ff ff 	mov    -0x26d3(%rip),%rdi        # 803a15 <_end+0x20298d>
  8060e8:	48 01 c7             	add    %rax,%rdi
  8060eb:	48 c7 c6 38 00 00 00 	mov    $0x38,%rsi
  8060f2:	48 8b 15 4c da ff ff 	mov    -0x25b4(%rip),%rdx        # 803b45 <_end+0x202abd>
  8060f9:	48 8b 0d ed d9 ff ff 	mov    -0x2613(%rip),%rcx        # 803aed <_end+0x202a65>
  806100:	e8 af f8 ff ff       	callq  8059b4 <_end+0x20492c>
  806105:	48 8b 35 39 d9 ff ff 	mov    -0x26c7(%rip),%rsi        # 803a45 <_end+0x2029bd>
  80610c:	48 8b 3d 22 d9 ff ff 	mov    -0x26de(%rip),%rdi        # 803a35 <_end+0x2029ad>
  806113:	48 8b 15 9f da ff ff 	mov    -0x2561(%rip),%rdx        # 803bb9 <_end+0x202b31>
  80611a:	e8 17 f9 ff ff       	callq  805a36 <_end+0x2049ae>
  80611f:	e8 4a f6 ff ff       	callq  80576e <_end+0x2046e6>
  806124:	e8 d4 f6 ff ff       	callq  8057fd <_end+0x204775>
  806129:	e8 42 f7 ff ff       	callq  805870 <_end+0x2047e8>
  80612e:	48 8b 05 28 da ff ff 	mov    -0x25d8(%rip),%rax        # 803b5d <_end+0x202ad5>
  806135:	48 83 f8 01          	cmp    $0x1,%rax
  806139:	74 05                	je     806140 <_end+0x2050b8>
  80613b:	e8 98 f6 ff ff       	callq  8057d8 <_end+0x204750>
  806140:	48 8b 35 de d9 ff ff 	mov    -0x2622(%rip),%rsi        # 803b25 <_end+0x202a9d>
  806147:	48 8b 3d 15 01 00 00 	mov    0x115(%rip),%rdi        # 806263 <_end+0x2051db>
  80614e:	48 8b 15 7b f6 ff ff 	mov    -0x985(%rip),%rdx        # 8057d0 <_end+0x204748>
  806155:	48 01 fe             	add    %rdi,%rsi
  806158:	48 83 c6 38          	add    $0x38,%rsi
  80615c:	48 01 d6             	add    %rdx,%rsi
  80615f:	48 8b 3d af d8 ff ff 	mov    -0x2751(%rip),%rdi        # 803a15 <_end+0x20298d>
  806166:	48 83 c7 18          	add    $0x18,%rdi
  80616a:	48 8d 1d 04 da ff ff 	lea    -0x25fc(%rip),%rbx        # 803b75 <_end+0x202aed>
  806171:	48 8b 0f             	mov    (%rdi),%rcx
  806174:	48 89 0b             	mov    %rcx,(%rbx)
  806177:	48 8b 15 cf d8 ff ff 	mov    -0x2731(%rip),%rdx        # 803a4d <_end+0x2029c5>
  80617e:	48 89 17             	mov    %rdx,(%rdi)
  806181:	48 83 c7 10          	add    $0x10,%rdi
  806185:	48 01 37             	add    %rsi,(%rdi)
  806188:	48 83 c7 10          	add    $0x10,%rdi
  80618c:	83 07 01             	addl   $0x1,(%rdi)
  80618f:	48 83 c7 04          	add    $0x4,%rdi
  806193:	83 07 01             	addl   $0x1,(%rdi)
  806196:	48 8b 05 88 d9 ff ff 	mov    -0x2678(%rip),%rax        # 803b25 <_end+0x202a9d>
  80619d:	48 ff c8             	dec    %rax
  8061a0:	48 8b 1d a6 d8 ff ff 	mov    -0x275a(%rip),%rbx        # 803a4d <_end+0x2029c5>
  8061a7:	48 01 d8             	add    %rbx,%rax
  8061aa:	48 89 c7             	mov    %rax,%rdi
  8061ad:	e8 67 00 00 00       	callq  806219 <_end+0x205191>
  8061b2:	e8 89 00 00 00       	callq  806240 <_end+0x2051b8>
  8061b7:	48 8d 3d cf d9 ff ff 	lea    -0x2631(%rip),%rdi        # 803b8d <_end+0x202b05>
  8061be:	48 8b 35 e4 d9 ff ff 	mov    -0x261c(%rip),%rsi        # 803ba9 <_end+0x202b21>
  8061c5:	48 8b 15 a9 d9 ff ff 	mov    -0x2657(%rip),%rdx        # 803b75 <_end+0x202aed>
  8061cc:	48 29 f2             	sub    %rsi,%rdx
  8061cf:	48 89 17             	mov    %rdx,(%rdi)
  8061d2:	48 8d 3d bc d9 ff ff 	lea    -0x2644(%rip),%rdi        # 803b95 <_end+0x202b0d>
  8061d9:	48 8b 0d 6d d8 ff ff 	mov    -0x2793(%rip),%rcx        # 803a4d <_end+0x2029c5>
  8061e0:	48 8b 15 8e d9 ff ff 	mov    -0x2672(%rip),%rdx        # 803b75 <_end+0x202aed>
  8061e7:	48 29 d1             	sub    %rdx,%rcx
  8061ea:	48 89 0f             	mov    %rcx,(%rdi)
  8061ed:	48 8d 3d a9 d9 ff ff 	lea    -0x2657(%rip),%rdi        # 803b9d <_end+0x202b15>
  8061f4:	48 8b 0d 1a d8 ff ff 	mov    -0x27e6(%rip),%rcx        # 803a15 <_end+0x20298d>
  8061fb:	48 8b 15 e3 d8 ff ff 	mov    -0x271d(%rip),%rdx        # 803ae5 <_end+0x202a5d>
  806202:	48 29 ca             	sub    %rcx,%rdx
  806205:	48 89 17             	mov    %rdx,(%rdi)
  806208:	e8 7a 01 00 00       	callq  806387 <_end+0x2052ff>
  80620d:	e8 a9 00 00 00       	callq  8062bb <_end+0x205233>
  806212:	5e                   	pop    %rsi
  806213:	5f                   	pop    %rdi
  806214:	59                   	pop    %rcx
  806215:	5a                   	pop    %rdx
  806216:	5b                   	pop    %rbx
  806217:	58                   	pop    %rax
  806218:	c3                   	retq   
  806219:	53                   	push   %rbx
  80621a:	50                   	push   %rax
  80621b:	51                   	push   %rcx
  80621c:	48 89 f8             	mov    %rdi,%rax
  80621f:	48 8b 1d 4f d9 ff ff 	mov    -0x26b1(%rip),%rbx        # 803b75 <_end+0x202aed>
  806226:	48 8b 0d a3 f5 ff ff 	mov    -0xa5d(%rip),%rcx        # 8057d0 <_end+0x204748>
  80622d:	48 29 cf             	sub    %rcx,%rdi
  806230:	48 29 c3             	sub    %rax,%rbx
  806233:	48 8d 05 43 d9 ff ff 	lea    -0x26bd(%rip),%rax        # 803b7d <_end+0x202af5>
  80623a:	89 18                	mov    %ebx,(%rax)
  80623c:	59                   	pop    %rcx
  80623d:	58                   	pop    %rax
  80623e:	5b                   	pop    %rbx
  80623f:	c3                   	retq   
  806240:	53                   	push   %rbx
  806241:	50                   	push   %rax
  806242:	48 8d 1d a1 09 00 00 	lea    0x9a1(%rip),%rbx        # 806bea <_end+0x205b62>
  806249:	48 8d 05 41 0b 00 00 	lea    0xb41(%rip),%rax        # 806d91 <_end+0x205d09>
  806250:	48 83 c0 05          	add    $0x5,%rax
  806254:	48 29 c3             	sub    %rax,%rbx
  806257:	48 8d 05 27 d9 ff ff 	lea    -0x26d9(%rip),%rax        # 803b85 <_end+0x202afd>
  80625e:	89 18                	mov    %ebx,(%rax)
  806260:	58                   	pop    %rax
  806261:	5b                   	pop    %rbx
  806262:	c3                   	retq   
  806263:	50                   	push   %rax
  806264:	00 00                	add    %al,(%rax)
  806266:	00 00                	add    %al,(%rax)
  806268:	00 00                	add    %al,(%rax)
  80626a:	00 60 0e             	add    %ah,0xe(%rax)
  80626d:	60                   	(bad)  
  80626e:	00 00                	add    %al,(%rax)
  806270:	00 00                	add    %al,(%rax)
  806272:	00 e0                	add    %ah,%al
  806274:	01 00                	add    %eax,(%rax)
  806276:	00 00                	add    %al,(%rax)
  806278:	00 00                	add    %al,(%rax)
  80627a:	00 00                	add    %al,(%rax)
  80627c:	00 40 00             	add    %al,0x0(%rax)
  80627f:	00 00                	add    %al,(%rax)
  806281:	00 00                	add    %al,(%rax)
  806283:	28 1a                	sub    %bl,(%rdx)
  806285:	80 00 00             	addb   $0x0,(%rax)
	...
  806290:	00 00                	add    %al,(%rax)
  806292:	00 68 04             	add    %ch,0x4(%rax)
  806295:	00 00                	add    %al,(%rax)
  806297:	00 00                	add    %al,(%rax)
  806299:	00 00                	add    %al,(%rax)
  80629b:	68 04 40 00 00       	pushq  $0x4004
  8062a0:	00 00                	add    %al,(%rax)
  8062a2:	00 c0                	add    %al,%al
  8062a4:	15 40 00 00 00       	adc    $0x40,%eax
  8062a9:	00 00                	add    %al,(%rax)
  8062ab:	70 02                	jo     8062af <_end+0x205227>
  8062ad:	00 00                	add    %al,(%rax)
  8062af:	00 00                	add    %al,(%rax)
  8062b1:	00 00                	add    %al,(%rax)
  8062b3:	10 00                	adc    %al,(%rax)
  8062b5:	00 00                	add    %al,(%rax)
  8062b7:	00 00                	add    %al,(%rax)
  8062b9:	00 00                	add    %al,(%rax)
  8062bb:	53                   	push   %rbx
  8062bc:	50                   	push   %rax
  8062bd:	51                   	push   %rcx
  8062be:	48 8d 05 a6 ff ff ff 	lea    -0x5a(%rip),%rax        # 80626b <_end+0x2051e3>
  8062c5:	48 8b 1d 81 d8 ff ff 	mov    -0x277f(%rip),%rbx        # 803b4d <_end+0x202ac5>
  8062cc:	48 85 db             	test   %rbx,%rbx
  8062cf:	74 04                	je     8062d5 <_end+0x20524d>
  8062d1:	48 83 c3 38          	add    $0x38,%rbx
  8062d5:	48 89 18             	mov    %rbx,(%rax)
  8062d8:	48 83 c0 08          	add    $0x8,%rax
  8062dc:	48 8b 1d 62 d8 ff ff 	mov    -0x279e(%rip),%rbx        # 803b45 <_end+0x202abd>
  8062e3:	48 8b 0d e6 f4 ff ff 	mov    -0xb1a(%rip),%rcx        # 8057d0 <_end+0x204748>
  8062ea:	48 01 cb             	add    %rcx,%rbx
  8062ed:	48 89 18             	mov    %rbx,(%rax)
  8062f0:	48 83 c0 08          	add    $0x8,%rax
  8062f4:	48 8b 1d ae d8 ff ff 	mov    -0x2752(%rip),%rbx        # 803ba9 <_end+0x202b21>
  8062fb:	48 89 18             	mov    %rbx,(%rax)
  8062fe:	48 83 c0 08          	add    $0x8,%rax
  806302:	48 8b 1d 44 d7 ff ff 	mov    -0x28bc(%rip),%rbx        # 803a4d <_end+0x2029c5>
  806309:	48 89 18             	mov    %rbx,(%rax)
  80630c:	48 83 c0 08          	add    $0x8,%rax
  806310:	48 8b 1d c6 d7 ff ff 	mov    -0x283a(%rip),%rbx        # 803add <_end+0x202a55>
  806317:	48 89 18             	mov    %rbx,(%rax)
  80631a:	48 83 c0 08          	add    $0x8,%rax
  80631e:	48 8b 1d 68 d8 ff ff 	mov    -0x2798(%rip),%rbx        # 803b8d <_end+0x202b05>
  806325:	48 83 c3 38          	add    $0x38,%rbx
  806329:	48 89 18             	mov    %rbx,(%rax)
  80632c:	48 83 c0 08          	add    $0x8,%rax
  806330:	48 8b 1d 3e d8 ff ff 	mov    -0x27c2(%rip),%rbx        # 803b75 <_end+0x202aed>
  806337:	48 83 c3 38          	add    $0x38,%rbx
  80633b:	48 89 18             	mov    %rbx,(%rax)
  80633e:	48 83 c0 08          	add    $0x8,%rax
  806342:	48 8b 1d 4c d8 ff ff 	mov    -0x27b4(%rip),%rbx        # 803b95 <_end+0x202b0d>
  806349:	48 83 eb 38          	sub    $0x38,%rbx
  80634d:	48 89 18             	mov    %rbx,(%rax)
  806350:	48 83 c0 08          	add    $0x8,%rax
  806354:	48 8b 1d 42 d8 ff ff 	mov    -0x27be(%rip),%rbx        # 803b9d <_end+0x202b15>
  80635b:	48 83 c3 38          	add    $0x38,%rbx
  80635f:	48 89 18             	mov    %rbx,(%rax)
  806362:	48 83 c0 08          	add    $0x8,%rax
  806366:	48 8b 1d 63 f4 ff ff 	mov    -0xb9d(%rip),%rbx        # 8057d0 <_end+0x204748>
  80636d:	48 89 18             	mov    %rbx,(%rax)
  806370:	59                   	pop    %rcx
  806371:	58                   	pop    %rax
  806372:	5b                   	pop    %rbx
  806373:	c3                   	retq   
  806374:	0b 00                	or     (%rax),%eax
  806376:	00 00                	add    %al,(%rax)
  806378:	00 00                	add    %al,(%rax)
  80637a:	00 00                	add    %al,(%rax)
  80637c:	e8 54 fe ff ff       	callq  8061d5 <_end+0x20514d>
  806381:	e9 95 96 bf ff       	jmpq   3ffa1b <_init-0x9e5>
  806386:	90                   	nop
  806387:	50                   	push   %rax
  806388:	53                   	push   %rbx
  806389:	48 8d 05 ec ff ff ff 	lea    -0x14(%rip),%rax        # 80637c <_end+0x2052f4>
  806390:	48 c7 c3 e8 00 00 00 	mov    $0xe8,%rbx
  806397:	0f b7 db             	movzwl %bx,%ebx
  80639a:	88 18                	mov    %bl,(%rax)
  80639c:	48 ff c0             	inc    %rax
  80639f:	48 8b 1d df d7 ff ff 	mov    -0x2821(%rip),%rbx        # 803b85 <_end+0x202afd>
  8063a6:	89 18                	mov    %ebx,(%rax)
  8063a8:	48 83 c0 04          	add    $0x4,%rax
  8063ac:	48 c7 c3 e9 00 00 00 	mov    $0xe9,%rbx
  8063b3:	0f b7 db             	movzwl %bx,%ebx
  8063b6:	88 18                	mov    %bl,(%rax)
  8063b8:	48 ff c0             	inc    %rax
  8063bb:	48 8b 1d bb d7 ff ff 	mov    -0x2845(%rip),%rbx        # 803b7d <_end+0x202af5>
  8063c2:	89 18                	mov    %ebx,(%rax)
  8063c4:	48 83 c0 04          	add    $0x4,%rax
  8063c8:	48 c7 c3 90 00 00 00 	mov    $0x90,%rbx
  8063cf:	0f b7 db             	movzwl %bx,%ebx
  8063d2:	88 18                	mov    %bl,(%rax)
  8063d4:	5b                   	pop    %rbx
  8063d5:	58                   	pop    %rax
  8063d6:	c3                   	retq   
  8063d7:	48 8b 35 37 d6 ff ff 	mov    -0x29c9(%rip),%rsi        # 803a15 <_end+0x20298d>
  8063de:	48 8b 3d af b6 ff ff 	mov    -0x4951(%rip),%rdi        # 801a94 <_end+0x200a0c>
  8063e5:	48 8b 15 39 d6 ff ff 	mov    -0x29c7(%rip),%rdx        # 803a25 <_end+0x20299d>
  8063ec:	48 83 c2 40          	add    $0x40,%rdx
  8063f0:	49 89 d0             	mov    %rdx,%r8
  8063f3:	48 31 c9             	xor    %rcx,%rcx
  8063f6:	49 89 ca             	mov    %rcx,%r10
  8063f9:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806400:	0f 05                	syscall 
  806402:	4c 89 c1             	mov    %r8,%rcx
  806405:	49 89 ca             	mov    %rcx,%r10
  806408:	48 c7 c2 38 00 00 00 	mov    $0x38,%rdx
  80640f:	49 01 d0             	add    %rdx,%r8
  806412:	48 8b 3d 7b b6 ff ff 	mov    -0x4985(%rip),%rdi        # 801a94 <_end+0x200a0c>
  806419:	48 8d 35 35 d6 ff ff 	lea    -0x29cb(%rip),%rsi        # 803a55 <_end+0x2029cd>
  806420:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806427:	0f 05                	syscall 
  806429:	48 8b 15 35 d7 ff ff 	mov    -0x28cb(%rip),%rdx        # 803b65 <_end+0x202add>
  806430:	48 85 d2             	test   %rdx,%rdx
  806433:	74 77                	je     8064ac <_end+0x205424>
  806435:	4c 89 c1             	mov    %r8,%rcx
  806438:	49 89 ca             	mov    %rcx,%r10
  80643b:	48 8b 35 cb d6 ff ff 	mov    -0x2935(%rip),%rsi        # 803b0d <_end+0x202a85>
  806442:	48 8b 15 b4 d6 ff ff 	mov    -0x294c(%rip),%rdx        # 803afd <_end+0x202a75>
  806449:	49 01 d0             	add    %rdx,%r8
  80644c:	48 8b 3d 41 b6 ff ff 	mov    -0x49bf(%rip),%rdi        # 801a94 <_end+0x200a0c>
  806453:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  80645a:	0f 05                	syscall 
  80645c:	4c 89 c1             	mov    %r8,%rcx
  80645f:	49 89 ca             	mov    %rcx,%r10
  806462:	48 8d 35 47 f3 ff ff 	lea    -0xcb9(%rip),%rsi        # 8057b0 <_end+0x204728>
  806469:	48 8b 15 60 f3 ff ff 	mov    -0xca0(%rip),%rdx        # 8057d0 <_end+0x204748>
  806470:	49 01 d0             	add    %rdx,%r8
  806473:	48 8b 3d 1a b6 ff ff 	mov    -0x49e6(%rip),%rdi        # 801a94 <_end+0x200a0c>
  80647a:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806481:	0f 05                	syscall 
  806483:	4c 89 c1             	mov    %r8,%rcx
  806486:	49 89 ca             	mov    %rcx,%r10
  806489:	48 8b 35 85 d6 ff ff 	mov    -0x297b(%rip),%rsi        # 803b15 <_end+0x202a8d>
  806490:	48 8b 15 6e d6 ff ff 	mov    -0x2992(%rip),%rdx        # 803b05 <_end+0x202a7d>
  806497:	49 01 d0             	add    %rdx,%r8
  80649a:	48 8b 3d f3 b5 ff ff 	mov    -0x4a0d(%rip),%rdi        # 801a94 <_end+0x200a0c>
  8064a1:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  8064a8:	0f 05                	syscall 
  8064aa:	eb 27                	jmp    8064d3 <_end+0x20544b>
  8064ac:	4c 89 c1             	mov    %r8,%rcx
  8064af:	49 89 ca             	mov    %rcx,%r10
  8064b2:	48 8b 3d db b5 ff ff 	mov    -0x4a25(%rip),%rdi        # 801a94 <_end+0x200a0c>
  8064b9:	48 8b 35 25 d6 ff ff 	mov    -0x29db(%rip),%rsi        # 803ae5 <_end+0x202a5d>
  8064c0:	48 8b 15 16 d6 ff ff 	mov    -0x29ea(%rip),%rdx        # 803add <_end+0x202a55>
  8064c7:	49 01 d0             	add    %rdx,%r8
  8064ca:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  8064d1:	0f 05                	syscall 
  8064d3:	4c 89 c1             	mov    %r8,%rcx
  8064d6:	49 89 ca             	mov    %rcx,%r10
  8064d9:	48 8b 3d b4 b5 ff ff 	mov    -0x4a4c(%rip),%rdi        # 801a94 <_end+0x200a0c>
  8064e0:	48 8b 35 36 d6 ff ff 	mov    -0x29ca(%rip),%rsi        # 803b1d <_end+0x202a95>
  8064e7:	48 8b 15 37 d6 ff ff 	mov    -0x29c9(%rip),%rdx        # 803b25 <_end+0x202a9d>
  8064ee:	48 8b 05 7f fe ff ff 	mov    -0x181(%rip),%rax        # 806374 <_end+0x2052ec>
  8064f5:	48 29 c2             	sub    %rax,%rdx
  8064f8:	49 01 d0             	add    %rdx,%r8
  8064fb:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806502:	0f 05                	syscall 
  806504:	4c 89 c1             	mov    %r8,%rcx
  806507:	49 89 ca             	mov    %rcx,%r10
  80650a:	48 8d 35 6b fe ff ff 	lea    -0x195(%rip),%rsi        # 80637c <_end+0x2052f4>
  806511:	48 8b 15 5c fe ff ff 	mov    -0x1a4(%rip),%rdx        # 806374 <_end+0x2052ec>
  806518:	49 01 d0             	add    %rdx,%r8
  80651b:	48 8b 3d 72 b5 ff ff 	mov    -0x4a8e(%rip),%rdi        # 801a94 <_end+0x200a0c>
  806522:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806529:	0f 05                	syscall 
  80652b:	4c 89 c1             	mov    %r8,%rcx
  80652e:	49 89 ca             	mov    %rcx,%r10
  806531:	48 8d 35 33 fd ff ff 	lea    -0x2cd(%rip),%rsi        # 80626b <_end+0x2051e3>
  806538:	48 8b 15 24 fd ff ff 	mov    -0x2dc(%rip),%rdx        # 806263 <_end+0x2051db>
  80653f:	49 01 d0             	add    %rdx,%r8
  806542:	48 8b 3d 4b b5 ff ff 	mov    -0x4ab5(%rip),%rdi        # 801a94 <_end+0x200a0c>
  806549:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806550:	0f 05                	syscall 
  806552:	4c 89 c1             	mov    %r8,%rcx
  806555:	49 89 ca             	mov    %rcx,%r10
  806558:	48 8b 35 d6 d4 ff ff 	mov    -0x2b2a(%rip),%rsi        # 803a35 <_end+0x2029ad>
  80655f:	48 8b 15 d7 d4 ff ff 	mov    -0x2b29(%rip),%rdx        # 803a3d <_end+0x2029b5>
  806566:	49 01 d0             	add    %rdx,%r8
  806569:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806570:	0f 05                	syscall 
  806572:	4c 89 c1             	mov    %r8,%rcx
  806575:	49 89 ca             	mov    %rcx,%r10
  806578:	48 8d 35 0e d5 ff ff 	lea    -0x2af2(%rip),%rsi        # 803a8d <_end+0x202a05>
  80657f:	48 c7 c2 40 00 00 00 	mov    $0x40,%rdx
  806586:	48 8b 3d 07 b5 ff ff 	mov    -0x4af9(%rip),%rdi        # 801a94 <_end+0x200a0c>
  80658d:	48 c7 c0 12 00 00 00 	mov    $0x12,%rax
  806594:	0f 05                	syscall 
  806596:	48 8b 3d f7 b4 ff ff 	mov    -0x4b09(%rip),%rdi        # 801a94 <_end+0x200a0c>
  80659d:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  8065a4:	0f 05                	syscall 
  8065a6:	48 8b 35 58 d4 ff ff 	mov    -0x2ba8(%rip),%rsi        # 803a05 <_end+0x20297d>
  8065ad:	48 8b 15 59 d4 ff ff 	mov    -0x2ba7(%rip),%rdx        # 803a0d <_end+0x202985>
  8065b4:	e8 83 04 00 00       	callq  806a3c <_end+0x2059b4>
  8065b9:	48 8d 35 a3 b4 ff ff 	lea    -0x4b5d(%rip),%rsi        # 801a63 <_end+0x2009db>
  8065c0:	48 c7 c2 1b 00 00 00 	mov    $0x1b,%rdx
  8065c7:	e8 70 04 00 00       	callq  806a3c <_end+0x2059b4>
  8065cc:	c3                   	retq   
  8065cd:	57                   	push   %rdi
  8065ce:	56                   	push   %rsi
  8065cf:	52                   	push   %rdx
  8065d0:	51                   	push   %rcx
  8065d1:	48 89 d6             	mov    %rdx,%rsi
  8065d4:	48 83 c7 14          	add    $0x14,%rdi
  8065d8:	48 8b 0f             	mov    (%rdi),%rcx
  8065db:	48 83 c7 08          	add    $0x8,%rdi
  8065df:	48 8b 17             	mov    (%rdi),%rdx
  8065e2:	48 89 cf             	mov    %rcx,%rdi
  8065e5:	e8 83 f3 ff ff       	callq  80596d <_end+0x2048e5>
  8065ea:	59                   	pop    %rcx
  8065eb:	5a                   	pop    %rdx
  8065ec:	5e                   	pop    %rsi
  8065ed:	5f                   	pop    %rdi
  8065ee:	c3                   	retq   
  8065ef:	50                   	push   %rax
  8065f0:	51                   	push   %rcx
  8065f1:	89 d0                	mov    %edx,%eax
  8065f3:	48 31 d2             	xor    %rdx,%rdx
  8065f6:	b9 08 00 00 00       	mov    $0x8,%ecx
  8065fb:	f7 f9                	idiv   %ecx
  8065fd:	89 c1                	mov    %eax,%ecx
  8065ff:	48 8b 05 0f d4 ff ff 	mov    -0x2bf1(%rip),%rax        # 803a15 <_end+0x20298d>
  806606:	48 01 f8             	add    %rdi,%rax
  806609:	83 38 00             	cmpl   $0x0,(%rax)
  80660c:	74 03                	je     806611 <_end+0x205589>
  80660e:	48 01 30             	add    %rsi,(%rax)
  806611:	48 83 c0 08          	add    $0x8,%rax
  806615:	e2 f2                	loop   806609 <_end+0x205581>
  806617:	59                   	pop    %rcx
  806618:	58                   	pop    %rax
  806619:	c3                   	retq   
  80661a:	51                   	push   %rcx
  80661b:	52                   	push   %rdx
  80661c:	48 89 f1             	mov    %rsi,%rcx
  80661f:	48 8b 57 04          	mov    0x4(%rdi),%rdx
  806623:	80 fa 06             	cmp    $0x6,%dl
  806626:	74 08                	je     806630 <_end+0x2055a8>
  806628:	48 83 c7 40          	add    $0x40,%rdi
  80662c:	e2 f1                	loop   80661f <_end+0x205597>
  80662e:	eb 2a                	jmp    80665a <_end+0x2055d2>
  806630:	48 8d 35 16 d5 ff ff 	lea    -0x2aea(%rip),%rsi        # 803b4d <_end+0x202ac5>
  806637:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  80663b:	48 89 16             	mov    %rdx,(%rsi)
  80663e:	48 8d 35 f8 d4 ff ff 	lea    -0x2b08(%rip),%rsi        # 803b3d <_end+0x202ab5>
  806645:	48 8b 57 18          	mov    0x18(%rdi),%rdx
  806649:	48 89 16             	mov    %rdx,(%rsi)
  80664c:	48 8d 35 f2 d4 ff ff 	lea    -0x2b0e(%rip),%rsi        # 803b45 <_end+0x202abd>
  806653:	48 8b 57 20          	mov    0x20(%rdi),%rdx
  806657:	48 89 16             	mov    %rdx,(%rsi)
  80665a:	5a                   	pop    %rdx
  80665b:	59                   	pop    %rcx
  80665c:	c3                   	retq   
  80665d:	50                   	push   %rax
  80665e:	52                   	push   %rdx
  80665f:	51                   	push   %rcx
  806660:	41 50                	push   %r8
  806662:	49 89 f8             	mov    %rdi,%r8
  806665:	48 89 f0             	mov    %rsi,%rax
  806668:	48 31 d2             	xor    %rdx,%rdx
  80666b:	b9 10 00 00 00       	mov    $0x10,%ecx
  806670:	f7 f9                	idiv   %ecx
  806672:	89 c1                	mov    %eax,%ecx
  806674:	48 83 3f 18          	cmpq   $0x18,(%rdi)
  806678:	74 0d                	je     806687 <_end+0x2055ff>
  80667a:	83 3f 00             	cmpl   $0x0,(%rdi)
  80667d:	74 14                	je     806693 <_end+0x20560b>
  80667f:	48 83 c7 10          	add    $0x10,%rdi
  806683:	e2 ef                	loop   806674 <_end+0x2055ec>
  806685:	eb 0c                	jmp    806693 <_end+0x20560b>
  806687:	48 8d 15 cf d4 ff ff 	lea    -0x2b31(%rip),%rdx        # 803b5d <_end+0x202ad5>
  80668e:	c6 02 01             	movb   $0x1,(%rdx)
  806691:	eb 21                	jmp    8066b4 <_end+0x20562c>
  806693:	48 8d 15 36 f1 ff ff 	lea    -0xeca(%rip),%rdx        # 8057d0 <_end+0x204748>
  80669a:	c6 02 10             	movb   $0x10,(%rdx)
  80669d:	48 8d 15 c1 d4 ff ff 	lea    -0x2b3f(%rip),%rdx        # 803b65 <_end+0x202add>
  8066a4:	c6 02 01             	movb   $0x1,(%rdx)
  8066a7:	48 8d 15 bf d4 ff ff 	lea    -0x2b41(%rip),%rdx        # 803b6d <_end+0x202ae5>
  8066ae:	4c 29 c7             	sub    %r8,%rdi
  8066b1:	48 89 3a             	mov    %rdi,(%rdx)
  8066b4:	41 58                	pop    %r8
  8066b6:	59                   	pop    %rcx
  8066b7:	5a                   	pop    %rdx
  8066b8:	58                   	pop    %rax
  8066b9:	c3                   	retq   
  8066ba:	50                   	push   %rax
  8066bb:	53                   	push   %rbx
  8066bc:	51                   	push   %rcx
  8066bd:	41 50                	push   %r8
  8066bf:	48 8b 1d 0a f1 ff ff 	mov    -0xef6(%rip),%rbx        # 8057d0 <_end+0x204748>
  8066c6:	48 89 f1             	mov    %rsi,%rcx
  8066c9:	48 8b 05 7d d4 ff ff 	mov    -0x2b83(%rip),%rax        # 803b4d <_end+0x202ac5>
  8066d0:	48 83 c7 04          	add    $0x4,%rdi
  8066d4:	83 3f 04             	cmpl   $0x4,(%rdi)
  8066d7:	74 12                	je     8066eb <_end+0x205663>
  8066d9:	83 3f 06             	cmpl   $0x6,(%rdi)
  8066dc:	75 12                	jne    8066f0 <_end+0x205668>
  8066de:	48 83 c7 1c          	add    $0x1c,%rdi
  8066e2:	48 01 1f             	add    %rbx,(%rdi)
  8066e5:	48 83 ef 1c          	sub    $0x1c,%rdi
  8066e9:	eb 05                	jmp    8066f0 <_end+0x205668>
  8066eb:	e8 dd fe ff ff       	callq  8065cd <_end+0x205545>
  8066f0:	48 83 c7 0c          	add    $0xc,%rdi
  8066f4:	83 3f 00             	cmpl   $0x0,(%rdi)
  8066f7:	7e 0b                	jle    806704 <_end+0x20567c>
  8066f9:	48 39 07             	cmp    %rax,(%rdi)
  8066fc:	7e 03                	jle    806701 <_end+0x205679>
  8066fe:	48 01 1f             	add    %rbx,(%rdi)
  806701:	48 01 17             	add    %rdx,(%rdi)
  806704:	48 8b 05 32 d4 ff ff 	mov    -0x2bce(%rip),%rax        # 803b3d <_end+0x202ab5>
  80670b:	48 83 c7 08          	add    $0x8,%rdi
  80670f:	83 3f 00             	cmpl   $0x0,(%rdi)
  806712:	7e 0b                	jle    80671f <_end+0x205697>
  806714:	48 39 07             	cmp    %rax,(%rdi)
  806717:	7e 03                	jle    80671c <_end+0x205694>
  806719:	48 01 1f             	add    %rbx,(%rdi)
  80671c:	48 01 17             	add    %rdx,(%rdi)
  80671f:	48 83 c7 28          	add    $0x28,%rdi
  806723:	e2 a4                	loop   8066c9 <_end+0x205641>
  806725:	41 58                	pop    %r8
  806727:	59                   	pop    %rcx
  806728:	5b                   	pop    %rbx
  806729:	58                   	pop    %rax
  80672a:	c3                   	retq   
  80672b:	50                   	push   %rax
  80672c:	53                   	push   %rbx
  80672d:	51                   	push   %rcx
  80672e:	41 50                	push   %r8
  806730:	41 51                	push   %r9
  806732:	48 89 f1             	mov    %rsi,%rcx
  806735:	48 8b 35 6d d4 ff ff 	mov    -0x2b93(%rip),%rsi        # 803ba9 <_end+0x202b21>
  80673c:	48 8b 1d 8d f0 ff ff 	mov    -0xf73(%rip),%rbx        # 8057d0 <_end+0x204748>
  806743:	4c 8b 05 03 d4 ff ff 	mov    -0x2bfd(%rip),%r8        # 803b4d <_end+0x202ac5>
  80674a:	8b 07                	mov    (%rdi),%eax
  80674c:	48 83 f8 06          	cmp    $0x6,%rax
  806750:	74 1a                	je     80676c <_end+0x2056e4>
  806752:	48 83 f8 02          	cmp    $0x2,%rax
  806756:	75 28                	jne    806780 <_end+0x2056f8>
  806758:	48 83 c7 20          	add    $0x20,%rdi
  80675c:	48 01 1f             	add    %rbx,(%rdi)
  80675f:	48 83 c7 08          	add    $0x8,%rdi
  806763:	48 01 1f             	add    %rbx,(%rdi)
  806766:	48 83 ef 28          	sub    $0x28,%rdi
  80676a:	eb 14                	jmp    806780 <_end+0x2056f8>
  80676c:	48 83 c7 20          	add    $0x20,%rdi
  806770:	48 01 17             	add    %rdx,(%rdi)
  806773:	48 83 c7 08          	add    $0x8,%rdi
  806777:	48 01 17             	add    %rdx,(%rdi)
  80677a:	48 83 ef 20          	sub    $0x20,%rdi
  80677e:	eb 6f                	jmp    8067ef <_end+0x205767>
  806780:	48 83 c7 10          	add    $0x10,%rdi
  806784:	83 3f 00             	cmpl   $0x0,(%rdi)
  806787:	7e 44                	jle    8067cd <_end+0x205745>
  806789:	48 39 37             	cmp    %rsi,(%rdi)
  80678c:	74 02                	je     806790 <_end+0x205708>
  80678e:	eb 14                	jmp    8067a4 <_end+0x20571c>
  806790:	48 83 c7 10          	add    $0x10,%rdi
  806794:	48 01 17             	add    %rdx,(%rdi)
  806797:	48 83 c7 08          	add    $0x8,%rdi
  80679b:	48 01 17             	add    %rdx,(%rdi)
  80679e:	48 83 ef 20          	sub    $0x20,%rdi
  8067a2:	eb 4b                	jmp    8067ef <_end+0x205767>
  8067a4:	4c 39 07             	cmp    %r8,(%rdi)
  8067a7:	7e 16                	jle    8067bf <_end+0x205737>
  8067a9:	48 01 17             	add    %rdx,(%rdi)
  8067ac:	48 01 1f             	add    %rbx,(%rdi)
  8067af:	48 83 c7 08          	add    $0x8,%rdi
  8067b3:	48 01 17             	add    %rdx,(%rdi)
  8067b6:	48 01 1f             	add    %rbx,(%rdi)
  8067b9:	48 83 ef 08          	sub    $0x8,%rdi
  8067bd:	eb 0e                	jmp    8067cd <_end+0x205745>
  8067bf:	48 01 17             	add    %rdx,(%rdi)
  8067c2:	48 83 c7 08          	add    $0x8,%rdi
  8067c6:	48 01 17             	add    %rdx,(%rdi)
  8067c9:	48 83 ef 08          	sub    $0x8,%rdi
  8067cd:	4c 8b 05 69 d3 ff ff 	mov    -0x2c97(%rip),%r8        # 803b3d <_end+0x202ab5>
  8067d4:	48 83 ef 08          	sub    $0x8,%rdi
  8067d8:	83 3f 00             	cmpl   $0x0,(%rdi)
  8067db:	7e 12                	jle    8067ef <_end+0x205767>
  8067dd:	4c 39 07             	cmp    %r8,(%rdi)
  8067e0:	7e 08                	jle    8067ea <_end+0x205762>
  8067e2:	48 01 1f             	add    %rbx,(%rdi)
  8067e5:	48 01 17             	add    %rdx,(%rdi)
  8067e8:	eb 05                	jmp    8067ef <_end+0x205767>
  8067ea:	48 01 17             	add    %rdx,(%rdi)
  8067ed:	eb 00                	jmp    8067ef <_end+0x205767>
  8067ef:	48 83 c7 30          	add    $0x30,%rdi
  8067f3:	48 ff c9             	dec    %rcx
  8067f6:	48 85 c9             	test   %rcx,%rcx
  8067f9:	0f 85 44 ff ff ff    	jne    806743 <_end+0x2056bb>
  8067ff:	41 59                	pop    %r9
  806801:	41 58                	pop    %r8
  806803:	59                   	pop    %rcx
  806804:	5b                   	pop    %rbx
  806805:	58                   	pop    %rax
  806806:	c3                   	retq   
	...
  806817:	00 50 57             	add    %dl,0x57(%rax)
  80681a:	51                   	push   %rcx
  80681b:	48 8d 3d e5 ff ff ff 	lea    -0x1b(%rip),%rdi        # 806807 <_end+0x20577f>
  806822:	48 83 c7 10          	add    $0x10,%rdi
  806826:	c6 07 0a             	movb   $0xa,(%rdi)
  806829:	48 8d 3d d7 ff ff ff 	lea    -0x29(%rip),%rdi        # 806807 <_end+0x20577f>
  806830:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  806837:	48 31 c0             	xor    %rax,%rax
  80683a:	8a 06                	mov    (%rsi),%al
  80683c:	48 83 f8 09          	cmp    $0x9,%rax
  806840:	7f 04                	jg     806846 <_end+0x2057be>
  806842:	04 30                	add    $0x30,%al
  806844:	eb 02                	jmp    806848 <_end+0x2057c0>
  806846:	04 57                	add    $0x57,%al
  806848:	88 07                	mov    %al,(%rdi)
  80684a:	48 ff c6             	inc    %rsi
  80684d:	48 ff c7             	inc    %rdi
  806850:	e2 e5                	loop   806837 <_end+0x2057af>
  806852:	59                   	pop    %rcx
  806853:	5f                   	pop    %rdi
  806854:	58                   	pop    %rax
  806855:	c3                   	retq   
  806856:	51                   	push   %rcx
  806857:	48 89 f1             	mov    %rsi,%rcx
  80685a:	c6 07 00             	movb   $0x0,(%rdi)
  80685d:	48 ff c7             	inc    %rdi
  806860:	e2 f8                	loop   80685a <_end+0x2057d2>
  806862:	59                   	pop    %rcx
  806863:	c3                   	retq   
  806864:	41 50                	push   %r8
  806866:	41 51                	push   %r9
  806868:	51                   	push   %rcx
  806869:	52                   	push   %rdx
  80686a:	53                   	push   %rbx
  80686b:	56                   	push   %rsi
  80686c:	48 89 fa             	mov    %rdi,%rdx
  80686f:	48 8d 35 e6 ea ff ff 	lea    -0x151a(%rip),%rsi        # 80535c <_end+0x2042d4>
  806876:	48 83 c6 0f          	add    $0xf,%rsi
  80687a:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  806881:	48 c7 c3 0f 00 00 00 	mov    $0xf,%rbx
  806888:	48 21 da             	and    %rbx,%rdx
  80688b:	49 c7 c0 10 00 00 00 	mov    $0x10,%r8
  806892:	49 89 c9             	mov    %rcx,%r9
  806895:	4d 29 c8             	sub    %r9,%r8
  806898:	49 83 f8 00          	cmp    $0x0,%r8
  80689c:	7e 09                	jle    8068a7 <_end+0x20581f>
  80689e:	48 c1 ea 04          	shr    $0x4,%rdx
  8068a2:	49 ff c8             	dec    %r8
  8068a5:	eb f1                	jmp    806898 <_end+0x205810>
  8068a7:	88 16                	mov    %dl,(%rsi)
  8068a9:	48 89 fa             	mov    %rdi,%rdx
  8068ac:	48 c1 e3 04          	shl    $0x4,%rbx
  8068b0:	48 ff ce             	dec    %rsi
  8068b3:	e2 d3                	loop   806888 <_end+0x205800>
  8068b5:	5e                   	pop    %rsi
  8068b6:	5b                   	pop    %rbx
  8068b7:	5a                   	pop    %rdx
  8068b8:	59                   	pop    %rcx
  8068b9:	41 59                	pop    %r9
  8068bb:	41 58                	pop    %r8
  8068bd:	c3                   	retq   
  8068be:	53                   	push   %rbx
  8068bf:	51                   	push   %rcx
  8068c0:	52                   	push   %rdx
  8068c1:	55                   	push   %rbp
  8068c2:	41 52                	push   %r10
  8068c4:	4d 89 cf             	mov    %r9,%r15
  8068c7:	49 89 f5             	mov    %rsi,%r13
  8068ca:	49 89 fc             	mov    %rdi,%r12
  8068cd:	41 89 ce             	mov    %ecx,%r14d
  8068d0:	49 63 e8             	movslq %r8d,%rbp
  8068d3:	48 63 da             	movslq %edx,%rbx
  8068d6:	4d 63 d6             	movslq %r14d,%r10
  8068d9:	b8 09 00 00 00       	mov    $0x9,%eax
  8068de:	0f 05                	syscall 
  8068e0:	41 5a                	pop    %r10
  8068e2:	5d                   	pop    %rbp
  8068e3:	5a                   	pop    %rdx
  8068e4:	59                   	pop    %rcx
  8068e5:	5b                   	pop    %rbx
  8068e6:	c3                   	retq   
  8068e7:	51                   	push   %rcx
  8068e8:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  8068ef:	0f 05                	syscall 
  8068f1:	48 85 c0             	test   %rax,%rax
  8068f4:	75 02                	jne    8068f8 <_end+0x205870>
  8068f6:	59                   	pop    %rcx
  8068f7:	c3                   	retq   
  8068f8:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 80690b <_end+0x205883>
  8068ff:	48 c7 c2 0d 00 00 00 	mov    $0xd,%rdx
  806906:	e9 16 04 00 00       	jmpq   806d21 <_end+0x205c99>
  80690b:	45 52                	rex.RB push %r10
  80690d:	52                   	push   %rdx
  80690e:	3a 20                	cmp    (%rax),%ah
  806910:	6d                   	insl   (%dx),%es:(%rdi)
  806911:	79 5f                	jns    806972 <_end+0x2058ea>
  806913:	73 74                	jae    806989 <_end+0x205901>
  806915:	61                   	(bad)  
  806916:	74 0a                	je     806922 <_end+0x20589a>
  806918:	55                   	push   %rbp
  806919:	48 89 e5             	mov    %rsp,%rbp
  80691c:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  806923:	0f 05                	syscall 
  806925:	48 85 c0             	test   %rax,%rax
  806928:	0f 8c 80 00 00 00    	jl     8069ae <_end+0x205926>
  80692e:	53                   	push   %rbx
  80692f:	51                   	push   %rcx
  806930:	52                   	push   %rdx
  806931:	41 50                	push   %r8
  806933:	41 51                	push   %r9
  806935:	41 52                	push   %r10
  806937:	48 8d 0d 56 b1 ff ff 	lea    -0x4eaa(%rip),%rcx        # 801a94 <_end+0x200a0c>
  80693e:	48 89 01             	mov    %rax,(%rcx)
  806941:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  806948:	48 89 c1             	mov    %rax,%rcx
  80694b:	48 89 f2             	mov    %rsi,%rdx
  80694e:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  806955:	e8 8d ff ff ff       	callq  8068e7 <_end+0x20585f>
  80695a:	49 89 c8             	mov    %rcx,%r8
  80695d:	48 89 d0             	mov    %rdx,%rax
  806960:	48 31 ff             	xor    %rdi,%rdi
  806963:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
  806967:	4d 31 c9             	xor    %r9,%r9
  80696a:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  806971:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
  806978:	48 39 d8             	cmp    %rbx,%rax
  80697b:	74 15                	je     806992 <_end+0x20590a>
  80697d:	48 c7 c3 02 00 00 00 	mov    $0x2,%rbx
  806984:	48 39 d8             	cmp    %rbx,%rax
  806987:	75 4f                	jne    8069d8 <_end+0x205950>
  806989:	48 c7 c2 03 00 00 00 	mov    $0x3,%rdx
  806990:	eb 07                	jmp    806999 <_end+0x205911>
  806992:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  806999:	e8 20 ff ff ff       	callq  8068be <_end+0x205836>
  80699e:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
  8069a5:	41 5a                	pop    %r10
  8069a7:	41 59                	pop    %r9
  8069a9:	41 58                	pop    %r8
  8069ab:	5a                   	pop    %rdx
  8069ac:	59                   	pop    %rcx
  8069ad:	5b                   	pop    %rbx
  8069ae:	5d                   	pop    %rbp
  8069af:	c3                   	retq   
  8069b0:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 8069c3 <_end+0x20593b>
  8069b7:	48 c7 c2 15 00 00 00 	mov    $0x15,%rdx
  8069be:	e9 5e 03 00 00       	jmpq   806d21 <_end+0x205c99>
  8069c3:	45 52                	rex.RB push %r10
  8069c5:	52                   	push   %rdx
  8069c6:	3a 20                	cmp    (%rax),%ah
  8069c8:	6f                   	outsl  %ds:(%rsi),(%dx)
  8069c9:	70 65                	jo     806a30 <_end+0x2059a8>
  8069cb:	6e                   	outsb  %ds:(%rsi),(%dx)
  8069cc:	66 69 6c 65 20 6e 65 	imul   $0x656e,0x20(%rbp,%riz,2),%bp
  8069d3:	67 20 66 64          	and    %ah,0x64(%esi)
  8069d7:	0a 48 8d             	or     -0x73(%rax),%cl
  8069da:	35 0c 00 00 00       	xor    $0xc,%eax
  8069df:	48 c7 c2 1e 00 00 00 	mov    $0x1e,%rdx
  8069e6:	e9 36 03 00 00       	jmpq   806d21 <_end+0x205c99>
  8069eb:	45 52                	rex.RB push %r10
  8069ed:	52                   	push   %rdx
  8069ee:	3a 20                	cmp    (%rax),%ah
  8069f0:	6f                   	outsl  %ds:(%rsi),(%dx)
  8069f1:	70 65                	jo     806a58 <_end+0x2059d0>
  8069f3:	6e                   	outsb  %ds:(%rsi),(%dx)
  8069f4:	66 69 6c 65 20 75 6e 	imul   $0x6e75,0x20(%rbp,%riz,2),%bp
  8069fb:	64 65 66 69 6e 65 64 	fs imul $0x2064,%gs:0x65(%rsi),%bp
  806a02:	20 
  806a03:	66 6c                	data16 insb (%dx),%es:(%rdi)
  806a05:	61                   	(bad)  
  806a06:	67 73 0a             	addr32 jae 806a13 <_end+0x20598b>
  806a09:	48 8d 35 0c 00 00 00 	lea    0xc(%rip),%rsi        # 806a1c <_end+0x205994>
  806a10:	48 c7 c2 20 00 00 00 	mov    $0x20,%rdx
  806a17:	e9 05 03 00 00       	jmpq   806d21 <_end+0x205c99>
  806a1c:	45 52                	rex.RB push %r10
  806a1e:	52                   	push   %rdx
  806a1f:	3a 20                	cmp    (%rax),%ah
  806a21:	6f                   	outsl  %ds:(%rsi),(%dx)
  806a22:	70 65                	jo     806a89 <_end+0x205a01>
  806a24:	6e                   	outsb  %ds:(%rsi),(%dx)
  806a25:	66 69 6c 65 20 72 65 	imul   $0x6572,0x20(%rbp,%riz,2),%bp
  806a2c:	74 75                	je     806aa3 <_end+0x205a1b>
  806a2e:	72 6e                	jb     806a9e <_end+0x205a16>
  806a30:	65 64 20 7a 65       	gs and %bh,%fs:0x65(%rdx)
  806a35:	72 6f                	jb     806aa6 <_end+0x205a1e>
  806a37:	20 70 74             	and    %dh,0x74(%rax)
  806a3a:	72 0a                	jb     806a46 <_end+0x2059be>
  806a3c:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  806a43:	48 89 c7             	mov    %rax,%rdi
  806a46:	0f 05                	syscall 
  806a48:	c3                   	retq   
  806a49:	51                   	push   %rcx
  806a4a:	50                   	push   %rax
  806a4b:	53                   	push   %rbx
  806a4c:	48 89 c8             	mov    %rcx,%rax
  806a4f:	48 89 d1             	mov    %rdx,%rcx
  806a52:	8a 16                	mov    (%rsi),%dl
  806a54:	48 39 c6             	cmp    %rax,%rsi
  806a57:	74 0e                	je     806a67 <_end+0x2059df>
  806a59:	7f 24                	jg     806a7f <_end+0x2059f7>
  806a5b:	88 17                	mov    %dl,(%rdi)
  806a5d:	48 ff c6             	inc    %rsi
  806a60:	48 ff c7             	inc    %rdi
  806a63:	e2 ed                	loop   806a52 <_end+0x2059ca>
  806a65:	eb 36                	jmp    806a9d <_end+0x205a15>
  806a67:	50                   	push   %rax
  806a68:	48 8b 1d d6 d0 ff ff 	mov    -0x2f2a(%rip),%rbx        # 803b45 <_end+0x202abd>
  806a6f:	48 8b 05 5a ed ff ff 	mov    -0x12a6(%rip),%rax        # 8057d0 <_end+0x204748>
  806a76:	48 01 df             	add    %rbx,%rdi
  806a79:	48 01 de             	add    %rbx,%rsi
  806a7c:	58                   	pop    %rax
  806a7d:	eb d3                	jmp    806a52 <_end+0x2059ca>
  806a7f:	48 8b 1d 4a ed ff ff 	mov    -0x12b6(%rip),%rbx        # 8057d0 <_end+0x204748>
  806a86:	48 29 df             	sub    %rbx,%rdi
  806a89:	8a 16                	mov    (%rsi),%dl
  806a8b:	88 17                	mov    %dl,(%rdi)
  806a8d:	48 ff c6             	inc    %rsi
  806a90:	48 ff c7             	inc    %rdi
  806a93:	48 ff c9             	dec    %rcx
  806a96:	48 85 c9             	test   %rcx,%rcx
  806a99:	74 02                	je     806a9d <_end+0x205a15>
  806a9b:	eb ec                	jmp    806a89 <_end+0x205a01>
  806a9d:	5b                   	pop    %rbx
  806a9e:	58                   	pop    %rax
  806a9f:	59                   	pop    %rcx
  806aa0:	c3                   	retq   
  806aa1:	48 31 c0             	xor    %rax,%rax
  806aa4:	51                   	push   %rcx
  806aa5:	53                   	push   %rbx
  806aa6:	48 c7 c1 64 00 00 00 	mov    $0x64,%rcx
  806aad:	f2 ae                	repnz scas %es:(%rdi),%al
  806aaf:	48 c7 c3 64 00 00 00 	mov    $0x64,%rbx
  806ab6:	48 29 cb             	sub    %rcx,%rbx
  806ab9:	48 89 d8             	mov    %rbx,%rax
  806abc:	48 ff c8             	dec    %rax
  806abf:	5b                   	pop    %rbx
  806ac0:	59                   	pop    %rcx
  806ac1:	c3                   	retq   
  806ac2:	50                   	push   %rax
  806ac3:	53                   	push   %rbx
  806ac4:	52                   	push   %rdx
  806ac5:	41 50                	push   %r8
  806ac7:	49 89 c8             	mov    %rcx,%r8
  806aca:	48 89 f1             	mov    %rsi,%rcx
  806acd:	83 3f 01             	cmpl   $0x1,(%rdi)
  806ad0:	75 45                	jne    806b17 <_end+0x205a8f>
  806ad2:	51                   	push   %rcx
  806ad3:	57                   	push   %rdi
  806ad4:	52                   	push   %rdx
  806ad5:	48 8b 47 10          	mov    0x10(%rdi),%rax
  806ad9:	48 8b 5f 28          	mov    0x28(%rdi),%rbx
  806add:	48 29 d0             	sub    %rdx,%rax
  806ae0:	4c 01 c0             	add    %r8,%rax
  806ae3:	48 8b 77 10          	mov    0x10(%rdi),%rsi
  806ae7:	48 01 f3             	add    %rsi,%rbx
  806aea:	48 29 d3             	sub    %rdx,%rbx
  806aed:	4c 01 c3             	add    %r8,%rbx
  806af0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
  806af6:	48 89 c7             	mov    %rax,%rdi
  806af9:	48 29 fb             	sub    %rdi,%rbx
  806afc:	48 89 de             	mov    %rbx,%rsi
  806aff:	48 c7 c2 07 00 00 00 	mov    $0x7,%rdx
  806b06:	48 c7 c0 0a 00 00 00 	mov    $0xa,%rax
  806b0d:	0f 05                	syscall 
  806b0f:	5a                   	pop    %rdx
  806b10:	5f                   	pop    %rdi
  806b11:	59                   	pop    %rcx
  806b12:	48 85 c0             	test   %rax,%rax
  806b15:	75 0c                	jne    806b23 <_end+0x205a9b>
  806b17:	48 83 c7 38          	add    $0x38,%rdi
  806b1b:	e2 b0                	loop   806acd <_end+0x205a45>
  806b1d:	41 58                	pop    %r8
  806b1f:	5a                   	pop    %rdx
  806b20:	5b                   	pop    %rbx
  806b21:	58                   	pop    %rax
  806b22:	c3                   	retq   
  806b23:	41 58                	pop    %r8
  806b25:	5a                   	pop    %rdx
  806b26:	5b                   	pop    %rbx
  806b27:	58                   	pop    %rax
  806b28:	0f 85 dc 01 00 00    	jne    806d0a <_end+0x205c82>
  806b2e:	50                   	push   %rax
  806b2f:	53                   	push   %rbx
  806b30:	48 8d 05 f1 ae ff ff 	lea    -0x510f(%rip),%rax        # 801a28 <_end+0x2009a0>
  806b37:	48 29 f0             	sub    %rsi,%rax
  806b3a:	48 29 f8             	sub    %rdi,%rax
  806b3d:	48 8d 3d d1 ce ff ff 	lea    -0x312f(%rip),%rdi        # 803a15 <_end+0x20298d>
  806b44:	48 89 07             	mov    %rax,(%rdi)
  806b47:	5b                   	pop    %rbx
  806b48:	58                   	pop    %rax
  806b49:	c3                   	retq   
  806b4a:	50                   	push   %rax
  806b4b:	53                   	push   %rbx
  806b4c:	41 51                	push   %r9
  806b4e:	41 52                	push   %r10
  806b50:	49 89 ca             	mov    %rcx,%r10
  806b53:	48 89 f1             	mov    %rsi,%rcx
  806b56:	83 3f 01             	cmpl   $0x1,(%rdi)
  806b59:	75 35                	jne    806b90 <_end+0x205b08>
  806b5b:	48 8b 47 08          	mov    0x8(%rdi),%rax
  806b5f:	48 85 c0             	test   %rax,%rax
  806b62:	74 34                	je     806b98 <_end+0x205b10>
  806b64:	eb 00                	jmp    806b66 <_end+0x205ade>
  806b66:	52                   	push   %rdx
  806b67:	48 8b 47 10          	mov    0x10(%rdi),%rax
  806b6b:	48 29 d0             	sub    %rdx,%rax
  806b6e:	4c 01 d0             	add    %r10,%rax
  806b71:	51                   	push   %rcx
  806b72:	48 89 c6             	mov    %rax,%rsi
  806b75:	48 8b 57 28          	mov    0x28(%rdi),%rdx
  806b79:	48 89 fb             	mov    %rdi,%rbx
  806b7c:	48 89 c7             	mov    %rax,%rdi
  806b7f:	48 83 ef 38          	sub    $0x38,%rdi
  806b83:	4c 89 c1             	mov    %r8,%rcx
  806b86:	e8 be fe ff ff       	callq  806a49 <_end+0x2059c1>
  806b8b:	59                   	pop    %rcx
  806b8c:	5a                   	pop    %rdx
  806b8d:	48 89 df             	mov    %rbx,%rdi
  806b90:	48 83 c7 38          	add    $0x38,%rdi
  806b94:	e2 c0                	loop   806b56 <_end+0x205ace>
  806b96:	eb 4b                	jmp    806be3 <_end+0x205b5b>
  806b98:	52                   	push   %rdx
  806b99:	48 89 fb             	mov    %rdi,%rbx
  806b9c:	48 8b 47 10          	mov    0x10(%rdi),%rax
  806ba0:	48 29 d0             	sub    %rdx,%rax
  806ba3:	4c 01 d0             	add    %r10,%rax
  806ba6:	48 89 c6             	mov    %rax,%rsi
  806ba9:	48 8b 57 28          	mov    0x28(%rdi),%rdx
  806bad:	48 8d 05 dd 01 00 00 	lea    0x1dd(%rip),%rax        # 806d91 <_end+0x205d09>
  806bb4:	4c 8b 0d b9 f7 ff ff 	mov    -0x847(%rip),%r9        # 806374 <_end+0x2052ec>
  806bbb:	4c 01 c8             	add    %r9,%rax
  806bbe:	41 52                	push   %r10
  806bc0:	51                   	push   %rcx
  806bc1:	4c 8b 50 40          	mov    0x40(%rax),%r10
  806bc5:	4c 29 d2             	sub    %r10,%rdx
  806bc8:	4c 01 d6             	add    %r10,%rsi
  806bcb:	48 89 f7             	mov    %rsi,%rdi
  806bce:	48 83 ef 38          	sub    $0x38,%rdi
  806bd2:	4c 89 c1             	mov    %r8,%rcx
  806bd5:	e8 6f fe ff ff       	callq  806a49 <_end+0x2059c1>
  806bda:	59                   	pop    %rcx
  806bdb:	41 5a                	pop    %r10
  806bdd:	5a                   	pop    %rdx
  806bde:	48 89 df             	mov    %rbx,%rdi
  806be1:	eb ad                	jmp    806b90 <_end+0x205b08>
  806be3:	41 5a                	pop    %r10
  806be5:	41 59                	pop    %r9
  806be7:	5b                   	pop    %rbx
  806be8:	58                   	pop    %rax
  806be9:	c3                   	retq   
  806bea:	50                   	push   %rax
  806beb:	52                   	push   %rdx
  806bec:	57                   	push   %rdi
  806bed:	56                   	push   %rsi
  806bee:	41 50                	push   %r8
  806bf0:	4c 8b 05 7d f7 ff ff 	mov    -0x883(%rip),%r8        # 806374 <_end+0x2052ec>
  806bf7:	48 8d 3d 93 01 00 00 	lea    0x193(%rip),%rdi        # 806d91 <_end+0x205d09>
  806bfe:	4c 01 c7             	add    %r8,%rdi
  806c01:	48 8b 77 38          	mov    0x38(%rdi),%rsi
  806c05:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
  806c09:	e8 20 ff ff ff       	callq  806b2e <_end+0x205aa6>
  806c0e:	48 8d 3d 08 ce ff ff 	lea    -0x31f8(%rip),%rdi        # 803a1d <_end+0x202995>
  806c15:	48 8b 35 f9 cd ff ff 	mov    -0x3207(%rip),%rsi        # 803a15 <_end+0x20298d>
  806c1c:	48 8b 46 20          	mov    0x20(%rsi),%rax
  806c20:	48 01 f0             	add    %rsi,%rax
  806c23:	48 89 07             	mov    %rax,(%rdi)
  806c26:	48 8b 46 38          	mov    0x38(%rsi),%rax
  806c2a:	48 8d 1d fc cd ff ff 	lea    -0x3204(%rip),%rbx        # 803a2d <_end+0x2029a5>
  806c31:	88 03                	mov    %al,(%rbx)
  806c33:	48 8d 3d 57 01 00 00 	lea    0x157(%rip),%rdi        # 806d91 <_end+0x205d09>
  806c3a:	4c 8b 05 33 f7 ff ff 	mov    -0x8cd(%rip),%r8        # 806374 <_end+0x2052ec>
  806c41:	4c 01 c7             	add    %r8,%rdi
  806c44:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  806c48:	48 8b 3d ce cd ff ff 	mov    -0x3232(%rip),%rdi        # 803a1d <_end+0x202995>
  806c4f:	48 8b 35 d7 cd ff ff 	mov    -0x3229(%rip),%rsi        # 803a2d <_end+0x2029a5>
  806c56:	48 8b 0d b8 cd ff ff 	mov    -0x3248(%rip),%rcx        # 803a15 <_end+0x20298d>
  806c5d:	e8 60 fe ff ff       	callq  806ac2 <_end+0x205a3a>
  806c62:	48 8d 05 28 01 00 00 	lea    0x128(%rip),%rax        # 806d91 <_end+0x205d09>
  806c69:	4c 8b 05 04 f7 ff ff 	mov    -0x8fc(%rip),%r8        # 806374 <_end+0x2052ec>
  806c70:	4c 01 c0             	add    %r8,%rax
  806c73:	48 8b 70 10          	mov    0x10(%rax),%rsi
  806c77:	48 8b 38             	mov    (%rax),%rdi
  806c7a:	48 85 ff             	test   %rdi,%rdi
  806c7d:	74 4e                	je     806ccd <_end+0x205c45>
  806c7f:	48 29 f7             	sub    %rsi,%rdi
  806c82:	48 8b 0d 8c cd ff ff 	mov    -0x3274(%rip),%rcx        # 803a15 <_end+0x20298d>
  806c89:	48 01 cf             	add    %rcx,%rdi
  806c8c:	48 8d 1d ba ce ff ff 	lea    -0x3146(%rip),%rbx        # 803b4d <_end+0x202ac5>
  806c93:	48 89 3b             	mov    %rdi,(%rbx)
  806c96:	48 c7 c6 c8 ff ff ff 	mov    $0xffffffffffffffc8,%rsi
  806c9d:	48 8b 50 08          	mov    0x8(%rax),%rdx
  806ca1:	48 8d 1d 9d ce ff ff 	lea    -0x3163(%rip),%rbx        # 803b45 <_end+0x202abd>
  806ca8:	48 89 13             	mov    %rdx,(%rbx)
  806cab:	48 8b 48 10          	mov    0x10(%rax),%rcx
  806caf:	48 8b 05 77 cd ff ff 	mov    -0x3289(%rip),%rax        # 803a2d <_end+0x2029a5>
  806cb6:	48 83 e8 01          	sub    $0x1,%rax
  806cba:	48 c7 c3 38 00 00 00 	mov    $0x38,%rbx
  806cc1:	48 0f af d8          	imul   %rax,%rbx
  806cc5:	48 01 d9             	add    %rbx,%rcx
  806cc8:	e8 e7 ec ff ff       	callq  8059b4 <_end+0x20492c>
  806ccd:	48 8d 05 bd 00 00 00 	lea    0xbd(%rip),%rax        # 806d91 <_end+0x205d09>
  806cd4:	4c 8b 05 99 f6 ff ff 	mov    -0x967(%rip),%r8        # 806374 <_end+0x2052ec>
  806cdb:	4c 01 c0             	add    %r8,%rax
  806cde:	4c 8b 05 68 ce ff ff 	mov    -0x3198(%rip),%r8        # 803b4d <_end+0x202ac5>
  806ce5:	48 8b 50 10          	mov    0x10(%rax),%rdx
  806ce9:	48 8b 3d 2d cd ff ff 	mov    -0x32d3(%rip),%rdi        # 803a1d <_end+0x202995>
  806cf0:	48 8b 35 36 cd ff ff 	mov    -0x32ca(%rip),%rsi        # 803a2d <_end+0x2029a5>
  806cf7:	48 8b 0d 17 cd ff ff 	mov    -0x32e9(%rip),%rcx        # 803a15 <_end+0x20298d>
  806cfe:	e8 47 fe ff ff       	callq  806b4a <_end+0x205ac2>
  806d03:	41 58                	pop    %r8
  806d05:	5e                   	pop    %rsi
  806d06:	5f                   	pop    %rdi
  806d07:	5a                   	pop    %rdx
  806d08:	58                   	pop    %rax
  806d09:	c3                   	retq   
  806d0a:	48 8b 25 d2 e6 ff ff 	mov    -0x192e(%rip),%rsp        # 8053e3 <_end+0x20435b>
  806d11:	48 c7 c0 3c 00 00 00 	mov    $0x3c,%rax
  806d18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  806d1f:	0f 05                	syscall 
  806d21:	e8 16 fd ff ff       	callq  806a3c <_end+0x2059b4>
  806d26:	eb 00                	jmp    806d28 <_end+0x205ca0>
  806d28:	48 8b 25 b4 e6 ff ff 	mov    -0x194c(%rip),%rsp        # 8053e3 <_end+0x20435b>
  806d2f:	48 8b 05 b5 e6 ff ff 	mov    -0x194b(%rip),%rax        # 8053eb <_end+0x204363>
  806d36:	48 8b 1d b6 e6 ff ff 	mov    -0x194a(%rip),%rbx        # 8053f3 <_end+0x20436b>
  806d3d:	48 8b 15 b7 e6 ff ff 	mov    -0x1949(%rip),%rdx        # 8053fb <_end+0x204373>
  806d44:	48 8b 0d b8 e6 ff ff 	mov    -0x1948(%rip),%rcx        # 805403 <_end+0x20437b>
  806d4b:	48 8b 3d b9 e6 ff ff 	mov    -0x1947(%rip),%rdi        # 80540b <_end+0x204383>
  806d52:	48 8b 35 ba e6 ff ff 	mov    -0x1946(%rip),%rsi        # 805413 <_end+0x20438b>
  806d59:	4c 8b 05 bb e6 ff ff 	mov    -0x1945(%rip),%r8        # 80541b <_end+0x204393>
  806d60:	4c 8b 0d bc e6 ff ff 	mov    -0x1944(%rip),%r9        # 805423 <_end+0x20439b>
  806d67:	4c 8b 15 bd e6 ff ff 	mov    -0x1943(%rip),%r10        # 80542b <_end+0x2043a3>
  806d6e:	4c 8b 1d be e6 ff ff 	mov    -0x1942(%rip),%r11        # 805433 <_end+0x2043ab>
  806d75:	4c 8b 25 bf e6 ff ff 	mov    -0x1941(%rip),%r12        # 80543b <_end+0x2043b3>
  806d7c:	4c 8b 2d c0 e6 ff ff 	mov    -0x1940(%rip),%r13        # 805443 <_end+0x2043bb>
  806d83:	4c 8b 35 c1 e6 ff ff 	mov    -0x193f(%rip),%r14        # 80544b <_end+0x2043c3>
  806d8a:	4c 8b 3d c2 e6 ff ff 	mov    -0x193e(%rip),%r15        # 805453 <_end+0x2043cb>
  806d91:	e8 54 fe ff ff       	callq  806bea <_end+0x205b62>
  806d96:	e9 95 96 bf ff       	jmpq   400430 <_init+0x30>
  806d9b:	90                   	nop
  806d9c:	60                   	(bad)  
  806d9d:	0e                   	(bad)  
  806d9e:	60                   	(bad)  
  806d9f:	00 00                	add    %al,(%rax)
  806da1:	00 00                	add    %al,(%rax)
  806da3:	00 e0                	add    %ah,%al
  806da5:	01 00                	add    %eax,(%rax)
  806da7:	00 00                	add    %al,(%rax)
  806da9:	00 00                	add    %al,(%rax)
  806dab:	00 00                	add    %al,(%rax)
  806dad:	00 40 00             	add    %al,0x0(%rax)
  806db0:	00 00                	add    %al,(%rax)
  806db2:	00 00                	add    %al,(%rax)
  806db4:	28 1a                	sub    %bl,(%rdx)
  806db6:	80 00 00             	addb   $0x0,(%rax)
	...
  806dc1:	00 00                	add    %al,(%rax)
  806dc3:	00 68 04             	add    %ch,0x4(%rax)
  806dc6:	00 00                	add    %al,(%rax)
  806dc8:	00 00                	add    %al,(%rax)
  806dca:	00 00                	add    %al,(%rax)
  806dcc:	68 04 40 00 00       	pushq  $0x4004
  806dd1:	00 00                	add    %al,(%rax)
  806dd3:	00 c0                	add    %al,%al
  806dd5:	15 40 00 00 00       	adc    $0x40,%eax
  806dda:	00 00                	add    %al,(%rax)
  806ddc:	70 02                	jo     806de0 <_end+0x205d58>
  806dde:	00 00                	add    %al,(%rax)
  806de0:	00 00                	add    %al,(%rax)
  806de2:	00 00                	add    %al,(%rax)
  806de4:	10 00                	adc    %al,(%rax)
  806de6:	00 00                	add    %al,(%rax)
  806de8:	00 00                	add    %al,(%rax)
	...
